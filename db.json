{"meta":{"version":1,"warehouse":"2.2.0"},"models":{"Asset":[{"_id":"source/favicon.ico","path":"favicon.ico","modified":1,"renderable":0},{"_id":"source/CNAME","path":"CNAME","modified":1,"renderable":0},{"_id":"themes/next/source/css/main.styl","path":"css/main.styl","modified":1,"renderable":1},{"_id":"themes/next/source/images/avatar.gif","path":"images/avatar.gif","modified":1,"renderable":1},{"_id":"themes/next/source/images/cc-by-nc-nd.svg","path":"images/cc-by-nc-nd.svg","modified":1,"renderable":1},{"_id":"themes/next/source/images/cc-by-nc-sa.svg","path":"images/cc-by-nc-sa.svg","modified":1,"renderable":1},{"_id":"themes/next/source/images/cc-by-nd.svg","path":"images/cc-by-nd.svg","modified":1,"renderable":1},{"_id":"themes/next/source/images/cc-by-nc.svg","path":"images/cc-by-nc.svg","modified":1,"renderable":1},{"_id":"themes/next/source/images/cc-by-sa.svg","path":"images/cc-by-sa.svg","modified":1,"renderable":1},{"_id":"themes/next/source/images/cc-zero.svg","path":"images/cc-zero.svg","modified":1,"renderable":1},{"_id":"themes/next/source/images/default.png","path":"images/default.png","modified":1,"renderable":1},{"_id":"themes/next/source/images/placeholder.gif","path":"images/placeholder.gif","modified":1,"renderable":1},{"_id":"themes/next/source/images/loading.gif","path":"images/loading.gif","modified":1,"renderable":1},{"_id":"themes/next/source/images/searchicon.png","path":"images/searchicon.png","modified":1,"renderable":1},{"_id":"themes/next/source/images/quote-l.svg","path":"images/quote-l.svg","modified":1,"renderable":1},{"_id":"themes/next/source/images/cc-by.svg","path":"images/cc-by.svg","modified":1,"renderable":1},{"_id":"themes/next/source/images/quote-r.svg","path":"images/quote-r.svg","modified":1,"renderable":1},{"_id":"themes/next/source/js/src/bootstrap.js","path":"js/src/bootstrap.js","modified":1,"renderable":1},{"_id":"themes/next/source/js/src/affix.js","path":"js/src/affix.js","modified":1,"renderable":1},{"_id":"themes/next/source/js/src/hook-duoshuo.js","path":"js/src/hook-duoshuo.js","modified":1,"renderable":1},{"_id":"themes/next/source/js/src/post-details.js","path":"js/src/post-details.js","modified":1,"renderable":1},{"_id":"themes/next/source/js/src/motion.js","path":"js/src/motion.js","modified":1,"renderable":1},{"_id":"themes/next/source/vendors/fastclick/LICENSE","path":"vendors/fastclick/LICENSE","modified":1,"renderable":1},{"_id":"themes/next/source/js/src/utils.js","path":"js/src/utils.js","modified":1,"renderable":1},{"_id":"themes/next/source/vendors/fastclick/bower.json","path":"vendors/fastclick/bower.json","modified":1,"renderable":1},{"_id":"themes/next/source/vendors/fastclick/README.md","path":"vendors/fastclick/README.md","modified":1,"renderable":1},{"_id":"themes/next/source/vendors/font-awesome/bower.json","path":"vendors/font-awesome/bower.json","modified":1,"renderable":1},{"_id":"themes/next/source/js/src/scrollspy.js","path":"js/src/scrollspy.js","modified":1,"renderable":1},{"_id":"themes/next/source/vendors/font-awesome/HELP-US-OUT.txt","path":"vendors/font-awesome/HELP-US-OUT.txt","modified":1,"renderable":1},{"_id":"themes/next/source/vendors/jquery_lazyload/README.md","path":"vendors/jquery_lazyload/README.md","modified":1,"renderable":1},{"_id":"themes/next/source/vendors/jquery_lazyload/CONTRIBUTING.md","path":"vendors/jquery_lazyload/CONTRIBUTING.md","modified":1,"renderable":1},{"_id":"themes/next/source/vendors/jquery_lazyload/jquery.scrollstop.js","path":"vendors/jquery_lazyload/jquery.scrollstop.js","modified":1,"renderable":1},{"_id":"themes/next/source/vendors/jquery_lazyload/jquery.lazyload.js","path":"vendors/jquery_lazyload/jquery.lazyload.js","modified":1,"renderable":1},{"_id":"themes/next/source/vendors/jquery_lazyload/bower.json","path":"vendors/jquery_lazyload/bower.json","modified":1,"renderable":1},{"_id":"themes/next/source/vendors/velocity/bower.json","path":"vendors/velocity/bower.json","modified":1,"renderable":1},{"_id":"themes/next/source/vendors/velocity/velocity.min.js","path":"vendors/velocity/velocity.min.js","modified":1,"renderable":1},{"_id":"themes/next/source/vendors/velocity/velocity.ui.js","path":"vendors/velocity/velocity.ui.js","modified":1,"renderable":1},{"_id":"themes/next/source/vendors/jquery/index.js","path":"vendors/jquery/index.js","modified":1,"renderable":1},{"_id":"themes/next/source/vendors/velocity/velocity.ui.min.js","path":"vendors/velocity/velocity.ui.min.js","modified":1,"renderable":1},{"_id":"themes/next/source/vendors/fancybox/source/blank.gif","path":"vendors/fancybox/source/blank.gif","modified":1,"renderable":1},{"_id":"themes/next/source/js/src/schemes/pisces.js","path":"js/src/schemes/pisces.js","modified":1,"renderable":1},{"_id":"themes/next/source/vendors/fancybox/source/fancybox_loading@2x.gif","path":"vendors/fancybox/source/fancybox_loading@2x.gif","modified":1,"renderable":1},{"_id":"themes/next/source/vendors/fancybox/source/fancybox_overlay.png","path":"vendors/fancybox/source/fancybox_overlay.png","modified":1,"renderable":1},{"_id":"themes/next/source/vendors/fancybox/source/fancybox_loading.gif","path":"vendors/fancybox/source/fancybox_loading.gif","modified":1,"renderable":1},{"_id":"themes/next/source/vendors/fancybox/source/fancybox_sprite@2x.png","path":"vendors/fancybox/source/fancybox_sprite@2x.png","modified":1,"renderable":1},{"_id":"themes/next/source/vendors/fancybox/source/fancybox_sprite.png","path":"vendors/fancybox/source/fancybox_sprite.png","modified":1,"renderable":1},{"_id":"themes/next/source/vendors/fancybox/source/jquery.fancybox.js","path":"vendors/fancybox/source/jquery.fancybox.js","modified":1,"renderable":1},{"_id":"themes/next/source/vendors/fancybox/source/jquery.fancybox.pack.js","path":"vendors/fancybox/source/jquery.fancybox.pack.js","modified":1,"renderable":1},{"_id":"themes/next/source/vendors/fancybox/source/jquery.fancybox.css","path":"vendors/fancybox/source/jquery.fancybox.css","modified":1,"renderable":1},{"_id":"themes/next/source/vendors/font-awesome/css/font-awesome.css","path":"vendors/font-awesome/css/font-awesome.css","modified":1,"renderable":1},{"_id":"themes/next/source/vendors/font-awesome/css/font-awesome.css.map","path":"vendors/font-awesome/css/font-awesome.css.map","modified":1,"renderable":1},{"_id":"themes/next/source/vendors/font-awesome/css/font-awesome.min.css","path":"vendors/font-awesome/css/font-awesome.min.css","modified":1,"renderable":1},{"_id":"themes/next/source/vendors/font-awesome/fonts/fontawesome-webfont.woff2","path":"vendors/font-awesome/fonts/fontawesome-webfont.woff2","modified":1,"renderable":1},{"_id":"themes/next/source/vendors/ua-parser-js/dist/ua-parser.min.js","path":"vendors/ua-parser-js/dist/ua-parser.min.js","modified":1,"renderable":1},{"_id":"themes/next/source/vendors/font-awesome/fonts/FontAwesome.otf","path":"vendors/font-awesome/fonts/FontAwesome.otf","modified":1,"renderable":1},{"_id":"themes/next/source/vendors/font-awesome/fonts/fontawesome-webfont.woff","path":"vendors/font-awesome/fonts/fontawesome-webfont.woff","modified":1,"renderable":1},{"_id":"themes/next/source/vendors/font-awesome/fonts/fontawesome-webfont.eot","path":"vendors/font-awesome/fonts/fontawesome-webfont.eot","modified":1,"renderable":1},{"_id":"themes/next/source/vendors/velocity/velocity.js","path":"vendors/velocity/velocity.js","modified":1,"renderable":1},{"_id":"themes/next/source/vendors/ua-parser-js/dist/ua-parser.pack.js","path":"vendors/ua-parser-js/dist/ua-parser.pack.js","modified":1,"renderable":1},{"_id":"themes/next/source/vendors/fastclick/lib/fastclick.js","path":"vendors/fastclick/lib/fastclick.js","modified":1,"renderable":1},{"_id":"themes/next/source/vendors/fastclick/lib/fastclick.min.js","path":"vendors/fastclick/lib/fastclick.min.js","modified":1,"renderable":1},{"_id":"themes/next/source/vendors/fancybox/source/helpers/fancybox_buttons.png","path":"vendors/fancybox/source/helpers/fancybox_buttons.png","modified":1,"renderable":1},{"_id":"themes/next/source/vendors/fancybox/source/helpers/jquery.fancybox-buttons.css","path":"vendors/fancybox/source/helpers/jquery.fancybox-buttons.css","modified":1,"renderable":1},{"_id":"themes/next/source/vendors/fancybox/source/helpers/jquery.fancybox-thumbs.css","path":"vendors/fancybox/source/helpers/jquery.fancybox-thumbs.css","modified":1,"renderable":1},{"_id":"themes/next/source/vendors/font-awesome/fonts/fontawesome-webfont.ttf","path":"vendors/font-awesome/fonts/fontawesome-webfont.ttf","modified":1,"renderable":1},{"_id":"themes/next/source/vendors/fancybox/source/helpers/jquery.fancybox-media.js","path":"vendors/fancybox/source/helpers/jquery.fancybox-media.js","modified":1,"renderable":1},{"_id":"themes/next/source/vendors/fancybox/source/helpers/jquery.fancybox-buttons.js","path":"vendors/fancybox/source/helpers/jquery.fancybox-buttons.js","modified":1,"renderable":1},{"_id":"themes/next/source/vendors/fancybox/source/helpers/jquery.fancybox-thumbs.js","path":"vendors/fancybox/source/helpers/jquery.fancybox-thumbs.js","modified":1,"renderable":1},{"_id":"themes/next/source/vendors/font-awesome/fonts/fontawesome-webfont.svg","path":"vendors/font-awesome/fonts/fontawesome-webfont.svg","modified":1,"renderable":1}],"Cache":[{"_id":"source/favicon.ico","hash":"97b9f793fc3bf685a2f7d7022b2631ef33a8c2f2","modified":1476855971395},{"_id":"source/CNAME","hash":"152c767bd754834bac156a4df40abb6bd16f2106","modified":1475421628308},{"_id":"themes/next/.bowerrc","hash":"80e096fdc1cf912ee85dd9f7e6e77fd40cf60f10","modified":1462394086000},{"_id":"themes/next/.editorconfig","hash":"792fd2bd8174ece1a75d5fd24ab16594886f3a7f","modified":1462394086000},{"_id":"themes/next/.hound.yml","hash":"b76daa84c9ca3ad292c78412603370a367cc2bc3","modified":1462394086000},{"_id":"themes/next/.javascript_ignore","hash":"d619ee13031908cd72666e4ff652d2ea3483b1c3","modified":1462394086000},{"_id":"themes/next/_config.yml","hash":"a906e6f1fbbf13ba305d011c61933824cddfae50","modified":1479087804222},{"_id":"themes/next/.jshintrc","hash":"9928f81bd822f6a8d67fdbc909b517178533bca9","modified":1462394086000},{"_id":"themes/next/bower.json","hash":"f89c6700a11d81e067cc97273ca6bf96cb88c8f9","modified":1462394086000},{"_id":"themes/next/gulpfile.coffee","hash":"26e5b1b945704c8bc78b928feede895c4c111c95","modified":1462394086000},{"_id":"themes/next/package.json","hash":"63e9c0f1dd9e5d7f51b4ae383981ef939a2ed45d","modified":1462394086000},{"_id":"source/_posts/D3.js-Draggable and Scalable Tree.md","hash":"cc6cf601169b29a71c893b8add695e8852b50ad7","modified":1477552801754},{"_id":"source/_posts/D3.js-完整的柱状图.md","hash":"59922d131c0ac175cfcbcb3b2003ca299e8a70aa","modified":1477549109403},{"_id":"source/_posts/答利器上的六个问题.md","hash":"e146c9612542bc4ec889c42ef785068ea2df0d1e","modified":1476859547542},{"_id":"source/about/index.md","hash":"b55eef3c4c2c8b2b97393d1f8bb693b67254d5d0","modified":1479090076379},{"_id":"themes/next/README.en.md","hash":"565ba52b3825b85a9f05b41183caca7f18b741d4","modified":1462394086000},{"_id":"source/tags/index.md","hash":"3df7fc398eafd3eaa9ed6a4aa1f8ec7964c92f49","modified":1475421628337},{"_id":"source/categories/index.md","hash":"eef387f8b4bbbed9e31ac58309773ece874886b7","modified":1475421628331},{"_id":"themes/next/languages/de.yml","hash":"786afba25cfc98845a20d9901823ebeebcd1cbbf","modified":1462394086000},{"_id":"themes/next/README.md","hash":"500b5606eb6a09c979d16128f8b00f4bf9bc95ac","modified":1462394086000},{"_id":"themes/next/languages/default.yml","hash":"9db835c0543ade5a89bc80ec5a898203227cf3d8","modified":1462394086000},{"_id":"themes/next/languages/en.yml","hash":"f03799cbdb5a33064ead080bcac4baca1f6bc5f9","modified":1462394086000},{"_id":"source/_posts/D3.js-入门篇.md","hash":"ba083b4c7f01bae70b9850fee138838978bc179c","modified":1477364441325},{"_id":"themes/next/languages/id.yml","hash":"147c01e41b931085ad14250fa900c2249dcbbdd7","modified":1462394086000},{"_id":"themes/next/languages/fr-FR.yml","hash":"1a084623c39de74301f3e92f9388a3a815a542ca","modified":1462394086000},{"_id":"themes/next/languages/ja.yml","hash":"a2c7b6301b5474aab798946fb700289df237c3cf","modified":1462394086000},{"_id":"themes/next/languages/pt.yml","hash":"ca239b39bf65c9462e59d51b12f0fe566d453197","modified":1462394086000},{"_id":"themes/next/languages/ru.yml","hash":"cc7b964a46587aea0e57b0a5269d8fd25570858e","modified":1462394086000},{"_id":"themes/next/languages/zh-Hans.yml","hash":"bea452bc49aed171a210d09bd6cddc4e846ea8ab","modified":1462394086000},{"_id":"themes/next/languages/zh-hk.yml","hash":"519ab3d817ec3bc5bfc91159c494b6b3c170bea7","modified":1462394086000},{"_id":"themes/next/languages/zh-tw.yml","hash":"6b1f345aaefc13e6723dc8a6741b59ac05c20dfd","modified":1462394086000},{"_id":"themes/next/layout/_layout.swig","hash":"74157f6cfd679ea11febec632542793f37c5e5d4","modified":1462394086000},{"_id":"themes/next/layout/index.swig","hash":"427d0b95b854e311ae363088ab39a393bf8fdc8b","modified":1462394086000},{"_id":"themes/next/layout/category.swig","hash":"6422d196ceaff4220d54b8af770e7e957f3364ad","modified":1462394086000},{"_id":"themes/next/layout/page.swig","hash":"8019d02232a6dd1a665b6a4d2daef8e5dd2f0049","modified":1462394086000},{"_id":"themes/next/layout/post.swig","hash":"e2e512142961ddfe77eba29eaa88f4a2ee43ae18","modified":1462394086000},{"_id":"themes/next/scripts/merge-configs.js","hash":"0c56be2e85c694247cfa327ea6d627b99ca265e8","modified":1462394086000},{"_id":"themes/next/layout/tag.swig","hash":"07cf49c49c39a14dfbe9ce8e7d7eea3d4d0a4911","modified":1462394086000},{"_id":"themes/next/layout/archive.swig","hash":"b5b59d70fc1563f482fa07afd435752774ad5981","modified":1462394086000},{"_id":"themes/next/source/fonts/.gitkeep","hash":"da39a3ee5e6b4b0d3255bfef95601890afd80709","modified":1462394086000},{"_id":"themes/next/test/.jshintrc","hash":"096ed6df627373edd820f24d46b8baf528dee61d","modified":1462394086000},{"_id":"themes/next/layout/_macro/post-collapse.swig","hash":"43c3433155ccd9abcbe7dce2e6bfa1f3a66af18b","modified":1462394086000},{"_id":"themes/next/test/intern.js","hash":"11fa8a4f5c3b4119a179ae0a2584c8187f907a73","modified":1462394086000},{"_id":"themes/next/test/helpers.js","hash":"a1f5de25154c3724ffc24a91ddc576cdbd60864f","modified":1462394086000},{"_id":"themes/next/layout/_macro/wechat-subscriber.swig","hash":"85327c2174d09c6d69c9033592e6c8f7eb7ac3ba","modified":1462394086000},{"_id":"themes/next/layout/_macro/sidebar.swig","hash":"b883289054ee54a374caad5d4883591beb94bd8b","modified":1462394086000},{"_id":"themes/next/layout/_macro/reward.swig","hash":"37e5b7c42ec17b9b6b786c5512bcc481a21c974e","modified":1462394086000},{"_id":"themes/next/layout/_macro/post.swig","hash":"1ca03011bed92614832b1343b65be92183957dc5","modified":1462394086000},{"_id":"themes/next/layout/_partials/duoshuo-hot-articles.swig","hash":"5d4638c46aef65bf32a01681495b62416ccc98db","modified":1462394086000},{"_id":"themes/next/layout/_partials/comments.swig","hash":"82a9bc2ba60ce68419128ff60624bd74b15dfb78","modified":1462394086000},{"_id":"themes/next/layout/_partials/pagination.swig","hash":"9e8e21d194ef44d271b1cca0bc1448c14d7edf4f","modified":1462394086000},{"_id":"themes/next/layout/_partials/footer.swig","hash":"0ce71d8322ea7dea82d9371fa2fe13949aa870e3","modified":1462394086000},{"_id":"themes/next/layout/_partials/header.swig","hash":"963a765dc00e6ac43cfc53ffaf5725eb854cf95e","modified":1462394086000},{"_id":"themes/next/layout/_partials/search.swig","hash":"011b9d6c9f0a2f4654908ea20b9391f9b7981271","modified":1462394086000},{"_id":"themes/next/layout/_scripts/baidu-push.swig","hash":"82d060fe055d6e423bbc9199f82dfe5c68e74779","modified":1462394086000},{"_id":"themes/next/layout/_partials/head.swig","hash":"f83b1c55bedd2c1a3eb734c72c6997795a4e5f99","modified":1462394086000},{"_id":"themes/next/scripts/tags/center-quote.js","hash":"535fc542781021c4326dec24d8495cbb1387634a","modified":1462394086000},{"_id":"themes/next/scripts/tags/full-image.js","hash":"3acce36db0feb11a982c6c799aa6b6b47df2827c","modified":1462394086000},{"_id":"themes/next/scripts/tags/group-pictures.js","hash":"49252824cd53184dc9b97b2f2d87ff28e1b3ef27","modified":1462394086000},{"_id":"themes/next/layout/_scripts/commons.swig","hash":"766b2bdda29523ed6cd8d7aa197f996022f8fd94","modified":1462394086000},{"_id":"themes/next/layout/_scripts/boostrap.swig","hash":"03aaebe9d50f6acb007ec38cc04acd1cfceb404d","modified":1462394086000},{"_id":"themes/next/source/css/main.styl","hash":"20702c48d6053c92c5bcdbc68e8d0ef1369848a0","modified":1462394086000},{"_id":"themes/next/layout/_scripts/vendors.swig","hash":"0b91cadecead8e0b5211cc42b085998d94af503a","modified":1462394086000},{"_id":"themes/next/source/images/avatar.gif","hash":"264082bb3a1af70d5499c7d22b0902cb454b6d12","modified":1462394086000},{"_id":"themes/next/source/images/cc-by-nc-nd.svg","hash":"c6524ece3f8039a5f612feaf865d21ec8a794564","modified":1462394086000},{"_id":"themes/next/source/images/cc-by-nc-sa.svg","hash":"3031be41e8753c70508aa88e84ed8f4f653f157e","modified":1462394086000},{"_id":"themes/next/source/images/cc-by-nd.svg","hash":"c563508ce9ced1e66948024ba1153400ac0e0621","modified":1462394086000},{"_id":"themes/next/source/images/cc-by-nc.svg","hash":"8d39b39d88f8501c0d27f8df9aae47136ebc59b7","modified":1462394086000},{"_id":"themes/next/source/images/cc-by-sa.svg","hash":"aa4742d733c8af8d38d4c183b8adbdcab045872e","modified":1462394086000},{"_id":"themes/next/source/images/cc-zero.svg","hash":"87669bf8ac268a91d027a0a4802c92a1473e9030","modified":1462394086000},{"_id":"themes/next/source/images/default.png","hash":"533ed1d59ed5a8a3dec630be3494a5cc9e3d6716","modified":1476856444723},{"_id":"themes/next/source/images/placeholder.gif","hash":"5fbd472222feb8a22cf5b8aa5dc5b8e13af88e2b","modified":1462394086000},{"_id":"themes/next/source/images/loading.gif","hash":"5fbd472222feb8a22cf5b8aa5dc5b8e13af88e2b","modified":1462394086000},{"_id":"themes/next/source/images/searchicon.png","hash":"67727a6a969be0b2659b908518fa6706eed307b8","modified":1462394086000},{"_id":"themes/next/layout/_scripts/schemes/mist.swig","hash":"da39a3ee5e6b4b0d3255bfef95601890afd80709","modified":1462394086000},{"_id":"themes/next/layout/_scripts/schemes/muse.swig","hash":"da39a3ee5e6b4b0d3255bfef95601890afd80709","modified":1462394086000},{"_id":"themes/next/source/css/_mixins/Mist.styl","hash":"da39a3ee5e6b4b0d3255bfef95601890afd80709","modified":1462394086000},{"_id":"themes/next/source/css/_mixins/Muse.styl","hash":"da39a3ee5e6b4b0d3255bfef95601890afd80709","modified":1462394086000},{"_id":"themes/next/source/css/_mixins/custom.styl","hash":"da39a3ee5e6b4b0d3255bfef95601890afd80709","modified":1462394086000},{"_id":"themes/next/source/css/_variables/Muse.styl","hash":"da39a3ee5e6b4b0d3255bfef95601890afd80709","modified":1462394086000},{"_id":"themes/next/source/css/_variables/custom.styl","hash":"da39a3ee5e6b4b0d3255bfef95601890afd80709","modified":1462394086000},{"_id":"themes/next/source/images/quote-l.svg","hash":"94e870b4c8c48da61d09522196d4dd40e277a98f","modified":1462394086000},{"_id":"themes/next/source/images/cc-by.svg","hash":"28a0a4fe355a974a5e42f68031652b76798d4f7e","modified":1462394086000},{"_id":"themes/next/source/images/quote-r.svg","hash":"e60ae504f9d99b712c793c3740c6b100d057d4ec","modified":1462394086000},{"_id":"themes/next/layout/_partials/search/localsearch.swig","hash":"ff5523d5dacaa77a55a24e50e6e6530c3b98bfad","modified":1462394086000},{"_id":"themes/next/layout/_partials/search/tinysou.swig","hash":"eefe2388ff3d424694045eda21346989b123977c","modified":1462394086000},{"_id":"themes/next/layout/_partials/share/baidushare.swig","hash":"7ca5cb4daa58b3504e17f3e02975e794bc634658","modified":1462394086000},{"_id":"themes/next/layout/_partials/share/duoshuo_share.swig","hash":"89c5a5240ecb223acfe1d12377df5562a943fd5d","modified":1462394086000},{"_id":"themes/next/layout/_partials/head/external-fonts.swig","hash":"7ce76358411184482bb0934e70037949dd0da8ca","modified":1462394086000},{"_id":"themes/next/layout/_partials/share/jiathis.swig","hash":"63315fcf210799f894208c9f512737096df84962","modified":1462394086000},{"_id":"themes/next/layout/_scripts/pages/post-details.swig","hash":"069d1357c717572256e5cdee09574ebce529cbae","modified":1462394086000},{"_id":"themes/next/layout/_partials/search/swiftype.swig","hash":"959b7e04a96a5596056e4009b73b6489c117597e","modified":1462394086000},{"_id":"themes/next/layout/_scripts/schemes/pisces.swig","hash":"a44acf9b0d0f44ef3dfc767376a95c984cc127de","modified":1462394086000},{"_id":"themes/next/layout/_scripts/third-party/analytics.swig","hash":"0a89c04055bade7baa5962f1d5aefe438d83a244","modified":1462394086000},{"_id":"themes/next/layout/_scripts/third-party/comments.swig","hash":"907b931d775d32405d02a25b3b0a3ac03bf804d0","modified":1462394086000},{"_id":"themes/next/layout/_scripts/third-party/mathjax.swig","hash":"5bafc33f57508d1d04a9930165240f6e9efa8d6d","modified":1462394086000},{"_id":"themes/next/layout/_partials/share/add-this.swig","hash":"c07f7b2f264e5215b8ed42d67e8cef2477558364","modified":1462394086000},{"_id":"themes/next/layout/_scripts/third-party/localsearch.swig","hash":"1561bd0c107d725252c6d746e9ac177fc18f93bf","modified":1462394086000},{"_id":"themes/next/layout/_scripts/third-party/lean-analytics.swig","hash":"069bb17fb1db3bc7c85c88efa3ed94ab6becbe2c","modified":1462394086000},{"_id":"themes/next/source/css/_custom/custom.styl","hash":"328d9a9696cc2ccf59c67d3c26000d569f46344c","modified":1462394086000},{"_id":"themes/next/layout/_scripts/third-party/tinysou.swig","hash":"cb3a5d36dbe1630bab84e03a52733a46df7c219b","modified":1462394086000},{"_id":"themes/next/source/css/_mixins/Pisces.styl","hash":"715d5b40dc52f319fe4bff0325beb874774d9bd9","modified":1462394086000},{"_id":"themes/next/source/css/_variables/Mist.styl","hash":"c8d35a6b9e3bff6d8fdb66de853065af9d37562d","modified":1462394086000},{"_id":"themes/next/source/css/_mixins/base.styl","hash":"78a83c38f69a8747bb74e420e6c9eeef1ea76525","modified":1462394086000},{"_id":"themes/next/source/css/_variables/base.styl","hash":"17624186f7a1f28daddea258d044f8e03b2f4bea","modified":1462394086000},{"_id":"themes/next/source/js/src/bootstrap.js","hash":"39bf93769d9080fa01a9a875183b43198f79bc19","modified":1462394086000},{"_id":"themes/next/source/js/src/affix.js","hash":"978e0422b5bf1b560236d8d10ebc1adcf66392e3","modified":1462394086000},{"_id":"themes/next/source/js/src/hook-duoshuo.js","hash":"a6119070c0119f33e08b29da7d2cce2635eb40a0","modified":1462394086000},{"_id":"themes/next/source/js/src/post-details.js","hash":"2038f54e289b6da5def09689e69f623187147be5","modified":1462394086000},{"_id":"themes/next/source/css/_variables/Pisces.styl","hash":"3ead77befa064d6327dc7afd0a5af7be59a5f196","modified":1462394086000},{"_id":"themes/next/source/js/src/motion.js","hash":"269414e84df544a4ccb88519f6abae4943db3c67","modified":1462394086000},{"_id":"themes/next/source/vendors/fastclick/.bower.json","hash":"93ebd5b35e632f714dcf1753e1f6db77ec74449b","modified":1462394086000},{"_id":"themes/next/source/vendors/fancybox/.gitattributes","hash":"2db21acfbd457452462f71cc4048a943ee61b8e0","modified":1462394086000},{"_id":"themes/next/source/vendors/fancybox/.bower.json","hash":"cc40a9b11e52348e554c84e4a5c058056f6b7aeb","modified":1462394086000},{"_id":"themes/next/source/vendors/fastclick/LICENSE","hash":"dcd5b6b43095d9e90353a28b09cb269de8d4838e","modified":1462394086000},{"_id":"themes/next/source/js/src/utils.js","hash":"e5cb720894c4bc28ca8f10b33df127fb394018d9","modified":1462394086000},{"_id":"themes/next/source/vendors/font-awesome/.gitignore","hash":"69d152fa46b517141ec3b1114dd6134724494d83","modified":1462394086000},{"_id":"themes/next/source/vendors/font-awesome/.bower.json","hash":"7da985a99674e54f514d4fd9fcd3bcea6e7e41d5","modified":1462394086000},{"_id":"themes/next/source/vendors/fastclick/bower.json","hash":"13379463c7463b4b96d13556b46faa4cc38d81e6","modified":1462394086000},{"_id":"themes/next/source/vendors/fastclick/README.md","hash":"1decd8e1adad2cd6db0ab50cf56de6035156f4ea","modified":1462394086000},{"_id":"themes/next/source/vendors/font-awesome/.npmignore","hash":"dcf470ab3a358103bb896a539cc03caeda10fa8b","modified":1462394086000},{"_id":"themes/next/source/vendors/font-awesome/bower.json","hash":"279a8a718ab6c930a67c41237f0aac166c1b9440","modified":1462394086000},{"_id":"themes/next/source/js/src/scrollspy.js","hash":"fe4da1b9fe73518226446f5f27d2831e4426fc35","modified":1462394086000},{"_id":"themes/next/source/vendors/font-awesome/HELP-US-OUT.txt","hash":"69a4c537d167b68a0ccf1c6febd138aeffca60d6","modified":1462394086000},{"_id":"themes/next/source/vendors/jquery_lazyload/README.md","hash":"895d50fa29759af7835256522e9dd7dac597765c","modified":1462394086000},{"_id":"themes/next/source/vendors/jquery_lazyload/CONTRIBUTING.md","hash":"4891864c24c28efecd81a6a8d3f261145190f901","modified":1462394086000},{"_id":"themes/next/source/vendors/jquery_lazyload/.bower.json","hash":"b7638afc93e9cd350d0783565ee9a7da6805ad8e","modified":1462394086000},{"_id":"themes/next/source/vendors/jquery_lazyload/jquery.scrollstop.js","hash":"0e9a81785a011c98be5ea821a8ed7d411818cfd1","modified":1462394086000},{"_id":"themes/next/source/vendors/jquery_lazyload/jquery.lazyload.js","hash":"481fd478650e12b67c201a0ea41e92743f8b45a3","modified":1462394086000},{"_id":"themes/next/source/vendors/jquery_lazyload/bower.json","hash":"65bc85d12197e71c40a55c0cd7f6823995a05222","modified":1462394086000},{"_id":"themes/next/source/vendors/jquery/.bower.json","hash":"91745c2cc6c946c7275f952b2b0760b880cea69e","modified":1462394086000},{"_id":"themes/next/source/vendors/velocity/.bower.json","hash":"05f960846f1c7a93dab1d3f9a1121e86812e8c88","modified":1462394086000},{"_id":"themes/next/source/vendors/velocity/bower.json","hash":"2ec99573e84c7117368beccb9e94b6bf35d2db03","modified":1462394086000},{"_id":"themes/next/source/vendors/velocity/velocity.min.js","hash":"2f1afadc12e4cf59ef3b405308d21baa97e739c6","modified":1462394086000},{"_id":"themes/next/source/vendors/velocity/velocity.ui.js","hash":"6a1d101eab3de87527bb54fcc8c7b36b79d8f0df","modified":1462394086000},{"_id":"themes/next/source/vendors/jquery/index.js","hash":"41b4bfbaa96be6d1440db6e78004ade1c134e276","modified":1462394086000},{"_id":"themes/next/layout/_scripts/third-party/analytics/busuanzi-counter.swig","hash":"4fcbf57c4918528ab51d3d042cff92cf5aefb599","modified":1462394086000},{"_id":"themes/next/layout/_scripts/third-party/analytics/baidu-analytics.swig","hash":"7c43d66da93cde65b473a7d6db2a86f9a42647d6","modified":1462394086000},{"_id":"themes/next/source/vendors/velocity/velocity.ui.min.js","hash":"ed5e534cd680a25d8d14429af824f38a2c7d9908","modified":1462394086000},{"_id":"themes/next/layout/_scripts/third-party/analytics/google-analytics.swig","hash":"30a23fa7e816496fdec0e932aa42e2d13098a9c2","modified":1462394086000},{"_id":"themes/next/layout/_scripts/third-party/comments/disqus.swig","hash":"3491d3cebabc8a28857200db28a1be65aad6adc2","modified":1462394086000},{"_id":"themes/next/layout/_scripts/third-party/analytics/cnzz-analytics.swig","hash":"44e761721e8ad787ef571a3cc57bbc12d318a2a3","modified":1462394086000},{"_id":"themes/next/layout/_scripts/third-party/analytics/facebook-sdk.swig","hash":"334176d838ee528e58468d8bc74ff3a6d3f25b2b","modified":1462394086000},{"_id":"themes/next/layout/_scripts/third-party/analytics/tencent-analytics.swig","hash":"3658414379e0e8a34c45c40feadc3edc8dc55f88","modified":1462394086000},{"_id":"themes/next/source/css/_common/components/buttons.styl","hash":"0dfb4b3ba3180d7285e66f270e1d3fa0f132c3d2","modified":1462394086000},{"_id":"themes/next/layout/_scripts/third-party/comments/duoshuo.swig","hash":"8c7af79407d223486fba72b8150fe045a553bf70","modified":1462394086000},{"_id":"themes/next/source/css/_common/components/comments.styl","hash":"471f1627891aca5c0e1973e09fbcb01e1510d193","modified":1462394086000},{"_id":"themes/next/source/css/_common/components/components.styl","hash":"10994990d6e0b4d965a728a22cf7f6ee29cae9f6","modified":1462394086000},{"_id":"themes/next/source/css/_common/components/pagination.styl","hash":"711c8830886619d4f4a0598b0cde5499dce50c62","modified":1462394086000},{"_id":"themes/next/source/css/_common/components/tag-cloud.styl","hash":"dd8a3b22fc2f222ac6e6c05bd8a773fb039169c0","modified":1462394086000},{"_id":"themes/next/source/css/_common/components/back-to-top.styl","hash":"b49efc66bd055a2d0be7deabfcb02ee72a9a28c8","modified":1462394086000},{"_id":"themes/next/source/css/_common/scaffolding/base.styl","hash":"5304f99581da3a31de3ecec959b7adf9002fde83","modified":1462394086000},{"_id":"themes/next/source/css/_common/outline/outline.styl","hash":"2186be20e317505cd31886f1291429cc21f76703","modified":1462394086000},{"_id":"themes/next/source/css/_common/scaffolding/tables.styl","hash":"64f5d56c08d74a338813df1265580ca0cbf0190b","modified":1462394086000},{"_id":"themes/next/source/css/_common/scaffolding/normalize.styl","hash":"ece571f38180febaf02ace8187ead8318a300ea7","modified":1462394086000},{"_id":"themes/next/source/css/_common/scaffolding/scaffolding.styl","hash":"013619c472c7e4b08311c464fcbe9fcf5edde603","modified":1462394086000},{"_id":"themes/next/source/css/_schemes/Mist/_logo.styl","hash":"38e5df90c8689a71c978fd83ba74af3d4e4e5386","modified":1462394086000},{"_id":"themes/next/source/css/_schemes/Mist/_header.styl","hash":"5ae7906dc7c1d9468c7f4b4a6feddddc555797a1","modified":1462394086000},{"_id":"themes/next/source/css/_common/scaffolding/helpers.styl","hash":"54c90cf7bdbf5c596179d8dae6e671bad1292662","modified":1462394086000},{"_id":"themes/next/source/css/_schemes/Mist/_base.styl","hash":"c2d079788d6fc2e9a191ccdae94e50d55bf849dc","modified":1462394086000},{"_id":"themes/next/source/css/_schemes/Mist/_menu.styl","hash":"b0dcca862cd0cc6e732e33d975b476d744911742","modified":1462394086000},{"_id":"themes/next/source/css/_schemes/Muse/_logo.styl","hash":"8829bc556ca38bfec4add4f15a2f028092ac6d46","modified":1462394086000},{"_id":"themes/next/source/css/_schemes/Mist/_search.styl","hash":"1452cbe674cc1d008e1e9640eb4283841058fc64","modified":1462394086000},{"_id":"themes/next/source/css/_schemes/Muse/_search.styl","hash":"1452cbe674cc1d008e1e9640eb4283841058fc64","modified":1462394086000},{"_id":"themes/next/source/css/_schemes/Muse/_layout.styl","hash":"6ed60cc621bac096c0ed7534fa25b1a52dc571d4","modified":1462394086000},{"_id":"themes/next/source/css/_schemes/Muse/index.styl","hash":"a0e2030a606c934fb2c5c7373aaae04a1caac4c5","modified":1462394086000},{"_id":"themes/next/source/css/_schemes/Mist/_posts-expanded.styl","hash":"4303776991ef28f5742ca51c7dffe6f12f0acf34","modified":1462394086000},{"_id":"themes/next/source/css/_schemes/Mist/index.styl","hash":"9a5581a770af8964064fef7afd3e16963e45547f","modified":1462394086000},{"_id":"themes/next/source/css/_schemes/Pisces/_brand.styl","hash":"be22ad34f546a07f6d56b424338cdd898683eea4","modified":1462394086000},{"_id":"themes/next/source/css/_schemes/Pisces/_full-image.styl","hash":"938d39eedc6e3d33918c1145a5bf1e79991d3fcf","modified":1462394086000},{"_id":"themes/next/source/css/_schemes/Pisces/_layout.styl","hash":"8d7cecde4933900c7df2db9d0a98f5f82f88dc93","modified":1462394086000},{"_id":"themes/next/source/css/_schemes/Muse/_menu.styl","hash":"c2c6c4f6434b4f94aac2af5861cd769427f0ee10","modified":1462394086000},{"_id":"themes/next/source/css/_schemes/Pisces/_posts.styl","hash":"2f878213cb24c5ddc18877f6d15ec5c5f57745ac","modified":1462394086000},{"_id":"themes/next/source/css/_schemes/Pisces/index.styl","hash":"1b10ba2d3ad0c063c418dc94a0b7e0db4b342c53","modified":1462394086000},{"_id":"themes/next/source/css/_schemes/Pisces/_menu.styl","hash":"d09280e5b79f3b573edb30f30c7a5f03ac640986","modified":1462394086000},{"_id":"themes/next/source/vendors/fancybox/source/blank.gif","hash":"2daeaa8b5f19f0bc209d976c02bd6acb51b00b0a","modified":1462394086000},{"_id":"themes/next/source/js/src/schemes/pisces.js","hash":"7506e7490c69a200831393c38d25e91c156bd471","modified":1462394086000},{"_id":"themes/next/source/vendors/fancybox/source/fancybox_loading@2x.gif","hash":"273b123496a42ba45c3416adb027cd99745058b0","modified":1462394086000},{"_id":"themes/next/source/css/_schemes/Pisces/_sidebar.styl","hash":"d4b7bd610ca03dbb2f5b66631c0e84a79fb4660b","modified":1462394086000},{"_id":"themes/next/source/vendors/fancybox/source/fancybox_overlay.png","hash":"b3a4ee645ba494f52840ef8412015ba0f465dbe0","modified":1462394086000},{"_id":"themes/next/source/vendors/fancybox/source/fancybox_loading.gif","hash":"1a755fb2599f3a313cc6cfdb14df043f8c14a99c","modified":1462394086000},{"_id":"themes/next/source/vendors/fancybox/source/fancybox_sprite@2x.png","hash":"30c58913f327e28f466a00f4c1ac8001b560aed8","modified":1462394086000},{"_id":"themes/next/source/vendors/fancybox/source/fancybox_sprite.png","hash":"17df19f97628e77be09c352bf27425faea248251","modified":1462394086000},{"_id":"themes/next/source/vendors/fancybox/source/jquery.fancybox.js","hash":"1cf3d47b5ccb7cb6e9019c64f2a88d03a64853e4","modified":1462394086000},{"_id":"themes/next/source/vendors/fancybox/source/jquery.fancybox.pack.js","hash":"53360764b429c212f424399384417ccc233bb3be","modified":1462394086000},{"_id":"themes/next/source/vendors/fancybox/source/jquery.fancybox.css","hash":"5f163444617b6cf267342f06ac166a237bb62df9","modified":1462394086000},{"_id":"themes/next/source/vendors/font-awesome/css/font-awesome.css","hash":"3b87c2560832748cd06f9bfd2fd6ea8edbdae8c7","modified":1462394086000},{"_id":"themes/next/source/vendors/font-awesome/css/font-awesome.css.map","hash":"0189d278706509412bac4745f96c83984e1d59f4","modified":1462394086000},{"_id":"themes/next/source/vendors/font-awesome/css/font-awesome.min.css","hash":"05ea25bc9b3ac48993e1fee322d3bc94b49a6e22","modified":1462394086000},{"_id":"themes/next/source/vendors/font-awesome/fonts/fontawesome-webfont.woff2","hash":"574ea2698c03ae9477db2ea3baf460ee32f1a7ea","modified":1462394086000},{"_id":"themes/next/source/vendors/ua-parser-js/dist/ua-parser.min.js","hash":"38628e75e4412cc6f11074e03e1c6d257aae495b","modified":1462394086000},{"_id":"themes/next/source/vendors/font-awesome/fonts/FontAwesome.otf","hash":"0112e96f327d413938d37c1693806f468ffdbace","modified":1462394086000},{"_id":"themes/next/source/vendors/font-awesome/fonts/fontawesome-webfont.woff","hash":"507970402e328b2baeb05bde73bf9ded4e2c3a2d","modified":1462394086000},{"_id":"themes/next/source/vendors/font-awesome/fonts/fontawesome-webfont.eot","hash":"b3c2f08e73320135b69c23a3908b87a12053a2f6","modified":1462394086000},{"_id":"themes/next/source/vendors/velocity/velocity.js","hash":"e63dc7cea055ca60a95d286f32349d88b10c5a4d","modified":1462394086000},{"_id":"themes/next/source/vendors/ua-parser-js/dist/ua-parser.pack.js","hash":"214dad442a92d36af77ed0ca1d9092b16687f02f","modified":1462394086000},{"_id":"themes/next/source/css/_common/components/header/header.styl","hash":"ae1ca14e51de67b07dba8f61ec79ee0e2e344574","modified":1462394086000},{"_id":"themes/next/source/vendors/fastclick/lib/fastclick.js","hash":"06cef196733a710e77ad7e386ced6963f092dc55","modified":1462394086000},{"_id":"themes/next/source/css/_common/components/footer/footer.styl","hash":"8994ffcce84deac0471532f270f97c44fea54dc0","modified":1462394086000},{"_id":"themes/next/source/css/_common/components/header/headerband.styl","hash":"d27448f199fc2f9980b601bc22b87f08b5d64dd1","modified":1462394086000},{"_id":"themes/next/source/css/_common/components/header/menu.styl","hash":"c890ce7fe933abad7baf39764a01894924854e92","modified":1462394086000},{"_id":"themes/next/source/css/_common/components/header/site-meta.styl","hash":"6c00f6e0978f4d8f9a846a15579963728aaa6a17","modified":1462394086000},{"_id":"themes/next/source/css/_common/components/header/site-nav.styl","hash":"49c2b2c14a1e7fcc810c6be4b632975d0204c281","modified":1462394086000},{"_id":"themes/next/source/css/_common/components/highlight/theme.styl","hash":"90f8f9706cd7fe829cf06e9959a65fd3f8b994fa","modified":1462394086000},{"_id":"themes/next/source/css/_common/components/highlight/highlight.styl","hash":"4da051c7f3924fa2db1e73c55b2baf1c2c150255","modified":1462394086000},{"_id":"themes/next/source/css/_common/components/pages/archive.styl","hash":"7778920dd105fa4de3a7ab206eeba30b1a7bac45","modified":1462394086000},{"_id":"themes/next/source/css/_common/components/pages/categories.styl","hash":"4eff5b252d7b614e500fc7d52c97ce325e57d3ab","modified":1462394086000},{"_id":"themes/next/source/css/_common/components/pages/post-detail.styl","hash":"9bf4362a4d0ae151ada84b219d39fbe5bb8c790e","modified":1462394086000},{"_id":"themes/next/source/css/_common/components/pages/pages.styl","hash":"3c46efd6601e268093ce6d7b1471d18501878f0d","modified":1462394086000},{"_id":"themes/next/source/css/_common/components/post/post-eof.styl","hash":"2cdc094ecf907a02fce25ad4a607cd5c40da0f2b","modified":1462394086000},{"_id":"themes/next/source/vendors/fastclick/lib/fastclick.min.js","hash":"2cae0f5a6c5d6f3cb993015e6863f9483fc4de18","modified":1462394086000},{"_id":"themes/next/source/css/_common/components/post/post-gallery.styl","hash":"387ce23bba52b22a586b2dfb4ec618fe1ffd3926","modified":1462394086000},{"_id":"themes/next/source/css/_common/components/post/post-meta.styl","hash":"d543d1377c1f61b70e3adb6da0eb12797552e5f2","modified":1462394086000},{"_id":"themes/next/source/css/_common/components/post/post-expand.styl","hash":"b25132fe6a7ad67059a2c3afc60feabb479bdd75","modified":1462394086000},{"_id":"themes/next/source/css/_common/components/post/post-collapse.styl","hash":"8fae54591877a73dff0b29b2be2e8935e3c63575","modified":1462394086000},{"_id":"themes/next/source/css/_common/components/post/post-nav.styl","hash":"cbca4842a54950e2934b3b8f3cd940f122111aef","modified":1462394086000},{"_id":"themes/next/source/css/_common/components/post/post-tags.styl","hash":"a352ae5b1f8857393bf770d2e638bf15f0c9585d","modified":1462394086000},{"_id":"themes/next/source/css/_common/components/post/post-more-link.styl","hash":"15063d79b5befc21820baf05d6f20cc1c1787477","modified":1462394086000},{"_id":"themes/next/source/css/_common/components/post/post-title.styl","hash":"963105a531403d7aad6d9e5e23e3bfabb8ec065a","modified":1462394086000},{"_id":"themes/next/source/css/_common/components/post/post-reward.styl","hash":"e792c8dc41561c96d128e9b421187f1c3dc978a0","modified":1462394086000},{"_id":"themes/next/source/css/_common/components/post/post.styl","hash":"4eb18b12fa0ea6c35925d9a64f64e2a7dae8c7fd","modified":1462394086000},{"_id":"themes/next/source/css/_common/components/sidebar/sidebar-author.styl","hash":"920343e41c124221a17f050bbb989494d44f7a24","modified":1462394086000},{"_id":"themes/next/source/css/_common/components/sidebar/sidebar-author-links.styl","hash":"2e7ec9aaa3293941106b1bdd09055246aa3c3dc6","modified":1462394086000},{"_id":"themes/next/source/css/_common/components/post/post-type.styl","hash":"10251257aceecb117233c9554dcf8ecfef8e2104","modified":1462394086000},{"_id":"themes/next/source/css/_common/components/sidebar/sidebar-nav.styl","hash":"45fa7193435a8eae9960267438750b4c9fa9587f","modified":1462394086000},{"_id":"themes/next/source/css/_common/components/sidebar/sidebar-blogroll.styl","hash":"c44f6a553ec7ea5508f2054a13be33a62a15d3a9","modified":1462394086000},{"_id":"themes/next/source/css/_common/components/sidebar/sidebar-toc.styl","hash":"7690b9596ec3a49befbe529a5a2649abec0faf76","modified":1462394086000},{"_id":"themes/next/source/css/_common/components/sidebar/sidebar-feed-link.styl","hash":"9486ddd2cb255227db102d09a7df4cae0fabad72","modified":1462394086000},{"_id":"themes/next/source/css/_common/components/sidebar/sidebar-toggle.styl","hash":"2d3abbc85b979a648e0e579e45f16a6eba49d1e7","modified":1462394086000},{"_id":"themes/next/source/css/_common/components/sidebar/sidebar.styl","hash":"234facd038f144bd0fe09a31ed1357c5d74c517f","modified":1462394086000},{"_id":"themes/next/source/css/_common/components/sidebar/site-state.styl","hash":"3623e7fa4324ec1307370f33d8f287a9e20a5578","modified":1462394086000},{"_id":"themes/next/source/css/_common/components/tags/blockquote-center.styl","hash":"c2abe4d87148e23e15d49ee225bc650de60baf46","modified":1462394086000},{"_id":"themes/next/source/css/_common/components/tags/full-image.styl","hash":"618f73450cf541f88a4fddc3d22898aee49d105d","modified":1462394086000},{"_id":"themes/next/source/css/_common/components/tags/tags.styl","hash":"8e66c2635d48e11de616bb29c4b1323698eebc0a","modified":1462394086000},{"_id":"themes/next/source/css/_common/components/third-party/baidushare.styl","hash":"93b08815c4d17e2b96fef8530ec1f1064dede6ef","modified":1462394086000},{"_id":"themes/next/source/css/_common/components/third-party/busuanzi-counter.styl","hash":"b03f891883446f3a5548b7cc90d29c77e62f1053","modified":1462394086000},{"_id":"themes/next/source/css/_common/components/third-party/jiathis.styl","hash":"327b5f63d55ec26f7663185c1a778440588d9803","modified":1462394086000},{"_id":"themes/next/source/css/_common/components/third-party/duoshuo.styl","hash":"2340dd9b3202c61d73cc708b790fac5adddbfc7f","modified":1462394086000},{"_id":"themes/next/source/css/_schemes/Mist/outline/outline.styl","hash":"5dc4859c66305f871e56cba78f64bfe3bf1b5f01","modified":1462394086000},{"_id":"themes/next/source/css/_common/components/third-party/third-party.styl","hash":"3afc459442c132c480d1d832f1a872f1070bb048","modified":1462394086000},{"_id":"themes/next/source/css/_common/components/tags/group-pictures.styl","hash":"4851b981020c5cbc354a1af9b831a2dcb3cf9d39","modified":1462394086000},{"_id":"themes/next/source/css/_common/components/third-party/localsearch.styl","hash":"795d94561888d31cb7a6ff4a125596809ea69b7d","modified":1462394086000},{"_id":"themes/next/source/vendors/fancybox/source/helpers/fancybox_buttons.png","hash":"e385b139516c6813dcd64b8fc431c364ceafe5f3","modified":1462394086000},{"_id":"themes/next/source/css/_schemes/Muse/sidebar/sidebar-blogroll.styl","hash":"8b8e8cbce98a9296c8fd77f512ae85d945f65d40","modified":1462394086000},{"_id":"themes/next/source/css/_schemes/Mist/sidebar/sidebar-blogroll.styl","hash":"8b8e8cbce98a9296c8fd77f512ae85d945f65d40","modified":1462394086000},{"_id":"themes/next/source/vendors/fancybox/source/helpers/jquery.fancybox-buttons.css","hash":"1a9d8e5c22b371fcc69d4dbbb823d9c39f04c0c8","modified":1462394086000},{"_id":"themes/next/source/vendors/fancybox/source/helpers/jquery.fancybox-thumbs.css","hash":"4ac329c16a5277592fc12a37cca3d72ca4ec292f","modified":1462394086000},{"_id":"themes/next/source/vendors/font-awesome/fonts/fontawesome-webfont.ttf","hash":"27cf1f2ec59aece6938c7bb2feb0e287ea778ff9","modified":1462394086000},{"_id":"themes/next/source/vendors/fancybox/source/helpers/jquery.fancybox-media.js","hash":"3bdf69ed2469e4fb57f5a95f17300eef891ff90d","modified":1462394086000},{"_id":"themes/next/source/vendors/fancybox/source/helpers/jquery.fancybox-buttons.js","hash":"91e41741c2e93f732c82aaacec4cfc6e3f3ec876","modified":1462394086000},{"_id":"themes/next/source/vendors/fancybox/source/helpers/jquery.fancybox-thumbs.js","hash":"53e194f4a72e649c04fb586dd57762b8c022800b","modified":1462394086000},{"_id":"themes/next/source/vendors/font-awesome/fonts/fontawesome-webfont.svg","hash":"2b3c8ba7008cc014d8fb37abc6f9f49aeda83824","modified":1462394086000},{"_id":"public/atom.xml","hash":"c8a9b7b00f75e562f9a63a65ff951efcf3c9cab9","modified":1479090173294},{"_id":"public/search.xml","hash":"085262f552b0dfda86ed066216cfc49827cfb2ff","modified":1479090173315},{"_id":"public/tags/index.html","hash":"6b6f0336eed014ce4e06c7ec24195402d99bc449","modified":1479090173322},{"_id":"public/about/index.html","hash":"6e67ba7890c5a7459a0817cc4a118aa3fba68523","modified":1479090173323},{"_id":"public/categories/index.html","hash":"e33cd8c5339e23a415324e6f86c7eb332398f5ed","modified":1479090173323},{"_id":"public/2016/10/27/D3.js-Draggable and Scalable Tree/index.html","hash":"f93b2f096560d0029745f00173fd808ed3e705bc","modified":1479090173323},{"_id":"public/2016/10/25/D3.js-完整的柱状图/index.html","hash":"b063acca08f81f8677d8f98837f462631dbd1239","modified":1479090173323},{"_id":"public/2016/10/24/D3.js-入门篇/index.html","hash":"121712286bad7ebe47d6421914eea869a10edc28","modified":1479090173323},{"_id":"public/2016/09/29/答利器上的六个问题/index.html","hash":"be36d04aa60b94890b0d2056cbbd4a5cac92edae","modified":1479090173323},{"_id":"public/archives/index.html","hash":"d10947c53dbfd9ccd260218a02e1d51ba14cfc3f","modified":1479090173324},{"_id":"public/archives/2016/index.html","hash":"ce88a1ded7522454db35a687a169d7e3f5cb685c","modified":1479090173324},{"_id":"public/archives/2016/09/index.html","hash":"95b297e58ffcad89e2694ae1ea76d7e7ebaf51e7","modified":1479090173324},{"_id":"public/archives/2016/10/index.html","hash":"46b8fdea7ee7503c5a762e1f87d5f65dac31e896","modified":1479090173324},{"_id":"public/categories/D3-js/index.html","hash":"381764786eb9c0a4b228ad385635d2a0e9d39d9b","modified":1479090173324},{"_id":"public/tags/D3/index.html","hash":"0b3fa50833e144e74b7504b3e7fcf8aef8395b1b","modified":1479090173324},{"_id":"public/tags/树状图/index.html","hash":"308d4dc4c2399d8496b4fabe18d950acd8c30c63","modified":1479090173324},{"_id":"public/tags/柱状图/index.html","hash":"13042af4aeeb33f0cf0d29374be36fbd9df33898","modified":1479090173325},{"_id":"public/tags/利器/index.html","hash":"ad4ed2f0f52883a34e28f2d07ba14b2fef7538ea","modified":1479090173325},{"_id":"public/tags/JavaScript/index.html","hash":"f4c94bf41acd4dbeee5105f7bb32182d71503b01","modified":1479090173325},{"_id":"public/index.html","hash":"2d828a14e660acf65447de2e0c02e217fee143a2","modified":1479090173325},{"_id":"public/favicon.ico","hash":"97b9f793fc3bf685a2f7d7022b2631ef33a8c2f2","modified":1479090173361},{"_id":"public/CNAME","hash":"152c767bd754834bac156a4df40abb6bd16f2106","modified":1479090173361},{"_id":"public/images/avatar.gif","hash":"264082bb3a1af70d5499c7d22b0902cb454b6d12","modified":1479090173361},{"_id":"public/images/cc-by-nc-nd.svg","hash":"c6524ece3f8039a5f612feaf865d21ec8a794564","modified":1479090173361},{"_id":"public/images/cc-by-nc-sa.svg","hash":"3031be41e8753c70508aa88e84ed8f4f653f157e","modified":1479090173362},{"_id":"public/images/cc-by-nd.svg","hash":"c563508ce9ced1e66948024ba1153400ac0e0621","modified":1479090173362},{"_id":"public/images/cc-by-nc.svg","hash":"8d39b39d88f8501c0d27f8df9aae47136ebc59b7","modified":1479090173362},{"_id":"public/images/cc-by-sa.svg","hash":"aa4742d733c8af8d38d4c183b8adbdcab045872e","modified":1479090173362},{"_id":"public/images/cc-zero.svg","hash":"87669bf8ac268a91d027a0a4802c92a1473e9030","modified":1479090173362},{"_id":"public/images/default.png","hash":"533ed1d59ed5a8a3dec630be3494a5cc9e3d6716","modified":1479090173362},{"_id":"public/images/placeholder.gif","hash":"5fbd472222feb8a22cf5b8aa5dc5b8e13af88e2b","modified":1479090173362},{"_id":"public/images/loading.gif","hash":"5fbd472222feb8a22cf5b8aa5dc5b8e13af88e2b","modified":1479090173362},{"_id":"public/images/searchicon.png","hash":"67727a6a969be0b2659b908518fa6706eed307b8","modified":1479090173362},{"_id":"public/images/quote-l.svg","hash":"94e870b4c8c48da61d09522196d4dd40e277a98f","modified":1479090173363},{"_id":"public/images/cc-by.svg","hash":"28a0a4fe355a974a5e42f68031652b76798d4f7e","modified":1479090173363},{"_id":"public/images/quote-r.svg","hash":"e60ae504f9d99b712c793c3740c6b100d057d4ec","modified":1479090173363},{"_id":"public/vendors/fastclick/LICENSE","hash":"dcd5b6b43095d9e90353a28b09cb269de8d4838e","modified":1479090173363},{"_id":"public/vendors/font-awesome/HELP-US-OUT.txt","hash":"69a4c537d167b68a0ccf1c6febd138aeffca60d6","modified":1479090173363},{"_id":"public/vendors/fancybox/source/blank.gif","hash":"2daeaa8b5f19f0bc209d976c02bd6acb51b00b0a","modified":1479090173363},{"_id":"public/vendors/fancybox/source/fancybox_loading@2x.gif","hash":"273b123496a42ba45c3416adb027cd99745058b0","modified":1479090173363},{"_id":"public/vendors/fancybox/source/fancybox_overlay.png","hash":"b3a4ee645ba494f52840ef8412015ba0f465dbe0","modified":1479090173363},{"_id":"public/vendors/fancybox/source/fancybox_loading.gif","hash":"1a755fb2599f3a313cc6cfdb14df043f8c14a99c","modified":1479090173364},{"_id":"public/vendors/fancybox/source/fancybox_sprite@2x.png","hash":"30c58913f327e28f466a00f4c1ac8001b560aed8","modified":1479090173364},{"_id":"public/vendors/fancybox/source/fancybox_sprite.png","hash":"17df19f97628e77be09c352bf27425faea248251","modified":1479090173364},{"_id":"public/vendors/font-awesome/css/font-awesome.css.map","hash":"0189d278706509412bac4745f96c83984e1d59f4","modified":1479090173364},{"_id":"public/vendors/font-awesome/fonts/fontawesome-webfont.woff2","hash":"574ea2698c03ae9477db2ea3baf460ee32f1a7ea","modified":1479090173364},{"_id":"public/vendors/fancybox/source/helpers/fancybox_buttons.png","hash":"e385b139516c6813dcd64b8fc431c364ceafe5f3","modified":1479090173364},{"_id":"public/vendors/font-awesome/fonts/FontAwesome.otf","hash":"0112e96f327d413938d37c1693806f468ffdbace","modified":1479090177621},{"_id":"public/vendors/font-awesome/fonts/fontawesome-webfont.woff","hash":"507970402e328b2baeb05bde73bf9ded4e2c3a2d","modified":1479090177635},{"_id":"public/vendors/font-awesome/fonts/fontawesome-webfont.eot","hash":"b3c2f08e73320135b69c23a3908b87a12053a2f6","modified":1479090177637},{"_id":"public/js/src/bootstrap.js","hash":"39bf93769d9080fa01a9a875183b43198f79bc19","modified":1479090177644},{"_id":"public/js/src/affix.js","hash":"978e0422b5bf1b560236d8d10ebc1adcf66392e3","modified":1479090177644},{"_id":"public/js/src/hook-duoshuo.js","hash":"a6119070c0119f33e08b29da7d2cce2635eb40a0","modified":1479090177644},{"_id":"public/js/src/post-details.js","hash":"2038f54e289b6da5def09689e69f623187147be5","modified":1479090177644},{"_id":"public/js/src/motion.js","hash":"269414e84df544a4ccb88519f6abae4943db3c67","modified":1479090177644},{"_id":"public/js/src/utils.js","hash":"e5cb720894c4bc28ca8f10b33df127fb394018d9","modified":1479090177644},{"_id":"public/vendors/fastclick/bower.json","hash":"4dcecf83afddba148464d5339c93f6d0aa9f42e9","modified":1479090177644},{"_id":"public/vendors/fastclick/README.html","hash":"da3c74d484c73cc7df565e8abbfa4d6a5a18d4da","modified":1479090177644},{"_id":"public/vendors/font-awesome/bower.json","hash":"64394a2a9aa00f8e321d8daa5e51a420f0e96dad","modified":1479090177645},{"_id":"public/js/src/scrollspy.js","hash":"fe4da1b9fe73518226446f5f27d2831e4426fc35","modified":1479090177645},{"_id":"public/vendors/jquery_lazyload/README.html","hash":"bde24335f6bc09d8801c0dcd7274f71b466552bd","modified":1479090177645},{"_id":"public/vendors/jquery_lazyload/CONTRIBUTING.html","hash":"a6358170d346af13b1452ac157b60505bec7015c","modified":1479090177645},{"_id":"public/vendors/jquery_lazyload/jquery.scrollstop.js","hash":"0e9a81785a011c98be5ea821a8ed7d411818cfd1","modified":1479090177645},{"_id":"public/vendors/jquery_lazyload/jquery.lazyload.js","hash":"481fd478650e12b67c201a0ea41e92743f8b45a3","modified":1479090177645},{"_id":"public/vendors/jquery_lazyload/bower.json","hash":"ae3c3b61e6e7f9e1d7e3585ad854380ecc04cf53","modified":1479090177645},{"_id":"public/vendors/velocity/bower.json","hash":"0ef14e7ccdfba5db6eb3f8fc6aa3b47282c36409","modified":1479090177645},{"_id":"public/vendors/velocity/velocity.ui.min.js","hash":"ed5e534cd680a25d8d14429af824f38a2c7d9908","modified":1479090177645},{"_id":"public/js/src/schemes/pisces.js","hash":"7506e7490c69a200831393c38d25e91c156bd471","modified":1479090177645},{"_id":"public/vendors/fancybox/source/jquery.fancybox.css","hash":"5f163444617b6cf267342f06ac166a237bb62df9","modified":1479090177646},{"_id":"public/vendors/ua-parser-js/dist/ua-parser.min.js","hash":"38628e75e4412cc6f11074e03e1c6d257aae495b","modified":1479090177646},{"_id":"public/vendors/ua-parser-js/dist/ua-parser.pack.js","hash":"214dad442a92d36af77ed0ca1d9092b16687f02f","modified":1479090177646},{"_id":"public/vendors/fastclick/lib/fastclick.min.js","hash":"2cae0f5a6c5d6f3cb993015e6863f9483fc4de18","modified":1479090177646},{"_id":"public/vendors/fancybox/source/helpers/jquery.fancybox-buttons.css","hash":"1a9d8e5c22b371fcc69d4dbbb823d9c39f04c0c8","modified":1479090177646},{"_id":"public/vendors/fancybox/source/helpers/jquery.fancybox-thumbs.css","hash":"4ac329c16a5277592fc12a37cca3d72ca4ec292f","modified":1479090177646},{"_id":"public/vendors/fancybox/source/helpers/jquery.fancybox-buttons.js","hash":"91e41741c2e93f732c82aaacec4cfc6e3f3ec876","modified":1479090177646},{"_id":"public/vendors/fancybox/source/helpers/jquery.fancybox-media.js","hash":"3bdf69ed2469e4fb57f5a95f17300eef891ff90d","modified":1479090177647},{"_id":"public/vendors/fancybox/source/helpers/jquery.fancybox-thumbs.js","hash":"53e194f4a72e649c04fb586dd57762b8c022800b","modified":1479090177647},{"_id":"public/css/main.css","hash":"a6874e3053907b7097ba0461ac1711cbdb6f6dee","modified":1479090177647},{"_id":"public/vendors/velocity/velocity.min.js","hash":"2f1afadc12e4cf59ef3b405308d21baa97e739c6","modified":1479090177647},{"_id":"public/vendors/velocity/velocity.ui.js","hash":"6a1d101eab3de87527bb54fcc8c7b36b79d8f0df","modified":1479090177647},{"_id":"public/vendors/jquery/index.js","hash":"41b4bfbaa96be6d1440db6e78004ade1c134e276","modified":1479090177647},{"_id":"public/vendors/fancybox/source/jquery.fancybox.js","hash":"1cf3d47b5ccb7cb6e9019c64f2a88d03a64853e4","modified":1479090177647},{"_id":"public/vendors/fancybox/source/jquery.fancybox.pack.js","hash":"53360764b429c212f424399384417ccc233bb3be","modified":1479090177647},{"_id":"public/vendors/font-awesome/css/font-awesome.css","hash":"3b87c2560832748cd06f9bfd2fd6ea8edbdae8c7","modified":1479090177647},{"_id":"public/vendors/font-awesome/css/font-awesome.min.css","hash":"05ea25bc9b3ac48993e1fee322d3bc94b49a6e22","modified":1479090177648},{"_id":"public/vendors/velocity/velocity.js","hash":"9f08181baea0cc0e906703b7e5df9111b9ef3373","modified":1479090177648},{"_id":"public/vendors/fastclick/lib/fastclick.js","hash":"06cef196733a710e77ad7e386ced6963f092dc55","modified":1479090177648},{"_id":"public/vendors/font-awesome/fonts/fontawesome-webfont.ttf","hash":"27cf1f2ec59aece6938c7bb2feb0e287ea778ff9","modified":1479090177679},{"_id":"public/vendors/font-awesome/fonts/fontawesome-webfont.svg","hash":"2b3c8ba7008cc014d8fb37abc6f9f49aeda83824","modified":1479090177919}],"Category":[{"name":"D3.js","_id":"civhg3j3b0004tonb8xo14klz"}],"Data":[],"Page":[{"title":"tags","date":"2016-09-29T08:28:01.000Z","type":"tags","_content":"","source":"tags/index.md","raw":"---\ntitle: tags\ndate: 2016-09-29 16:28:01\ntype: \"tags\"\n---\n","updated":"2016-10-02T15:20:28.337Z","path":"tags/index.html","comments":1,"layout":"page","_id":"civhg3j2m0001tonbqrzkzkek","content":"","excerpt":"","more":""},{"title":"about","date":"2016-09-29T10:06:26.000Z","type":"about","_content":"### 关于我\n***\nHi，All！我叫王金龙，在互联网上的常用名是brucewar。2015年研究生毕业于南京理工大学计算机科学与工程学院。\n\n#### 近况\n\n* 目前在工作生活在南京，从事前端开发的工作。\n* 喜欢前端，喜欢Linux，Vim控\n* 喜欢跑步，喜欢看书，喜欢听音乐\n\n#### 联系方式\n\n* Gmail：wjl891014@gmail.com\n* 微信号：wjl891014\t(添加时请注明“公司+真实姓名”)\n\n\t![微信二维码](http://brucewar.qiniudn.com/qrcode.jpg)\n","source":"about/index.md","raw":"---\ntitle: about\ndate: 2016-09-29 18:06:26\ntype: \"about\"\n---\n### 关于我\n***\nHi，All！我叫王金龙，在互联网上的常用名是brucewar。2015年研究生毕业于南京理工大学计算机科学与工程学院。\n\n#### 近况\n\n* 目前在工作生活在南京，从事前端开发的工作。\n* 喜欢前端，喜欢Linux，Vim控\n* 喜欢跑步，喜欢看书，喜欢听音乐\n\n#### 联系方式\n\n* Gmail：wjl891014@gmail.com\n* 微信号：wjl891014\t(添加时请注明“公司+真实姓名”)\n\n\t![微信二维码](http://brucewar.qiniudn.com/qrcode.jpg)\n","updated":"2016-11-14T02:21:16.379Z","path":"about/index.html","comments":1,"layout":"page","_id":"civhg3j350003tonbc4c6bva7","content":"<h3 id=\"关于我\"><a href=\"#关于我\" class=\"headerlink\" title=\"关于我\"></a>关于我</h3><hr>\n<p>Hi，All！我叫王金龙，在互联网上的常用名是brucewar。2015年研究生毕业于南京理工大学计算机科学与工程学院。</p>\n<h4 id=\"近况\"><a href=\"#近况\" class=\"headerlink\" title=\"近况\"></a>近况</h4><ul>\n<li>目前在工作生活在南京，从事前端开发的工作。</li>\n<li>喜欢前端，喜欢Linux，Vim控</li>\n<li>喜欢跑步，喜欢看书，喜欢听音乐</li>\n</ul>\n<h4 id=\"联系方式\"><a href=\"#联系方式\" class=\"headerlink\" title=\"联系方式\"></a>联系方式</h4><ul>\n<li>Gmail：wjl891014@gmail.com</li>\n<li><p>微信号：wjl891014    (添加时请注明“公司+真实姓名”)</p>\n<p>  <img src=\"http://brucewar.qiniudn.com/qrcode.jpg\" alt=\"微信二维码\"></p>\n</li>\n</ul>\n","excerpt":"","more":"<h3 id=\"关于我\"><a href=\"#关于我\" class=\"headerlink\" title=\"关于我\"></a>关于我</h3><hr>\n<p>Hi，All！我叫王金龙，在互联网上的常用名是brucewar。2015年研究生毕业于南京理工大学计算机科学与工程学院。</p>\n<h4 id=\"近况\"><a href=\"#近况\" class=\"headerlink\" title=\"近况\"></a>近况</h4><ul>\n<li>目前在工作生活在南京，从事前端开发的工作。</li>\n<li>喜欢前端，喜欢Linux，Vim控</li>\n<li>喜欢跑步，喜欢看书，喜欢听音乐</li>\n</ul>\n<h4 id=\"联系方式\"><a href=\"#联系方式\" class=\"headerlink\" title=\"联系方式\"></a>联系方式</h4><ul>\n<li>Gmail：wjl891014@gmail.com</li>\n<li><p>微信号：wjl891014    (添加时请注明“公司+真实姓名”)</p>\n<p>  <img src=\"http://brucewar.qiniudn.com/qrcode.jpg\" alt=\"微信二维码\"></p>\n</li>\n</ul>\n"},{"title":"categories","date":"2016-09-29T08:29:56.000Z","type":"categories","_content":"","source":"categories/index.md","raw":"---\ntitle: categories\ndate: 2016-09-29 16:29:56\ntype: \"categories\"\n---\n","updated":"2016-10-02T15:20:28.331Z","path":"categories/index.html","comments":1,"layout":"page","_id":"civhg3j3o0007tonbt7szorxo","content":"","excerpt":"","more":""}],"Post":[{"title":"D3.js（Draggable and Scalable Tree）","date":"2016-10-27T05:32:26.000Z","_content":"\n因为最近手上有个小的需求，设计一个可缩放和可拖拽的树形结构，我便去研读了D3官网给的一个树形的例子。\n\n### 布局（Layout）\n\n原本我以为理解了基本的选择器、元素操作、Enter、Exit就能去看实例的代码了，后来发现我错了，所以这里需要理解一下D3中布局（Layout）的概念。布局是D3中一个十分重要的概念，从布局衍生出很多图表。例如：饼状图（pie）、力导向图（force），树状图（tree）等等，基本实现了很多开源的可视化工具提供的图表。但是它又和很多可视化工具（如Echarts）有很大的不同。\n\n相对于其它工具来说，D3较底层一点，所以初学者可能会觉得有点困难，但是一旦理解了D3布局的思想，使用起来，会比其它工具更加得心应手。首先，我阐释下D3和大部分可视化工具数据到图表的流程：\n\n* 大部分可视化工具：数据 => 封装好的绘图函数 => 图表\n* D3：数据 => Layout => 绘图所需的数据 => 绘制图形 => 图表\n\n可以看出，D3需要自己去绘制图形，但是可以通过布局函数获得绘图所需要的数据，坏处是对初学者是一个很大的考验，好处是它能帮助我们制作出更加精密的图形。\n\n### 树状图\n\n回归正题，如何设计一个树形结构，我将从D3官网提供的示例代码分析。\n\n页面代码如下：\n\n```html\n<!DOCTYPE html>\n<html lang=\"en\">\n<head>\n  <meta charset=\"utf-8\">\n  <title>tree</title>\n\t<style>\n\tbody{\n\t\tmargin: 0;\n\t}\n\tsvg{\n\t\tbackground-color: #eee;\n\t}\n\t.node circle {\n\t  cursor: pointer;\n\t  fill: #fff;\n\t  stroke: steelblue;\n\t  stroke-width: 1.5px;\n\t}\n\t.node text {\n\t  font-size: 11px;\n\t}\n\tpath.link {\n\t  fill: none;\n\t  stroke: #ccc;\n\t  stroke-width: 1.5px;\n\t}\n\tg.detail rect{\n\t\tfill: #000;\n\t\tfill-opacity: .6;\n\t\trx: 5;\n\t\try: 5;\n\t}\n\tg.detail text{\n\t\tfill: #fff;\n\t}\n\t</style>\n</head>\n<body>\n\t<div id=\"treeContainer\"></div>\n  <script src=\"./dist/tree.bundle.js\"></script>\n</body>\n</html>\n```\n\n因为D3示例代码是同步的形式读出整个树形数据结构，我对其进行了改造，模拟异步数据（async_city.json）。\n\n```js\n{\n\t\"root\": {\n\t\t\"name\": \"中国\"\n\t},\n\t\"中国\": {\n\t\t\"name\": \"中国\",\n\t\t\"children\": [\n\t\t\t{\"name\": \"浙江\"},\n\t\t\t{\"name\": \"广西\"},\n\t\t\t{\"name\": \"黑龙江\"},\n\t\t\t{\"name\": \"新疆\"}\n\t\t]\n\t},\n\t\"浙江\": {\n\t\t\"name\": \"浙江\",\n\t\t\"children\": [\n\t\t\t{\"name\": \"杭州\"},\n\t\t\t{\"name\": \"宁波\"},\n\t\t\t{\"name\":\"温州\" },\n\t\t\t{\"name\":\"绍兴\" }\n\t\t]\n\t},\n\t\"广西\": {\n\t\t\"name\": \"广西\",\n\t\t\"children\": [\n\t\t\t{\"name\": \"桂林\"},\n\t\t\t{\"name\": \"南宁\"},\n\t\t\t{\"name\": \"柳州\"},\n\t\t\t{\"name\": \"防城港\"}\n\t\t]\n\t},\n\t\"桂林\": {\n\t\t\"name\": \"桂林\",\n\t\t\"children\": [\n\t\t\t{\"name\":\"秀峰区\"},\n\t\t\t{\"name\":\"叠彩区\"},\n\t\t\t{\"name\":\"象山区\"},\n\t\t\t{\"name\":\"七星区\"}\n\t\t]\n\t},\n\t\"黑龙江\": {\n\t\t\t\"name\":\"黑龙江\",\n\t\t\t\"children\":\n\t\t\t[\n\t\t\t\t\t{\"name\":\"哈尔滨\"},\n\t\t\t\t\t{\"name\":\"齐齐哈尔\"},\n\t\t\t\t\t{\"name\":\"牡丹江\"},\n\t\t\t\t\t{\"name\":\"大庆\"}\n\t\t\t]\n\t},\n\t\"新疆\" : {\n\t\t\t\"name\":\"新疆\" ,\n\t\t\t\"children\":\n\t\t\t[\n\t\t\t\t\t{\"name\":\"乌鲁木齐\"},\n\t\t\t\t\t{\"name\":\"克拉玛依\"},\n\t\t\t\t\t{\"name\":\"吐鲁番\"},\n\t\t\t\t\t{\"name\":\"哈密\"}\n\t\t\t]\n\t}\n}\n```\n\n#### 画布\n\n```js\nvar margin = {\n\ttop: 20,\n\tleft: 50,\n\tright: 50,\n\tbottom: 20\n};\nvar width = $(document).width(),\n\theight = $(document).height(),\n\ti = 0,\n\tlimit = 2,\n\troot;\n\n\t// draggable and scalable\n\tvar zoomListener = d3.behavior.zoom().scaleExtent([0.1, 3]).on('zoom', zoom);\n\tfunction zoom(){\n\t\td3.select('svg').select('g').attr('transform', 'translate(' + d3.event.translate + ')scale(' + d3.event.scale + ')');\n\t}\n\n\tvar svg = d3.select(\"#treeContainer\").append(\"svg\")\n\t\t\t.attr(\"width\", width - margin.left - margin.right)\n\t\t\t.attr(\"height\", height - margin.top - margin.bottom)\n\t\t\t.call(zoomListener)\n\t\t.append(\"g\")\n\t\t\t.attr(\"transform\", \"translate(\" + margin.left + \",\" + margin.top + \")\");\n```\n\n#### 获取异步数据\n\n```js\n// 异步获取数据\nfunction getData(sd, cb){\n\td3.json('data/async_city.json', function(err, json){\n\t\t// 通过callback返回部分数据\n\t\tcb && cb(json[sd.name]);\n\t});\n}\n```\n\n#### 构造树\n\n```js\n// 获取树的root\ngetData({name: 'root'}, function(json){\n\troot = json;\n\troot.x0 = height / 2;\n\troot.y0 = width / 2;\n\n\t// 初始化树根\n\tupdate(root);\n});\n```\n\n从上面的代码可以看出构造树的核心代码就是这个update函数，下面以注释的形式深入理解树形的构造。\n\n```js\n// 新建一个树的布局\nvar tree = d3.layout.tree()\n\t\t.size([height - margin.top - margin.bottom, width - margin.left - margin.right]);\n\n// 因为默认的树布局是自上而下的，这里构建一个自左向右的树，故需要一个转换x和y坐标的函数\nvar diagonal = d3.svg.diagonal()\n\t\t.projection(function(d) { return [d.y, d.x]; });\n\nfunction update(source) {\n\tvar duration = d3.event && d3.event.altKey ? 5000 : 500;\n\n\t/**\n\t* 这里实际上是通过tree的nodes函数获得树形结构的每个节点的数据，包括位置信息和深度\n\t* 返回的数据结构如下：\n\t* [{depth: 0, name: \"中国\", children: [], x: 380, y: 0}]\n\t*/\n\tvar nodes = tree.nodes(root).reverse();\n\n\t// 为了让当前节点居中，故更具当前节点的depth来计算各节点的y坐标（即横向位置）\n\tvar srcDepth = source.depth;\n\tnodes.forEach(function(d){\n\t\td.y = height / 2 + 180 * (d.depth - srcDepth);\n\t});\n\n\t// Update the nodes…\n\tvar node = svg.selectAll(\"g.node\")\n\t\t\t.data(nodes, function(d) { return d.id || (d.id = ++i); });\n\n\t// Enter any new nodes at the parent's previous position.\n\tvar nodeEnter = node.enter().append(\"g\")\n\t\t\t.attr(\"class\", \"node\")\n\t\t\t.attr(\"transform\", function(d) { return \"translate(\" + source.y0 + \",\" + source.x0 + \")\"; })\n\t\t\t.on(\"click\", click)\n\t\t\t.on('mouseover', function(d){\n\t\t\t\tif(d.name == 'more') return;\n\t\t\t\t// 鼠标hover某个节点时，显示一个详细信息的弹层\n\t\t\t\tvar detail = d3.select(this).append('g')\n\t\t\t\t\t\t.attr('class', 'detail')\n\t\t\t\t\t\t.attr('dx', d3.event.x)\n\t\t\t\t\t\t.attr('dy', d3.event.y + 10);\n\t\t\t\tdetail.append('rect')\n\t\t\t\t\t\t.attr('width', 100)\n\t\t\t\t\t\t.attr('height', 100);\n\t\t\t\tdetail.append('text')\n\t\t\t\t\t\t.attr('dx', '.35em')\n\t\t\t\t\t\t.attr('dy', '2em')\n\t\t\t\t\t\t.attr('text-anchor', 'start')\n\t\t\t\t\t\t.text(function(d){\n\t\t\t\t\t\t\treturn 'name: ' + d.name;\n\t\t\t\t\t\t});\n\t\t\t})\n\t\t\t.on('mousemove', function(d){\n\t\t\t\tvar detail = d3.select(this).select('.detail');\n\t\t\t\tdetail.attr('x', d3.event.x)\n\t\t\t\t\t\t.attr('y', d3.event.y);\n\t\t\t})\n\t\t\t.on('mouseout', function(d){\n\t\t\t\tif(d.name == 'more') return;\n\t\t\t\td3.select(this).select('.detail').remove();\n\t\t\t});\n\n\tnodeEnter.append(\"circle\")\n\t\t\t.attr(\"r\", 1e-6)\n\t\t\t.style(\"fill\", function(d){ return !d.isExpand ? \"lightsteelblue\" : \"#fff\"; });\n\n\tnodeEnter.append(\"text\")\n\t\t\t.attr(\"x\", -10)\n\t\t\t.attr(\"dy\", \".35em\")\n\t\t\t.attr(\"text-anchor\", \"end\")\n\t\t\t.text(function(d) { return d.name; })\n\t\t\t.style(\"fill-opacity\", 1e-6);\n\n\n\t// Transition nodes to their new position.\n\tvar nodeUpdate = node.transition()\n\t\t\t.duration(duration)\n\t\t\t.attr(\"transform\", function(d) { return \"translate(\" + d.y + \",\" + d.x + \")\"; });\n\n\tnodeUpdate.select(\"circle\")\n\t\t\t.attr(\"r\", 10)\n\t\t\t.style(\"fill\", function(d){ return !d.isExpand ? \"lightsteelblue\" : \"#fff\"; });\n\n\tnodeUpdate.select(\"text\")\n\t\t\t.style(\"fill-opacity\", 1);\n\n\t// Transition exiting nodes to the parent's new position.\n\tvar nodeExit = node.exit().transition()\n\t\t\t.duration(duration)\n\t\t\t.attr(\"transform\", function(d) {\n\t\t\t\tif(d.name == 'more') this.remove();\n\t\t\t\treturn \"translate(\" + source.y + \",\" + source.x + \")\";\n\t\t\t})\n\t\t\t.remove();\n\n\tnodeExit.select(\"circle\")\n\t\t\t.attr(\"r\", 1e-6);\n\n\tnodeExit.select(\"text\")\n\t\t\t.style(\"fill-opacity\", 1e-6);\n\n\t/** Update the links...\n\t* tree.links方法获取连线节点之间的映射，返回的数据结构如下：\n\t* [{source: {}, target: {}}]\n\t*/\n\tvar link = svg.selectAll(\"path.link\")\n\t\t\t.data(tree.links(nodes), function(d) { return d.target.id; });\n\n\t// Enter any new links at the parent's previous position.\n\tlink.enter().insert(\"path\", \"g\")\n\t\t\t.attr(\"class\", \"link\")\n\t\t\t.attr(\"d\", function(d) {\n\t\t\t\tvar o = {x: source.x0, y: source.y0};\n\t\t\t\treturn diagonal({source: o, target: o});\n\t\t\t})\n\t\t.transition()\n\t\t\t.duration(duration)\n\t\t\t.attr(\"d\", diagonal);\n\n\t// Transition links to their new position.\n\tlink.transition()\n\t\t\t.duration(duration)\n\t\t\t.attr(\"d\", diagonal);\n\n\t// Transition exiting nodes to the parent's new position.\n\tlink.exit().transition()\n\t\t\t.duration(duration)\n\t\t\t.attr(\"d\", function(d) {\n\t\t\t\tif(d.target.name == 'more') this.remove();\n\t\t\t\tvar o = {x: source.x, y: source.y};\n\t\t\t\treturn diagonal({source: o, target: o});\n\t\t\t})\n\t\t\t.remove();\n\n\t// Stash the old positions for transition.\n\t// 记录当前节点所在的位置，为node update提供位移动画\n\tnodes.forEach(function(d) {\n\t\td.x0 = d.x;\n\t\td.y0 = d.y;\n\t});\n}\n\nfunction collapse(d){\n\tdelete d._children;\n\tdelete d.isExpand;\n\tdelete d.children;\n}\nfunction expand(d){\n\tgetData({name: d.name}, function(json){\n\t\tif(json && json.children){\n\t\t\t// 获取到此节点有子节点\n\t\t\td._children = json.children;\n\t\t\td.children = d._children.slice(0, limit);\n\t\t\tif(d._children.length > d.children.length){\n\t\t\t\td.children.push({'name': 'more'});\n\t\t\t}\n\t\t}\n\t\td.isExpand = true;\n\t\tupdate(d);\n\t});\n}\n\n// 异步获取数据\nfunction getData(sd, cb){\n\td3.json('data/async_city.json', function(err, json){\n\t\tcb && cb(json[sd.name]);\n\t});\n}\n\nfunction click(d){\n\tif(d.name == 'more'){\n\t\t// 点击更多\n\t\td.parent.children = d.parent._children.slice(0, (d.parent.children.length - 1) + limit);\n\t\tif(d.parent._children.length > d.parent.children.length){\n\t\t\td.parent.children.push({'name': 'more'});\n\t\t}\n\t\tupdate(d.parent);\n\t}else if(d.isExpand && d.children){\n\t\t// 点击展开的节点\n\t\tcollapse(d);\n\t\tupdate(d);\n\t}else{\n\t\t// 点击未展开的点\n\t\texpand(d);\n\t}\n}\n```\n\n> 可以从[https://github.com/brucewar/practice-in-D3](https://github.com/brucewar/practice-in-D3)获取示例代码\n","source":"_posts/D3.js-Draggable and Scalable Tree.md","raw":"---\ntitle: D3.js（Draggable and Scalable Tree）\ndate: 2016-10-27 13:32:26\ncategories: D3.js\ntags: [D3,树状图]\n---\n\n因为最近手上有个小的需求，设计一个可缩放和可拖拽的树形结构，我便去研读了D3官网给的一个树形的例子。\n\n### 布局（Layout）\n\n原本我以为理解了基本的选择器、元素操作、Enter、Exit就能去看实例的代码了，后来发现我错了，所以这里需要理解一下D3中布局（Layout）的概念。布局是D3中一个十分重要的概念，从布局衍生出很多图表。例如：饼状图（pie）、力导向图（force），树状图（tree）等等，基本实现了很多开源的可视化工具提供的图表。但是它又和很多可视化工具（如Echarts）有很大的不同。\n\n相对于其它工具来说，D3较底层一点，所以初学者可能会觉得有点困难，但是一旦理解了D3布局的思想，使用起来，会比其它工具更加得心应手。首先，我阐释下D3和大部分可视化工具数据到图表的流程：\n\n* 大部分可视化工具：数据 => 封装好的绘图函数 => 图表\n* D3：数据 => Layout => 绘图所需的数据 => 绘制图形 => 图表\n\n可以看出，D3需要自己去绘制图形，但是可以通过布局函数获得绘图所需要的数据，坏处是对初学者是一个很大的考验，好处是它能帮助我们制作出更加精密的图形。\n\n### 树状图\n\n回归正题，如何设计一个树形结构，我将从D3官网提供的示例代码分析。\n\n页面代码如下：\n\n```html\n<!DOCTYPE html>\n<html lang=\"en\">\n<head>\n  <meta charset=\"utf-8\">\n  <title>tree</title>\n\t<style>\n\tbody{\n\t\tmargin: 0;\n\t}\n\tsvg{\n\t\tbackground-color: #eee;\n\t}\n\t.node circle {\n\t  cursor: pointer;\n\t  fill: #fff;\n\t  stroke: steelblue;\n\t  stroke-width: 1.5px;\n\t}\n\t.node text {\n\t  font-size: 11px;\n\t}\n\tpath.link {\n\t  fill: none;\n\t  stroke: #ccc;\n\t  stroke-width: 1.5px;\n\t}\n\tg.detail rect{\n\t\tfill: #000;\n\t\tfill-opacity: .6;\n\t\trx: 5;\n\t\try: 5;\n\t}\n\tg.detail text{\n\t\tfill: #fff;\n\t}\n\t</style>\n</head>\n<body>\n\t<div id=\"treeContainer\"></div>\n  <script src=\"./dist/tree.bundle.js\"></script>\n</body>\n</html>\n```\n\n因为D3示例代码是同步的形式读出整个树形数据结构，我对其进行了改造，模拟异步数据（async_city.json）。\n\n```js\n{\n\t\"root\": {\n\t\t\"name\": \"中国\"\n\t},\n\t\"中国\": {\n\t\t\"name\": \"中国\",\n\t\t\"children\": [\n\t\t\t{\"name\": \"浙江\"},\n\t\t\t{\"name\": \"广西\"},\n\t\t\t{\"name\": \"黑龙江\"},\n\t\t\t{\"name\": \"新疆\"}\n\t\t]\n\t},\n\t\"浙江\": {\n\t\t\"name\": \"浙江\",\n\t\t\"children\": [\n\t\t\t{\"name\": \"杭州\"},\n\t\t\t{\"name\": \"宁波\"},\n\t\t\t{\"name\":\"温州\" },\n\t\t\t{\"name\":\"绍兴\" }\n\t\t]\n\t},\n\t\"广西\": {\n\t\t\"name\": \"广西\",\n\t\t\"children\": [\n\t\t\t{\"name\": \"桂林\"},\n\t\t\t{\"name\": \"南宁\"},\n\t\t\t{\"name\": \"柳州\"},\n\t\t\t{\"name\": \"防城港\"}\n\t\t]\n\t},\n\t\"桂林\": {\n\t\t\"name\": \"桂林\",\n\t\t\"children\": [\n\t\t\t{\"name\":\"秀峰区\"},\n\t\t\t{\"name\":\"叠彩区\"},\n\t\t\t{\"name\":\"象山区\"},\n\t\t\t{\"name\":\"七星区\"}\n\t\t]\n\t},\n\t\"黑龙江\": {\n\t\t\t\"name\":\"黑龙江\",\n\t\t\t\"children\":\n\t\t\t[\n\t\t\t\t\t{\"name\":\"哈尔滨\"},\n\t\t\t\t\t{\"name\":\"齐齐哈尔\"},\n\t\t\t\t\t{\"name\":\"牡丹江\"},\n\t\t\t\t\t{\"name\":\"大庆\"}\n\t\t\t]\n\t},\n\t\"新疆\" : {\n\t\t\t\"name\":\"新疆\" ,\n\t\t\t\"children\":\n\t\t\t[\n\t\t\t\t\t{\"name\":\"乌鲁木齐\"},\n\t\t\t\t\t{\"name\":\"克拉玛依\"},\n\t\t\t\t\t{\"name\":\"吐鲁番\"},\n\t\t\t\t\t{\"name\":\"哈密\"}\n\t\t\t]\n\t}\n}\n```\n\n#### 画布\n\n```js\nvar margin = {\n\ttop: 20,\n\tleft: 50,\n\tright: 50,\n\tbottom: 20\n};\nvar width = $(document).width(),\n\theight = $(document).height(),\n\ti = 0,\n\tlimit = 2,\n\troot;\n\n\t// draggable and scalable\n\tvar zoomListener = d3.behavior.zoom().scaleExtent([0.1, 3]).on('zoom', zoom);\n\tfunction zoom(){\n\t\td3.select('svg').select('g').attr('transform', 'translate(' + d3.event.translate + ')scale(' + d3.event.scale + ')');\n\t}\n\n\tvar svg = d3.select(\"#treeContainer\").append(\"svg\")\n\t\t\t.attr(\"width\", width - margin.left - margin.right)\n\t\t\t.attr(\"height\", height - margin.top - margin.bottom)\n\t\t\t.call(zoomListener)\n\t\t.append(\"g\")\n\t\t\t.attr(\"transform\", \"translate(\" + margin.left + \",\" + margin.top + \")\");\n```\n\n#### 获取异步数据\n\n```js\n// 异步获取数据\nfunction getData(sd, cb){\n\td3.json('data/async_city.json', function(err, json){\n\t\t// 通过callback返回部分数据\n\t\tcb && cb(json[sd.name]);\n\t});\n}\n```\n\n#### 构造树\n\n```js\n// 获取树的root\ngetData({name: 'root'}, function(json){\n\troot = json;\n\troot.x0 = height / 2;\n\troot.y0 = width / 2;\n\n\t// 初始化树根\n\tupdate(root);\n});\n```\n\n从上面的代码可以看出构造树的核心代码就是这个update函数，下面以注释的形式深入理解树形的构造。\n\n```js\n// 新建一个树的布局\nvar tree = d3.layout.tree()\n\t\t.size([height - margin.top - margin.bottom, width - margin.left - margin.right]);\n\n// 因为默认的树布局是自上而下的，这里构建一个自左向右的树，故需要一个转换x和y坐标的函数\nvar diagonal = d3.svg.diagonal()\n\t\t.projection(function(d) { return [d.y, d.x]; });\n\nfunction update(source) {\n\tvar duration = d3.event && d3.event.altKey ? 5000 : 500;\n\n\t/**\n\t* 这里实际上是通过tree的nodes函数获得树形结构的每个节点的数据，包括位置信息和深度\n\t* 返回的数据结构如下：\n\t* [{depth: 0, name: \"中国\", children: [], x: 380, y: 0}]\n\t*/\n\tvar nodes = tree.nodes(root).reverse();\n\n\t// 为了让当前节点居中，故更具当前节点的depth来计算各节点的y坐标（即横向位置）\n\tvar srcDepth = source.depth;\n\tnodes.forEach(function(d){\n\t\td.y = height / 2 + 180 * (d.depth - srcDepth);\n\t});\n\n\t// Update the nodes…\n\tvar node = svg.selectAll(\"g.node\")\n\t\t\t.data(nodes, function(d) { return d.id || (d.id = ++i); });\n\n\t// Enter any new nodes at the parent's previous position.\n\tvar nodeEnter = node.enter().append(\"g\")\n\t\t\t.attr(\"class\", \"node\")\n\t\t\t.attr(\"transform\", function(d) { return \"translate(\" + source.y0 + \",\" + source.x0 + \")\"; })\n\t\t\t.on(\"click\", click)\n\t\t\t.on('mouseover', function(d){\n\t\t\t\tif(d.name == 'more') return;\n\t\t\t\t// 鼠标hover某个节点时，显示一个详细信息的弹层\n\t\t\t\tvar detail = d3.select(this).append('g')\n\t\t\t\t\t\t.attr('class', 'detail')\n\t\t\t\t\t\t.attr('dx', d3.event.x)\n\t\t\t\t\t\t.attr('dy', d3.event.y + 10);\n\t\t\t\tdetail.append('rect')\n\t\t\t\t\t\t.attr('width', 100)\n\t\t\t\t\t\t.attr('height', 100);\n\t\t\t\tdetail.append('text')\n\t\t\t\t\t\t.attr('dx', '.35em')\n\t\t\t\t\t\t.attr('dy', '2em')\n\t\t\t\t\t\t.attr('text-anchor', 'start')\n\t\t\t\t\t\t.text(function(d){\n\t\t\t\t\t\t\treturn 'name: ' + d.name;\n\t\t\t\t\t\t});\n\t\t\t})\n\t\t\t.on('mousemove', function(d){\n\t\t\t\tvar detail = d3.select(this).select('.detail');\n\t\t\t\tdetail.attr('x', d3.event.x)\n\t\t\t\t\t\t.attr('y', d3.event.y);\n\t\t\t})\n\t\t\t.on('mouseout', function(d){\n\t\t\t\tif(d.name == 'more') return;\n\t\t\t\td3.select(this).select('.detail').remove();\n\t\t\t});\n\n\tnodeEnter.append(\"circle\")\n\t\t\t.attr(\"r\", 1e-6)\n\t\t\t.style(\"fill\", function(d){ return !d.isExpand ? \"lightsteelblue\" : \"#fff\"; });\n\n\tnodeEnter.append(\"text\")\n\t\t\t.attr(\"x\", -10)\n\t\t\t.attr(\"dy\", \".35em\")\n\t\t\t.attr(\"text-anchor\", \"end\")\n\t\t\t.text(function(d) { return d.name; })\n\t\t\t.style(\"fill-opacity\", 1e-6);\n\n\n\t// Transition nodes to their new position.\n\tvar nodeUpdate = node.transition()\n\t\t\t.duration(duration)\n\t\t\t.attr(\"transform\", function(d) { return \"translate(\" + d.y + \",\" + d.x + \")\"; });\n\n\tnodeUpdate.select(\"circle\")\n\t\t\t.attr(\"r\", 10)\n\t\t\t.style(\"fill\", function(d){ return !d.isExpand ? \"lightsteelblue\" : \"#fff\"; });\n\n\tnodeUpdate.select(\"text\")\n\t\t\t.style(\"fill-opacity\", 1);\n\n\t// Transition exiting nodes to the parent's new position.\n\tvar nodeExit = node.exit().transition()\n\t\t\t.duration(duration)\n\t\t\t.attr(\"transform\", function(d) {\n\t\t\t\tif(d.name == 'more') this.remove();\n\t\t\t\treturn \"translate(\" + source.y + \",\" + source.x + \")\";\n\t\t\t})\n\t\t\t.remove();\n\n\tnodeExit.select(\"circle\")\n\t\t\t.attr(\"r\", 1e-6);\n\n\tnodeExit.select(\"text\")\n\t\t\t.style(\"fill-opacity\", 1e-6);\n\n\t/** Update the links...\n\t* tree.links方法获取连线节点之间的映射，返回的数据结构如下：\n\t* [{source: {}, target: {}}]\n\t*/\n\tvar link = svg.selectAll(\"path.link\")\n\t\t\t.data(tree.links(nodes), function(d) { return d.target.id; });\n\n\t// Enter any new links at the parent's previous position.\n\tlink.enter().insert(\"path\", \"g\")\n\t\t\t.attr(\"class\", \"link\")\n\t\t\t.attr(\"d\", function(d) {\n\t\t\t\tvar o = {x: source.x0, y: source.y0};\n\t\t\t\treturn diagonal({source: o, target: o});\n\t\t\t})\n\t\t.transition()\n\t\t\t.duration(duration)\n\t\t\t.attr(\"d\", diagonal);\n\n\t// Transition links to their new position.\n\tlink.transition()\n\t\t\t.duration(duration)\n\t\t\t.attr(\"d\", diagonal);\n\n\t// Transition exiting nodes to the parent's new position.\n\tlink.exit().transition()\n\t\t\t.duration(duration)\n\t\t\t.attr(\"d\", function(d) {\n\t\t\t\tif(d.target.name == 'more') this.remove();\n\t\t\t\tvar o = {x: source.x, y: source.y};\n\t\t\t\treturn diagonal({source: o, target: o});\n\t\t\t})\n\t\t\t.remove();\n\n\t// Stash the old positions for transition.\n\t// 记录当前节点所在的位置，为node update提供位移动画\n\tnodes.forEach(function(d) {\n\t\td.x0 = d.x;\n\t\td.y0 = d.y;\n\t});\n}\n\nfunction collapse(d){\n\tdelete d._children;\n\tdelete d.isExpand;\n\tdelete d.children;\n}\nfunction expand(d){\n\tgetData({name: d.name}, function(json){\n\t\tif(json && json.children){\n\t\t\t// 获取到此节点有子节点\n\t\t\td._children = json.children;\n\t\t\td.children = d._children.slice(0, limit);\n\t\t\tif(d._children.length > d.children.length){\n\t\t\t\td.children.push({'name': 'more'});\n\t\t\t}\n\t\t}\n\t\td.isExpand = true;\n\t\tupdate(d);\n\t});\n}\n\n// 异步获取数据\nfunction getData(sd, cb){\n\td3.json('data/async_city.json', function(err, json){\n\t\tcb && cb(json[sd.name]);\n\t});\n}\n\nfunction click(d){\n\tif(d.name == 'more'){\n\t\t// 点击更多\n\t\td.parent.children = d.parent._children.slice(0, (d.parent.children.length - 1) + limit);\n\t\tif(d.parent._children.length > d.parent.children.length){\n\t\t\td.parent.children.push({'name': 'more'});\n\t\t}\n\t\tupdate(d.parent);\n\t}else if(d.isExpand && d.children){\n\t\t// 点击展开的节点\n\t\tcollapse(d);\n\t\tupdate(d);\n\t}else{\n\t\t// 点击未展开的点\n\t\texpand(d);\n\t}\n}\n```\n\n> 可以从[https://github.com/brucewar/practice-in-D3](https://github.com/brucewar/practice-in-D3)获取示例代码\n","slug":"D3.js-Draggable and Scalable Tree","published":1,"updated":"2016-10-27T07:20:01.754Z","comments":1,"layout":"post","photos":[],"link":"","_id":"civhg3j270000tonbap6ho7r2","content":"<p>因为最近手上有个小的需求，设计一个可缩放和可拖拽的树形结构，我便去研读了D3官网给的一个树形的例子。</p>\n<h3 id=\"布局（Layout）\"><a href=\"#布局（Layout）\" class=\"headerlink\" title=\"布局（Layout）\"></a>布局（Layout）</h3><p>原本我以为理解了基本的选择器、元素操作、Enter、Exit就能去看实例的代码了，后来发现我错了，所以这里需要理解一下D3中布局（Layout）的概念。布局是D3中一个十分重要的概念，从布局衍生出很多图表。例如：饼状图（pie）、力导向图（force），树状图（tree）等等，基本实现了很多开源的可视化工具提供的图表。但是它又和很多可视化工具（如Echarts）有很大的不同。</p>\n<p>相对于其它工具来说，D3较底层一点，所以初学者可能会觉得有点困难，但是一旦理解了D3布局的思想，使用起来，会比其它工具更加得心应手。首先，我阐释下D3和大部分可视化工具数据到图表的流程：</p>\n<ul>\n<li>大部分可视化工具：数据 =&gt; 封装好的绘图函数 =&gt; 图表</li>\n<li>D3：数据 =&gt; Layout =&gt; 绘图所需的数据 =&gt; 绘制图形 =&gt; 图表</li>\n</ul>\n<p>可以看出，D3需要自己去绘制图形，但是可以通过布局函数获得绘图所需要的数据，坏处是对初学者是一个很大的考验，好处是它能帮助我们制作出更加精密的图形。</p>\n<h3 id=\"树状图\"><a href=\"#树状图\" class=\"headerlink\" title=\"树状图\"></a>树状图</h3><p>回归正题，如何设计一个树形结构，我将从D3官网提供的示例代码分析。</p>\n<p>页面代码如下：</p>\n<figure class=\"highlight html\"><table><tr><td class=\"gutter\"><pre><div class=\"line\">1</div><div class=\"line\">2</div><div class=\"line\">3</div><div class=\"line\">4</div><div class=\"line\">5</div><div class=\"line\">6</div><div class=\"line\">7</div><div class=\"line\">8</div><div class=\"line\">9</div><div class=\"line\">10</div><div class=\"line\">11</div><div class=\"line\">12</div><div class=\"line\">13</div><div class=\"line\">14</div><div class=\"line\">15</div><div class=\"line\">16</div><div class=\"line\">17</div><div class=\"line\">18</div><div class=\"line\">19</div><div class=\"line\">20</div><div class=\"line\">21</div><div class=\"line\">22</div><div class=\"line\">23</div><div class=\"line\">24</div><div class=\"line\">25</div><div class=\"line\">26</div><div class=\"line\">27</div><div class=\"line\">28</div><div class=\"line\">29</div><div class=\"line\">30</div><div class=\"line\">31</div><div class=\"line\">32</div><div class=\"line\">33</div><div class=\"line\">34</div><div class=\"line\">35</div><div class=\"line\">36</div><div class=\"line\">37</div><div class=\"line\">38</div><div class=\"line\">39</div><div class=\"line\">40</div><div class=\"line\">41</div><div class=\"line\">42</div></pre></td><td class=\"code\"><pre><div class=\"line\"><span class=\"meta\">&lt;!DOCTYPE html&gt;</span></div><div class=\"line\"><span class=\"tag\">&lt;<span class=\"name\">html</span> <span class=\"attr\">lang</span>=<span class=\"string\">\"en\"</span>&gt;</span></div><div class=\"line\"><span class=\"tag\">&lt;<span class=\"name\">head</span>&gt;</span></div><div class=\"line\">  <span class=\"tag\">&lt;<span class=\"name\">meta</span> <span class=\"attr\">charset</span>=<span class=\"string\">\"utf-8\"</span>&gt;</span></div><div class=\"line\">  <span class=\"tag\">&lt;<span class=\"name\">title</span>&gt;</span>tree<span class=\"tag\">&lt;/<span class=\"name\">title</span>&gt;</span></div><div class=\"line\">\t<span class=\"tag\">&lt;<span class=\"name\">style</span>&gt;</span><span class=\"undefined\"></span></div><div class=\"line\">\tbody&#123;</div><div class=\"line\">\t\tmargin: 0;</div><div class=\"line\">\t&#125;</div><div class=\"line\">\tsvg&#123;</div><div class=\"line\">\t\tbackground-color: #eee;</div><div class=\"line\">\t&#125;</div><div class=\"line\">\t.node circle &#123;</div><div class=\"line\">\t  cursor: pointer;</div><div class=\"line\">\t  fill: #fff;</div><div class=\"line\">\t  stroke: steelblue;</div><div class=\"line\">\t  stroke-width: 1.5px;</div><div class=\"line\">\t&#125;</div><div class=\"line\">\t.node text &#123;</div><div class=\"line\">\t  font-size: 11px;</div><div class=\"line\">\t&#125;</div><div class=\"line\">\tpath.link &#123;</div><div class=\"line\">\t  fill: none;</div><div class=\"line\">\t  stroke: #ccc;</div><div class=\"line\">\t  stroke-width: 1.5px;</div><div class=\"line\">\t&#125;</div><div class=\"line\">\tg.detail rect&#123;</div><div class=\"line\">\t\tfill: #000;</div><div class=\"line\">\t\tfill-opacity: .6;</div><div class=\"line\">\t\trx: 5;</div><div class=\"line\">\t\try: 5;</div><div class=\"line\">\t&#125;</div><div class=\"line\">\tg.detail text&#123;</div><div class=\"line\">\t\tfill: #fff;</div><div class=\"line\">\t&#125;</div><div class=\"line\">\t<span class=\"tag\">&lt;/<span class=\"name\">style</span>&gt;</span></div><div class=\"line\"><span class=\"tag\">&lt;/<span class=\"name\">head</span>&gt;</span></div><div class=\"line\"><span class=\"tag\">&lt;<span class=\"name\">body</span>&gt;</span></div><div class=\"line\">\t<span class=\"tag\">&lt;<span class=\"name\">div</span> <span class=\"attr\">id</span>=<span class=\"string\">\"treeContainer\"</span>&gt;</span><span class=\"tag\">&lt;/<span class=\"name\">div</span>&gt;</span></div><div class=\"line\">  <span class=\"tag\">&lt;<span class=\"name\">script</span> <span class=\"attr\">src</span>=<span class=\"string\">\"./dist/tree.bundle.js\"</span>&gt;</span><span class=\"undefined\"></span><span class=\"tag\">&lt;/<span class=\"name\">script</span>&gt;</span></div><div class=\"line\"><span class=\"tag\">&lt;/<span class=\"name\">body</span>&gt;</span></div><div class=\"line\"><span class=\"tag\">&lt;/<span class=\"name\">html</span>&gt;</span></div></pre></td></tr></table></figure>\n<p>因为D3示例代码是同步的形式读出整个树形数据结构，我对其进行了改造，模拟异步数据（async_city.json）。</p>\n<figure class=\"highlight js\"><table><tr><td class=\"gutter\"><pre><div class=\"line\">1</div><div class=\"line\">2</div><div class=\"line\">3</div><div class=\"line\">4</div><div class=\"line\">5</div><div class=\"line\">6</div><div class=\"line\">7</div><div class=\"line\">8</div><div class=\"line\">9</div><div class=\"line\">10</div><div class=\"line\">11</div><div class=\"line\">12</div><div class=\"line\">13</div><div class=\"line\">14</div><div class=\"line\">15</div><div class=\"line\">16</div><div class=\"line\">17</div><div class=\"line\">18</div><div class=\"line\">19</div><div class=\"line\">20</div><div class=\"line\">21</div><div class=\"line\">22</div><div class=\"line\">23</div><div class=\"line\">24</div><div class=\"line\">25</div><div class=\"line\">26</div><div class=\"line\">27</div><div class=\"line\">28</div><div class=\"line\">29</div><div class=\"line\">30</div><div class=\"line\">31</div><div class=\"line\">32</div><div class=\"line\">33</div><div class=\"line\">34</div><div class=\"line\">35</div><div class=\"line\">36</div><div class=\"line\">37</div><div class=\"line\">38</div><div class=\"line\">39</div><div class=\"line\">40</div><div class=\"line\">41</div><div class=\"line\">42</div><div class=\"line\">43</div><div class=\"line\">44</div><div class=\"line\">45</div><div class=\"line\">46</div><div class=\"line\">47</div><div class=\"line\">48</div><div class=\"line\">49</div><div class=\"line\">50</div><div class=\"line\">51</div><div class=\"line\">52</div><div class=\"line\">53</div><div class=\"line\">54</div><div class=\"line\">55</div><div class=\"line\">56</div><div class=\"line\">57</div><div class=\"line\">58</div><div class=\"line\">59</div><div class=\"line\">60</div><div class=\"line\">61</div></pre></td><td class=\"code\"><pre><div class=\"line\">&#123;</div><div class=\"line\">\t<span class=\"string\">\"root\"</span>: &#123;</div><div class=\"line\">\t\t<span class=\"string\">\"name\"</span>: <span class=\"string\">\"中国\"</span></div><div class=\"line\">\t&#125;,</div><div class=\"line\">\t<span class=\"string\">\"中国\"</span>: &#123;</div><div class=\"line\">\t\t<span class=\"string\">\"name\"</span>: <span class=\"string\">\"中国\"</span>,</div><div class=\"line\">\t\t<span class=\"string\">\"children\"</span>: [</div><div class=\"line\">\t\t\t&#123;<span class=\"string\">\"name\"</span>: <span class=\"string\">\"浙江\"</span>&#125;,</div><div class=\"line\">\t\t\t&#123;<span class=\"string\">\"name\"</span>: <span class=\"string\">\"广西\"</span>&#125;,</div><div class=\"line\">\t\t\t&#123;<span class=\"string\">\"name\"</span>: <span class=\"string\">\"黑龙江\"</span>&#125;,</div><div class=\"line\">\t\t\t&#123;<span class=\"string\">\"name\"</span>: <span class=\"string\">\"新疆\"</span>&#125;</div><div class=\"line\">\t\t]</div><div class=\"line\">\t&#125;,</div><div class=\"line\">\t<span class=\"string\">\"浙江\"</span>: &#123;</div><div class=\"line\">\t\t<span class=\"string\">\"name\"</span>: <span class=\"string\">\"浙江\"</span>,</div><div class=\"line\">\t\t<span class=\"string\">\"children\"</span>: [</div><div class=\"line\">\t\t\t&#123;<span class=\"string\">\"name\"</span>: <span class=\"string\">\"杭州\"</span>&#125;,</div><div class=\"line\">\t\t\t&#123;<span class=\"string\">\"name\"</span>: <span class=\"string\">\"宁波\"</span>&#125;,</div><div class=\"line\">\t\t\t&#123;<span class=\"string\">\"name\"</span>:<span class=\"string\">\"温州\"</span> &#125;,</div><div class=\"line\">\t\t\t&#123;<span class=\"string\">\"name\"</span>:<span class=\"string\">\"绍兴\"</span> &#125;</div><div class=\"line\">\t\t]</div><div class=\"line\">\t&#125;,</div><div class=\"line\">\t<span class=\"string\">\"广西\"</span>: &#123;</div><div class=\"line\">\t\t<span class=\"string\">\"name\"</span>: <span class=\"string\">\"广西\"</span>,</div><div class=\"line\">\t\t<span class=\"string\">\"children\"</span>: [</div><div class=\"line\">\t\t\t&#123;<span class=\"string\">\"name\"</span>: <span class=\"string\">\"桂林\"</span>&#125;,</div><div class=\"line\">\t\t\t&#123;<span class=\"string\">\"name\"</span>: <span class=\"string\">\"南宁\"</span>&#125;,</div><div class=\"line\">\t\t\t&#123;<span class=\"string\">\"name\"</span>: <span class=\"string\">\"柳州\"</span>&#125;,</div><div class=\"line\">\t\t\t&#123;<span class=\"string\">\"name\"</span>: <span class=\"string\">\"防城港\"</span>&#125;</div><div class=\"line\">\t\t]</div><div class=\"line\">\t&#125;,</div><div class=\"line\">\t<span class=\"string\">\"桂林\"</span>: &#123;</div><div class=\"line\">\t\t<span class=\"string\">\"name\"</span>: <span class=\"string\">\"桂林\"</span>,</div><div class=\"line\">\t\t<span class=\"string\">\"children\"</span>: [</div><div class=\"line\">\t\t\t&#123;<span class=\"string\">\"name\"</span>:<span class=\"string\">\"秀峰区\"</span>&#125;,</div><div class=\"line\">\t\t\t&#123;<span class=\"string\">\"name\"</span>:<span class=\"string\">\"叠彩区\"</span>&#125;,</div><div class=\"line\">\t\t\t&#123;<span class=\"string\">\"name\"</span>:<span class=\"string\">\"象山区\"</span>&#125;,</div><div class=\"line\">\t\t\t&#123;<span class=\"string\">\"name\"</span>:<span class=\"string\">\"七星区\"</span>&#125;</div><div class=\"line\">\t\t]</div><div class=\"line\">\t&#125;,</div><div class=\"line\">\t<span class=\"string\">\"黑龙江\"</span>: &#123;</div><div class=\"line\">\t\t\t<span class=\"string\">\"name\"</span>:<span class=\"string\">\"黑龙江\"</span>,</div><div class=\"line\">\t\t\t<span class=\"string\">\"children\"</span>:</div><div class=\"line\">\t\t\t[</div><div class=\"line\">\t\t\t\t\t&#123;<span class=\"string\">\"name\"</span>:<span class=\"string\">\"哈尔滨\"</span>&#125;,</div><div class=\"line\">\t\t\t\t\t&#123;<span class=\"string\">\"name\"</span>:<span class=\"string\">\"齐齐哈尔\"</span>&#125;,</div><div class=\"line\">\t\t\t\t\t&#123;<span class=\"string\">\"name\"</span>:<span class=\"string\">\"牡丹江\"</span>&#125;,</div><div class=\"line\">\t\t\t\t\t&#123;<span class=\"string\">\"name\"</span>:<span class=\"string\">\"大庆\"</span>&#125;</div><div class=\"line\">\t\t\t]</div><div class=\"line\">\t&#125;,</div><div class=\"line\">\t<span class=\"string\">\"新疆\"</span> : &#123;</div><div class=\"line\">\t\t\t<span class=\"string\">\"name\"</span>:<span class=\"string\">\"新疆\"</span> ,</div><div class=\"line\">\t\t\t<span class=\"string\">\"children\"</span>:</div><div class=\"line\">\t\t\t[</div><div class=\"line\">\t\t\t\t\t&#123;<span class=\"string\">\"name\"</span>:<span class=\"string\">\"乌鲁木齐\"</span>&#125;,</div><div class=\"line\">\t\t\t\t\t&#123;<span class=\"string\">\"name\"</span>:<span class=\"string\">\"克拉玛依\"</span>&#125;,</div><div class=\"line\">\t\t\t\t\t&#123;<span class=\"string\">\"name\"</span>:<span class=\"string\">\"吐鲁番\"</span>&#125;,</div><div class=\"line\">\t\t\t\t\t&#123;<span class=\"string\">\"name\"</span>:<span class=\"string\">\"哈密\"</span>&#125;</div><div class=\"line\">\t\t\t]</div><div class=\"line\">\t&#125;</div><div class=\"line\">&#125;</div></pre></td></tr></table></figure>\n<h4 id=\"画布\"><a href=\"#画布\" class=\"headerlink\" title=\"画布\"></a>画布</h4><figure class=\"highlight js\"><table><tr><td class=\"gutter\"><pre><div class=\"line\">1</div><div class=\"line\">2</div><div class=\"line\">3</div><div class=\"line\">4</div><div class=\"line\">5</div><div class=\"line\">6</div><div class=\"line\">7</div><div class=\"line\">8</div><div class=\"line\">9</div><div class=\"line\">10</div><div class=\"line\">11</div><div class=\"line\">12</div><div class=\"line\">13</div><div class=\"line\">14</div><div class=\"line\">15</div><div class=\"line\">16</div><div class=\"line\">17</div><div class=\"line\">18</div><div class=\"line\">19</div><div class=\"line\">20</div><div class=\"line\">21</div><div class=\"line\">22</div><div class=\"line\">23</div><div class=\"line\">24</div></pre></td><td class=\"code\"><pre><div class=\"line\"><span class=\"keyword\">var</span> margin = &#123;</div><div class=\"line\">\t<span class=\"attr\">top</span>: <span class=\"number\">20</span>,</div><div class=\"line\">\t<span class=\"attr\">left</span>: <span class=\"number\">50</span>,</div><div class=\"line\">\t<span class=\"attr\">right</span>: <span class=\"number\">50</span>,</div><div class=\"line\">\t<span class=\"attr\">bottom</span>: <span class=\"number\">20</span></div><div class=\"line\">&#125;;</div><div class=\"line\"><span class=\"keyword\">var</span> width = $(<span class=\"built_in\">document</span>).width(),</div><div class=\"line\">\theight = $(<span class=\"built_in\">document</span>).height(),</div><div class=\"line\">\ti = <span class=\"number\">0</span>,</div><div class=\"line\">\tlimit = <span class=\"number\">2</span>,</div><div class=\"line\">\troot;</div><div class=\"line\"></div><div class=\"line\">\t<span class=\"comment\">// draggable and scalable</span></div><div class=\"line\">\t<span class=\"keyword\">var</span> zoomListener = d3.behavior.zoom().scaleExtent([<span class=\"number\">0.1</span>, <span class=\"number\">3</span>]).on(<span class=\"string\">'zoom'</span>, zoom);</div><div class=\"line\">\t<span class=\"function\"><span class=\"keyword\">function</span> <span class=\"title\">zoom</span>(<span class=\"params\"></span>)</span>&#123;</div><div class=\"line\">\t\td3.select(<span class=\"string\">'svg'</span>).select(<span class=\"string\">'g'</span>).attr(<span class=\"string\">'transform'</span>, <span class=\"string\">'translate('</span> + d3.event.translate + <span class=\"string\">')scale('</span> + d3.event.scale + <span class=\"string\">')'</span>);</div><div class=\"line\">\t&#125;</div><div class=\"line\"></div><div class=\"line\">\t<span class=\"keyword\">var</span> svg = d3.select(<span class=\"string\">\"#treeContainer\"</span>).append(<span class=\"string\">\"svg\"</span>)</div><div class=\"line\">\t\t\t.attr(<span class=\"string\">\"width\"</span>, width - margin.left - margin.right)</div><div class=\"line\">\t\t\t.attr(<span class=\"string\">\"height\"</span>, height - margin.top - margin.bottom)</div><div class=\"line\">\t\t\t.call(zoomListener)</div><div class=\"line\">\t\t.append(<span class=\"string\">\"g\"</span>)</div><div class=\"line\">\t\t\t.attr(<span class=\"string\">\"transform\"</span>, <span class=\"string\">\"translate(\"</span> + margin.left + <span class=\"string\">\",\"</span> + margin.top + <span class=\"string\">\")\"</span>);</div></pre></td></tr></table></figure>\n<h4 id=\"获取异步数据\"><a href=\"#获取异步数据\" class=\"headerlink\" title=\"获取异步数据\"></a>获取异步数据</h4><figure class=\"highlight js\"><table><tr><td class=\"gutter\"><pre><div class=\"line\">1</div><div class=\"line\">2</div><div class=\"line\">3</div><div class=\"line\">4</div><div class=\"line\">5</div><div class=\"line\">6</div><div class=\"line\">7</div></pre></td><td class=\"code\"><pre><div class=\"line\"><span class=\"comment\">// 异步获取数据</span></div><div class=\"line\"><span class=\"function\"><span class=\"keyword\">function</span> <span class=\"title\">getData</span>(<span class=\"params\">sd, cb</span>)</span>&#123;</div><div class=\"line\">\td3.json(<span class=\"string\">'data/async_city.json'</span>, <span class=\"function\"><span class=\"keyword\">function</span>(<span class=\"params\">err, json</span>)</span>&#123;</div><div class=\"line\">\t\t<span class=\"comment\">// 通过callback返回部分数据</span></div><div class=\"line\">\t\tcb &amp;&amp; cb(json[sd.name]);</div><div class=\"line\">\t&#125;);</div><div class=\"line\">&#125;</div></pre></td></tr></table></figure>\n<h4 id=\"构造树\"><a href=\"#构造树\" class=\"headerlink\" title=\"构造树\"></a>构造树</h4><figure class=\"highlight js\"><table><tr><td class=\"gutter\"><pre><div class=\"line\">1</div><div class=\"line\">2</div><div class=\"line\">3</div><div class=\"line\">4</div><div class=\"line\">5</div><div class=\"line\">6</div><div class=\"line\">7</div><div class=\"line\">8</div><div class=\"line\">9</div></pre></td><td class=\"code\"><pre><div class=\"line\"><span class=\"comment\">// 获取树的root</span></div><div class=\"line\">getData(&#123;<span class=\"attr\">name</span>: <span class=\"string\">'root'</span>&#125;, <span class=\"function\"><span class=\"keyword\">function</span>(<span class=\"params\">json</span>)</span>&#123;</div><div class=\"line\">\troot = json;</div><div class=\"line\">\troot.x0 = height / <span class=\"number\">2</span>;</div><div class=\"line\">\troot.y0 = width / <span class=\"number\">2</span>;</div><div class=\"line\"></div><div class=\"line\">\t<span class=\"comment\">// 初始化树根</span></div><div class=\"line\">\tupdate(root);</div><div class=\"line\">&#125;);</div></pre></td></tr></table></figure>\n<p>从上面的代码可以看出构造树的核心代码就是这个update函数，下面以注释的形式深入理解树形的构造。</p>\n<figure class=\"highlight js\"><table><tr><td class=\"gutter\"><pre><div class=\"line\">1</div><div class=\"line\">2</div><div class=\"line\">3</div><div class=\"line\">4</div><div class=\"line\">5</div><div class=\"line\">6</div><div class=\"line\">7</div><div class=\"line\">8</div><div class=\"line\">9</div><div class=\"line\">10</div><div class=\"line\">11</div><div class=\"line\">12</div><div class=\"line\">13</div><div class=\"line\">14</div><div class=\"line\">15</div><div class=\"line\">16</div><div class=\"line\">17</div><div class=\"line\">18</div><div class=\"line\">19</div><div class=\"line\">20</div><div class=\"line\">21</div><div class=\"line\">22</div><div class=\"line\">23</div><div class=\"line\">24</div><div class=\"line\">25</div><div class=\"line\">26</div><div class=\"line\">27</div><div class=\"line\">28</div><div class=\"line\">29</div><div class=\"line\">30</div><div class=\"line\">31</div><div class=\"line\">32</div><div class=\"line\">33</div><div class=\"line\">34</div><div class=\"line\">35</div><div class=\"line\">36</div><div class=\"line\">37</div><div class=\"line\">38</div><div class=\"line\">39</div><div class=\"line\">40</div><div class=\"line\">41</div><div class=\"line\">42</div><div class=\"line\">43</div><div class=\"line\">44</div><div class=\"line\">45</div><div class=\"line\">46</div><div class=\"line\">47</div><div class=\"line\">48</div><div class=\"line\">49</div><div class=\"line\">50</div><div class=\"line\">51</div><div class=\"line\">52</div><div class=\"line\">53</div><div class=\"line\">54</div><div class=\"line\">55</div><div class=\"line\">56</div><div class=\"line\">57</div><div class=\"line\">58</div><div class=\"line\">59</div><div class=\"line\">60</div><div class=\"line\">61</div><div class=\"line\">62</div><div class=\"line\">63</div><div class=\"line\">64</div><div class=\"line\">65</div><div class=\"line\">66</div><div class=\"line\">67</div><div class=\"line\">68</div><div class=\"line\">69</div><div class=\"line\">70</div><div class=\"line\">71</div><div class=\"line\">72</div><div class=\"line\">73</div><div class=\"line\">74</div><div class=\"line\">75</div><div class=\"line\">76</div><div class=\"line\">77</div><div class=\"line\">78</div><div class=\"line\">79</div><div class=\"line\">80</div><div class=\"line\">81</div><div class=\"line\">82</div><div class=\"line\">83</div><div class=\"line\">84</div><div class=\"line\">85</div><div class=\"line\">86</div><div class=\"line\">87</div><div class=\"line\">88</div><div class=\"line\">89</div><div class=\"line\">90</div><div class=\"line\">91</div><div class=\"line\">92</div><div class=\"line\">93</div><div class=\"line\">94</div><div class=\"line\">95</div><div class=\"line\">96</div><div class=\"line\">97</div><div class=\"line\">98</div><div class=\"line\">99</div><div class=\"line\">100</div><div class=\"line\">101</div><div class=\"line\">102</div><div class=\"line\">103</div><div class=\"line\">104</div><div class=\"line\">105</div><div class=\"line\">106</div><div class=\"line\">107</div><div class=\"line\">108</div><div class=\"line\">109</div><div class=\"line\">110</div><div class=\"line\">111</div><div class=\"line\">112</div><div class=\"line\">113</div><div class=\"line\">114</div><div class=\"line\">115</div><div class=\"line\">116</div><div class=\"line\">117</div><div class=\"line\">118</div><div class=\"line\">119</div><div class=\"line\">120</div><div class=\"line\">121</div><div class=\"line\">122</div><div class=\"line\">123</div><div class=\"line\">124</div><div class=\"line\">125</div><div class=\"line\">126</div><div class=\"line\">127</div><div class=\"line\">128</div><div class=\"line\">129</div><div class=\"line\">130</div><div class=\"line\">131</div><div class=\"line\">132</div><div class=\"line\">133</div><div class=\"line\">134</div><div class=\"line\">135</div><div class=\"line\">136</div><div class=\"line\">137</div><div class=\"line\">138</div><div class=\"line\">139</div><div class=\"line\">140</div><div class=\"line\">141</div><div class=\"line\">142</div><div class=\"line\">143</div><div class=\"line\">144</div><div class=\"line\">145</div><div class=\"line\">146</div><div class=\"line\">147</div><div class=\"line\">148</div><div class=\"line\">149</div><div class=\"line\">150</div><div class=\"line\">151</div><div class=\"line\">152</div><div class=\"line\">153</div><div class=\"line\">154</div><div class=\"line\">155</div><div class=\"line\">156</div><div class=\"line\">157</div><div class=\"line\">158</div><div class=\"line\">159</div><div class=\"line\">160</div><div class=\"line\">161</div><div class=\"line\">162</div><div class=\"line\">163</div><div class=\"line\">164</div><div class=\"line\">165</div><div class=\"line\">166</div><div class=\"line\">167</div><div class=\"line\">168</div><div class=\"line\">169</div><div class=\"line\">170</div><div class=\"line\">171</div><div class=\"line\">172</div><div class=\"line\">173</div><div class=\"line\">174</div><div class=\"line\">175</div><div class=\"line\">176</div><div class=\"line\">177</div><div class=\"line\">178</div><div class=\"line\">179</div><div class=\"line\">180</div><div class=\"line\">181</div><div class=\"line\">182</div><div class=\"line\">183</div><div class=\"line\">184</div><div class=\"line\">185</div></pre></td><td class=\"code\"><pre><div class=\"line\"><span class=\"comment\">// 新建一个树的布局</span></div><div class=\"line\"><span class=\"keyword\">var</span> tree = d3.layout.tree()</div><div class=\"line\">\t\t.size([height - margin.top - margin.bottom, width - margin.left - margin.right]);</div><div class=\"line\"></div><div class=\"line\"><span class=\"comment\">// 因为默认的树布局是自上而下的，这里构建一个自左向右的树，故需要一个转换x和y坐标的函数</span></div><div class=\"line\"><span class=\"keyword\">var</span> diagonal = d3.svg.diagonal()</div><div class=\"line\">\t\t.projection(<span class=\"function\"><span class=\"keyword\">function</span>(<span class=\"params\">d</span>) </span>&#123; <span class=\"keyword\">return</span> [d.y, d.x]; &#125;);</div><div class=\"line\"></div><div class=\"line\"><span class=\"function\"><span class=\"keyword\">function</span> <span class=\"title\">update</span>(<span class=\"params\">source</span>) </span>&#123;</div><div class=\"line\">\t<span class=\"keyword\">var</span> duration = d3.event &amp;&amp; d3.event.altKey ? <span class=\"number\">5000</span> : <span class=\"number\">500</span>;</div><div class=\"line\"></div><div class=\"line\">\t<span class=\"comment\">/**</span></div><div class=\"line\">\t* 这里实际上是通过tree的nodes函数获得树形结构的每个节点的数据，包括位置信息和深度</div><div class=\"line\">\t* 返回的数据结构如下：</div><div class=\"line\">\t* [&#123;depth: 0, name: \"中国\", children: [], x: 380, y: 0&#125;]</div><div class=\"line\">\t*/</div><div class=\"line\">\t<span class=\"keyword\">var</span> nodes = tree.nodes(root).reverse();</div><div class=\"line\"></div><div class=\"line\">\t<span class=\"comment\">// 为了让当前节点居中，故更具当前节点的depth来计算各节点的y坐标（即横向位置）</span></div><div class=\"line\">\t<span class=\"keyword\">var</span> srcDepth = source.depth;</div><div class=\"line\">\tnodes.forEach(<span class=\"function\"><span class=\"keyword\">function</span>(<span class=\"params\">d</span>)</span>&#123;</div><div class=\"line\">\t\td.y = height / <span class=\"number\">2</span> + <span class=\"number\">180</span> * (d.depth - srcDepth);</div><div class=\"line\">\t&#125;);</div><div class=\"line\"></div><div class=\"line\">\t<span class=\"comment\">// Update the nodes…</span></div><div class=\"line\">\t<span class=\"keyword\">var</span> node = svg.selectAll(<span class=\"string\">\"g.node\"</span>)</div><div class=\"line\">\t\t\t.data(nodes, <span class=\"function\"><span class=\"keyword\">function</span>(<span class=\"params\">d</span>) </span>&#123; <span class=\"keyword\">return</span> d.id || (d.id = ++i); &#125;);</div><div class=\"line\"></div><div class=\"line\">\t<span class=\"comment\">// Enter any new nodes at the parent's previous position.</span></div><div class=\"line\">\t<span class=\"keyword\">var</span> nodeEnter = node.enter().append(<span class=\"string\">\"g\"</span>)</div><div class=\"line\">\t\t\t.attr(<span class=\"string\">\"class\"</span>, <span class=\"string\">\"node\"</span>)</div><div class=\"line\">\t\t\t.attr(<span class=\"string\">\"transform\"</span>, <span class=\"function\"><span class=\"keyword\">function</span>(<span class=\"params\">d</span>) </span>&#123; <span class=\"keyword\">return</span> <span class=\"string\">\"translate(\"</span> + source.y0 + <span class=\"string\">\",\"</span> + source.x0 + <span class=\"string\">\")\"</span>; &#125;)</div><div class=\"line\">\t\t\t.on(<span class=\"string\">\"click\"</span>, click)</div><div class=\"line\">\t\t\t.on(<span class=\"string\">'mouseover'</span>, <span class=\"function\"><span class=\"keyword\">function</span>(<span class=\"params\">d</span>)</span>&#123;</div><div class=\"line\">\t\t\t\t<span class=\"keyword\">if</span>(d.name == <span class=\"string\">'more'</span>) <span class=\"keyword\">return</span>;</div><div class=\"line\">\t\t\t\t<span class=\"comment\">// 鼠标hover某个节点时，显示一个详细信息的弹层</span></div><div class=\"line\">\t\t\t\t<span class=\"keyword\">var</span> detail = d3.select(<span class=\"keyword\">this</span>).append(<span class=\"string\">'g'</span>)</div><div class=\"line\">\t\t\t\t\t\t.attr(<span class=\"string\">'class'</span>, <span class=\"string\">'detail'</span>)</div><div class=\"line\">\t\t\t\t\t\t.attr(<span class=\"string\">'dx'</span>, d3.event.x)</div><div class=\"line\">\t\t\t\t\t\t.attr(<span class=\"string\">'dy'</span>, d3.event.y + <span class=\"number\">10</span>);</div><div class=\"line\">\t\t\t\tdetail.append(<span class=\"string\">'rect'</span>)</div><div class=\"line\">\t\t\t\t\t\t.attr(<span class=\"string\">'width'</span>, <span class=\"number\">100</span>)</div><div class=\"line\">\t\t\t\t\t\t.attr(<span class=\"string\">'height'</span>, <span class=\"number\">100</span>);</div><div class=\"line\">\t\t\t\tdetail.append(<span class=\"string\">'text'</span>)</div><div class=\"line\">\t\t\t\t\t\t.attr(<span class=\"string\">'dx'</span>, <span class=\"string\">'.35em'</span>)</div><div class=\"line\">\t\t\t\t\t\t.attr(<span class=\"string\">'dy'</span>, <span class=\"string\">'2em'</span>)</div><div class=\"line\">\t\t\t\t\t\t.attr(<span class=\"string\">'text-anchor'</span>, <span class=\"string\">'start'</span>)</div><div class=\"line\">\t\t\t\t\t\t.text(<span class=\"function\"><span class=\"keyword\">function</span>(<span class=\"params\">d</span>)</span>&#123;</div><div class=\"line\">\t\t\t\t\t\t\t<span class=\"keyword\">return</span> <span class=\"string\">'name: '</span> + d.name;</div><div class=\"line\">\t\t\t\t\t\t&#125;);</div><div class=\"line\">\t\t\t&#125;)</div><div class=\"line\">\t\t\t.on(<span class=\"string\">'mousemove'</span>, <span class=\"function\"><span class=\"keyword\">function</span>(<span class=\"params\">d</span>)</span>&#123;</div><div class=\"line\">\t\t\t\t<span class=\"keyword\">var</span> detail = d3.select(<span class=\"keyword\">this</span>).select(<span class=\"string\">'.detail'</span>);</div><div class=\"line\">\t\t\t\tdetail.attr(<span class=\"string\">'x'</span>, d3.event.x)</div><div class=\"line\">\t\t\t\t\t\t.attr(<span class=\"string\">'y'</span>, d3.event.y);</div><div class=\"line\">\t\t\t&#125;)</div><div class=\"line\">\t\t\t.on(<span class=\"string\">'mouseout'</span>, <span class=\"function\"><span class=\"keyword\">function</span>(<span class=\"params\">d</span>)</span>&#123;</div><div class=\"line\">\t\t\t\t<span class=\"keyword\">if</span>(d.name == <span class=\"string\">'more'</span>) <span class=\"keyword\">return</span>;</div><div class=\"line\">\t\t\t\td3.select(<span class=\"keyword\">this</span>).select(<span class=\"string\">'.detail'</span>).remove();</div><div class=\"line\">\t\t\t&#125;);</div><div class=\"line\"></div><div class=\"line\">\tnodeEnter.append(<span class=\"string\">\"circle\"</span>)</div><div class=\"line\">\t\t\t.attr(<span class=\"string\">\"r\"</span>, <span class=\"number\">1e-6</span>)</div><div class=\"line\">\t\t\t.style(<span class=\"string\">\"fill\"</span>, <span class=\"function\"><span class=\"keyword\">function</span>(<span class=\"params\">d</span>)</span>&#123; <span class=\"keyword\">return</span> !d.isExpand ? <span class=\"string\">\"lightsteelblue\"</span> : <span class=\"string\">\"#fff\"</span>; &#125;);</div><div class=\"line\"></div><div class=\"line\">\tnodeEnter.append(<span class=\"string\">\"text\"</span>)</div><div class=\"line\">\t\t\t.attr(<span class=\"string\">\"x\"</span>, <span class=\"number\">-10</span>)</div><div class=\"line\">\t\t\t.attr(<span class=\"string\">\"dy\"</span>, <span class=\"string\">\".35em\"</span>)</div><div class=\"line\">\t\t\t.attr(<span class=\"string\">\"text-anchor\"</span>, <span class=\"string\">\"end\"</span>)</div><div class=\"line\">\t\t\t.text(<span class=\"function\"><span class=\"keyword\">function</span>(<span class=\"params\">d</span>) </span>&#123; <span class=\"keyword\">return</span> d.name; &#125;)</div><div class=\"line\">\t\t\t.style(<span class=\"string\">\"fill-opacity\"</span>, <span class=\"number\">1e-6</span>);</div><div class=\"line\"></div><div class=\"line\"></div><div class=\"line\">\t<span class=\"comment\">// Transition nodes to their new position.</span></div><div class=\"line\">\t<span class=\"keyword\">var</span> nodeUpdate = node.transition()</div><div class=\"line\">\t\t\t.duration(duration)</div><div class=\"line\">\t\t\t.attr(<span class=\"string\">\"transform\"</span>, <span class=\"function\"><span class=\"keyword\">function</span>(<span class=\"params\">d</span>) </span>&#123; <span class=\"keyword\">return</span> <span class=\"string\">\"translate(\"</span> + d.y + <span class=\"string\">\",\"</span> + d.x + <span class=\"string\">\")\"</span>; &#125;);</div><div class=\"line\"></div><div class=\"line\">\tnodeUpdate.select(<span class=\"string\">\"circle\"</span>)</div><div class=\"line\">\t\t\t.attr(<span class=\"string\">\"r\"</span>, <span class=\"number\">10</span>)</div><div class=\"line\">\t\t\t.style(<span class=\"string\">\"fill\"</span>, <span class=\"function\"><span class=\"keyword\">function</span>(<span class=\"params\">d</span>)</span>&#123; <span class=\"keyword\">return</span> !d.isExpand ? <span class=\"string\">\"lightsteelblue\"</span> : <span class=\"string\">\"#fff\"</span>; &#125;);</div><div class=\"line\"></div><div class=\"line\">\tnodeUpdate.select(<span class=\"string\">\"text\"</span>)</div><div class=\"line\">\t\t\t.style(<span class=\"string\">\"fill-opacity\"</span>, <span class=\"number\">1</span>);</div><div class=\"line\"></div><div class=\"line\">\t<span class=\"comment\">// Transition exiting nodes to the parent's new position.</span></div><div class=\"line\">\t<span class=\"keyword\">var</span> nodeExit = node.exit().transition()</div><div class=\"line\">\t\t\t.duration(duration)</div><div class=\"line\">\t\t\t.attr(<span class=\"string\">\"transform\"</span>, <span class=\"function\"><span class=\"keyword\">function</span>(<span class=\"params\">d</span>) </span>&#123;</div><div class=\"line\">\t\t\t\t<span class=\"keyword\">if</span>(d.name == <span class=\"string\">'more'</span>) <span class=\"keyword\">this</span>.remove();</div><div class=\"line\">\t\t\t\t<span class=\"keyword\">return</span> <span class=\"string\">\"translate(\"</span> + source.y + <span class=\"string\">\",\"</span> + source.x + <span class=\"string\">\")\"</span>;</div><div class=\"line\">\t\t\t&#125;)</div><div class=\"line\">\t\t\t.remove();</div><div class=\"line\"></div><div class=\"line\">\tnodeExit.select(<span class=\"string\">\"circle\"</span>)</div><div class=\"line\">\t\t\t.attr(<span class=\"string\">\"r\"</span>, <span class=\"number\">1e-6</span>);</div><div class=\"line\"></div><div class=\"line\">\tnodeExit.select(<span class=\"string\">\"text\"</span>)</div><div class=\"line\">\t\t\t.style(<span class=\"string\">\"fill-opacity\"</span>, <span class=\"number\">1e-6</span>);</div><div class=\"line\"></div><div class=\"line\">\t<span class=\"comment\">/** Update the links...</span></div><div class=\"line\">\t* tree.links方法获取连线节点之间的映射，返回的数据结构如下：</div><div class=\"line\">\t* [&#123;source: &#123;&#125;, target: &#123;&#125;&#125;]</div><div class=\"line\">\t*/</div><div class=\"line\">\t<span class=\"keyword\">var</span> link = svg.selectAll(<span class=\"string\">\"path.link\"</span>)</div><div class=\"line\">\t\t\t.data(tree.links(nodes), <span class=\"function\"><span class=\"keyword\">function</span>(<span class=\"params\">d</span>) </span>&#123; <span class=\"keyword\">return</span> d.target.id; &#125;);</div><div class=\"line\"></div><div class=\"line\">\t<span class=\"comment\">// Enter any new links at the parent's previous position.</span></div><div class=\"line\">\tlink.enter().insert(<span class=\"string\">\"path\"</span>, <span class=\"string\">\"g\"</span>)</div><div class=\"line\">\t\t\t.attr(<span class=\"string\">\"class\"</span>, <span class=\"string\">\"link\"</span>)</div><div class=\"line\">\t\t\t.attr(<span class=\"string\">\"d\"</span>, <span class=\"function\"><span class=\"keyword\">function</span>(<span class=\"params\">d</span>) </span>&#123;</div><div class=\"line\">\t\t\t\t<span class=\"keyword\">var</span> o = &#123;<span class=\"attr\">x</span>: source.x0, <span class=\"attr\">y</span>: source.y0&#125;;</div><div class=\"line\">\t\t\t\t<span class=\"keyword\">return</span> diagonal(&#123;<span class=\"attr\">source</span>: o, <span class=\"attr\">target</span>: o&#125;);</div><div class=\"line\">\t\t\t&#125;)</div><div class=\"line\">\t\t.transition()</div><div class=\"line\">\t\t\t.duration(duration)</div><div class=\"line\">\t\t\t.attr(<span class=\"string\">\"d\"</span>, diagonal);</div><div class=\"line\"></div><div class=\"line\">\t<span class=\"comment\">// Transition links to their new position.</span></div><div class=\"line\">\tlink.transition()</div><div class=\"line\">\t\t\t.duration(duration)</div><div class=\"line\">\t\t\t.attr(<span class=\"string\">\"d\"</span>, diagonal);</div><div class=\"line\"></div><div class=\"line\">\t<span class=\"comment\">// Transition exiting nodes to the parent's new position.</span></div><div class=\"line\">\tlink.exit().transition()</div><div class=\"line\">\t\t\t.duration(duration)</div><div class=\"line\">\t\t\t.attr(<span class=\"string\">\"d\"</span>, <span class=\"function\"><span class=\"keyword\">function</span>(<span class=\"params\">d</span>) </span>&#123;</div><div class=\"line\">\t\t\t\t<span class=\"keyword\">if</span>(d.target.name == <span class=\"string\">'more'</span>) <span class=\"keyword\">this</span>.remove();</div><div class=\"line\">\t\t\t\t<span class=\"keyword\">var</span> o = &#123;<span class=\"attr\">x</span>: source.x, <span class=\"attr\">y</span>: source.y&#125;;</div><div class=\"line\">\t\t\t\t<span class=\"keyword\">return</span> diagonal(&#123;<span class=\"attr\">source</span>: o, <span class=\"attr\">target</span>: o&#125;);</div><div class=\"line\">\t\t\t&#125;)</div><div class=\"line\">\t\t\t.remove();</div><div class=\"line\"></div><div class=\"line\">\t<span class=\"comment\">// Stash the old positions for transition.</span></div><div class=\"line\">\t<span class=\"comment\">// 记录当前节点所在的位置，为node update提供位移动画</span></div><div class=\"line\">\tnodes.forEach(<span class=\"function\"><span class=\"keyword\">function</span>(<span class=\"params\">d</span>) </span>&#123;</div><div class=\"line\">\t\td.x0 = d.x;</div><div class=\"line\">\t\td.y0 = d.y;</div><div class=\"line\">\t&#125;);</div><div class=\"line\">&#125;</div><div class=\"line\"></div><div class=\"line\"><span class=\"function\"><span class=\"keyword\">function</span> <span class=\"title\">collapse</span>(<span class=\"params\">d</span>)</span>&#123;</div><div class=\"line\">\t<span class=\"keyword\">delete</span> d._children;</div><div class=\"line\">\t<span class=\"keyword\">delete</span> d.isExpand;</div><div class=\"line\">\t<span class=\"keyword\">delete</span> d.children;</div><div class=\"line\">&#125;</div><div class=\"line\"><span class=\"function\"><span class=\"keyword\">function</span> <span class=\"title\">expand</span>(<span class=\"params\">d</span>)</span>&#123;</div><div class=\"line\">\tgetData(&#123;<span class=\"attr\">name</span>: d.name&#125;, <span class=\"function\"><span class=\"keyword\">function</span>(<span class=\"params\">json</span>)</span>&#123;</div><div class=\"line\">\t\t<span class=\"keyword\">if</span>(json &amp;&amp; json.children)&#123;</div><div class=\"line\">\t\t\t<span class=\"comment\">// 获取到此节点有子节点</span></div><div class=\"line\">\t\t\td._children = json.children;</div><div class=\"line\">\t\t\td.children = d._children.slice(<span class=\"number\">0</span>, limit);</div><div class=\"line\">\t\t\t<span class=\"keyword\">if</span>(d._children.length &gt; d.children.length)&#123;</div><div class=\"line\">\t\t\t\td.children.push(&#123;<span class=\"string\">'name'</span>: <span class=\"string\">'more'</span>&#125;);</div><div class=\"line\">\t\t\t&#125;</div><div class=\"line\">\t\t&#125;</div><div class=\"line\">\t\td.isExpand = <span class=\"literal\">true</span>;</div><div class=\"line\">\t\tupdate(d);</div><div class=\"line\">\t&#125;);</div><div class=\"line\">&#125;</div><div class=\"line\"></div><div class=\"line\"><span class=\"comment\">// 异步获取数据</span></div><div class=\"line\"><span class=\"function\"><span class=\"keyword\">function</span> <span class=\"title\">getData</span>(<span class=\"params\">sd, cb</span>)</span>&#123;</div><div class=\"line\">\td3.json(<span class=\"string\">'data/async_city.json'</span>, <span class=\"function\"><span class=\"keyword\">function</span>(<span class=\"params\">err, json</span>)</span>&#123;</div><div class=\"line\">\t\tcb &amp;&amp; cb(json[sd.name]);</div><div class=\"line\">\t&#125;);</div><div class=\"line\">&#125;</div><div class=\"line\"></div><div class=\"line\"><span class=\"function\"><span class=\"keyword\">function</span> <span class=\"title\">click</span>(<span class=\"params\">d</span>)</span>&#123;</div><div class=\"line\">\t<span class=\"keyword\">if</span>(d.name == <span class=\"string\">'more'</span>)&#123;</div><div class=\"line\">\t\t<span class=\"comment\">// 点击更多</span></div><div class=\"line\">\t\td.parent.children = d.parent._children.slice(<span class=\"number\">0</span>, (d.parent.children.length - <span class=\"number\">1</span>) + limit);</div><div class=\"line\">\t\t<span class=\"keyword\">if</span>(d.parent._children.length &gt; d.parent.children.length)&#123;</div><div class=\"line\">\t\t\td.parent.children.push(&#123;<span class=\"string\">'name'</span>: <span class=\"string\">'more'</span>&#125;);</div><div class=\"line\">\t\t&#125;</div><div class=\"line\">\t\tupdate(d.parent);</div><div class=\"line\">\t&#125;<span class=\"keyword\">else</span> <span class=\"keyword\">if</span>(d.isExpand &amp;&amp; d.children)&#123;</div><div class=\"line\">\t\t<span class=\"comment\">// 点击展开的节点</span></div><div class=\"line\">\t\tcollapse(d);</div><div class=\"line\">\t\tupdate(d);</div><div class=\"line\">\t&#125;<span class=\"keyword\">else</span>&#123;</div><div class=\"line\">\t\t<span class=\"comment\">// 点击未展开的点</span></div><div class=\"line\">\t\texpand(d);</div><div class=\"line\">\t&#125;</div><div class=\"line\">&#125;</div></pre></td></tr></table></figure>\n<blockquote>\n<p>可以从<a href=\"https://github.com/brucewar/practice-in-D3\" target=\"_blank\" rel=\"external\">https://github.com/brucewar/practice-in-D3</a>获取示例代码</p>\n</blockquote>\n","excerpt":"","more":"<p>因为最近手上有个小的需求，设计一个可缩放和可拖拽的树形结构，我便去研读了D3官网给的一个树形的例子。</p>\n<h3 id=\"布局（Layout）\"><a href=\"#布局（Layout）\" class=\"headerlink\" title=\"布局（Layout）\"></a>布局（Layout）</h3><p>原本我以为理解了基本的选择器、元素操作、Enter、Exit就能去看实例的代码了，后来发现我错了，所以这里需要理解一下D3中布局（Layout）的概念。布局是D3中一个十分重要的概念，从布局衍生出很多图表。例如：饼状图（pie）、力导向图（force），树状图（tree）等等，基本实现了很多开源的可视化工具提供的图表。但是它又和很多可视化工具（如Echarts）有很大的不同。</p>\n<p>相对于其它工具来说，D3较底层一点，所以初学者可能会觉得有点困难，但是一旦理解了D3布局的思想，使用起来，会比其它工具更加得心应手。首先，我阐释下D3和大部分可视化工具数据到图表的流程：</p>\n<ul>\n<li>大部分可视化工具：数据 =&gt; 封装好的绘图函数 =&gt; 图表</li>\n<li>D3：数据 =&gt; Layout =&gt; 绘图所需的数据 =&gt; 绘制图形 =&gt; 图表</li>\n</ul>\n<p>可以看出，D3需要自己去绘制图形，但是可以通过布局函数获得绘图所需要的数据，坏处是对初学者是一个很大的考验，好处是它能帮助我们制作出更加精密的图形。</p>\n<h3 id=\"树状图\"><a href=\"#树状图\" class=\"headerlink\" title=\"树状图\"></a>树状图</h3><p>回归正题，如何设计一个树形结构，我将从D3官网提供的示例代码分析。</p>\n<p>页面代码如下：</p>\n<figure class=\"highlight html\"><table><tr><td class=\"gutter\"><pre><div class=\"line\">1</div><div class=\"line\">2</div><div class=\"line\">3</div><div class=\"line\">4</div><div class=\"line\">5</div><div class=\"line\">6</div><div class=\"line\">7</div><div class=\"line\">8</div><div class=\"line\">9</div><div class=\"line\">10</div><div class=\"line\">11</div><div class=\"line\">12</div><div class=\"line\">13</div><div class=\"line\">14</div><div class=\"line\">15</div><div class=\"line\">16</div><div class=\"line\">17</div><div class=\"line\">18</div><div class=\"line\">19</div><div class=\"line\">20</div><div class=\"line\">21</div><div class=\"line\">22</div><div class=\"line\">23</div><div class=\"line\">24</div><div class=\"line\">25</div><div class=\"line\">26</div><div class=\"line\">27</div><div class=\"line\">28</div><div class=\"line\">29</div><div class=\"line\">30</div><div class=\"line\">31</div><div class=\"line\">32</div><div class=\"line\">33</div><div class=\"line\">34</div><div class=\"line\">35</div><div class=\"line\">36</div><div class=\"line\">37</div><div class=\"line\">38</div><div class=\"line\">39</div><div class=\"line\">40</div><div class=\"line\">41</div><div class=\"line\">42</div></pre></td><td class=\"code\"><pre><div class=\"line\"><span class=\"meta\">&lt;!DOCTYPE html&gt;</span></div><div class=\"line\"><span class=\"tag\">&lt;<span class=\"name\">html</span> <span class=\"attr\">lang</span>=<span class=\"string\">\"en\"</span>&gt;</span></div><div class=\"line\"><span class=\"tag\">&lt;<span class=\"name\">head</span>&gt;</span></div><div class=\"line\">  <span class=\"tag\">&lt;<span class=\"name\">meta</span> <span class=\"attr\">charset</span>=<span class=\"string\">\"utf-8\"</span>&gt;</span></div><div class=\"line\">  <span class=\"tag\">&lt;<span class=\"name\">title</span>&gt;</span>tree<span class=\"tag\">&lt;/<span class=\"name\">title</span>&gt;</span></div><div class=\"line\">\t<span class=\"tag\">&lt;<span class=\"name\">style</span>&gt;</span><span class=\"undefined\"></div><div class=\"line\">\tbody&#123;</div><div class=\"line\">\t\tmargin: 0;</div><div class=\"line\">\t&#125;</div><div class=\"line\">\tsvg&#123;</div><div class=\"line\">\t\tbackground-color: #eee;</div><div class=\"line\">\t&#125;</div><div class=\"line\">\t.node circle &#123;</div><div class=\"line\">\t  cursor: pointer;</div><div class=\"line\">\t  fill: #fff;</div><div class=\"line\">\t  stroke: steelblue;</div><div class=\"line\">\t  stroke-width: 1.5px;</div><div class=\"line\">\t&#125;</div><div class=\"line\">\t.node text &#123;</div><div class=\"line\">\t  font-size: 11px;</div><div class=\"line\">\t&#125;</div><div class=\"line\">\tpath.link &#123;</div><div class=\"line\">\t  fill: none;</div><div class=\"line\">\t  stroke: #ccc;</div><div class=\"line\">\t  stroke-width: 1.5px;</div><div class=\"line\">\t&#125;</div><div class=\"line\">\tg.detail rect&#123;</div><div class=\"line\">\t\tfill: #000;</div><div class=\"line\">\t\tfill-opacity: .6;</div><div class=\"line\">\t\trx: 5;</div><div class=\"line\">\t\try: 5;</div><div class=\"line\">\t&#125;</div><div class=\"line\">\tg.detail text&#123;</div><div class=\"line\">\t\tfill: #fff;</div><div class=\"line\">\t&#125;</div><div class=\"line\">\t</span><span class=\"tag\">&lt;/<span class=\"name\">style</span>&gt;</span></div><div class=\"line\"><span class=\"tag\">&lt;/<span class=\"name\">head</span>&gt;</span></div><div class=\"line\"><span class=\"tag\">&lt;<span class=\"name\">body</span>&gt;</span></div><div class=\"line\">\t<span class=\"tag\">&lt;<span class=\"name\">div</span> <span class=\"attr\">id</span>=<span class=\"string\">\"treeContainer\"</span>&gt;</span><span class=\"tag\">&lt;/<span class=\"name\">div</span>&gt;</span></div><div class=\"line\">  <span class=\"tag\">&lt;<span class=\"name\">script</span> <span class=\"attr\">src</span>=<span class=\"string\">\"./dist/tree.bundle.js\"</span>&gt;</span><span class=\"undefined\"></span><span class=\"tag\">&lt;/<span class=\"name\">script</span>&gt;</span></div><div class=\"line\"><span class=\"tag\">&lt;/<span class=\"name\">body</span>&gt;</span></div><div class=\"line\"><span class=\"tag\">&lt;/<span class=\"name\">html</span>&gt;</span></div></pre></td></tr></table></figure>\n<p>因为D3示例代码是同步的形式读出整个树形数据结构，我对其进行了改造，模拟异步数据（async_city.json）。</p>\n<figure class=\"highlight js\"><table><tr><td class=\"gutter\"><pre><div class=\"line\">1</div><div class=\"line\">2</div><div class=\"line\">3</div><div class=\"line\">4</div><div class=\"line\">5</div><div class=\"line\">6</div><div class=\"line\">7</div><div class=\"line\">8</div><div class=\"line\">9</div><div class=\"line\">10</div><div class=\"line\">11</div><div class=\"line\">12</div><div class=\"line\">13</div><div class=\"line\">14</div><div class=\"line\">15</div><div class=\"line\">16</div><div class=\"line\">17</div><div class=\"line\">18</div><div class=\"line\">19</div><div class=\"line\">20</div><div class=\"line\">21</div><div class=\"line\">22</div><div class=\"line\">23</div><div class=\"line\">24</div><div class=\"line\">25</div><div class=\"line\">26</div><div class=\"line\">27</div><div class=\"line\">28</div><div class=\"line\">29</div><div class=\"line\">30</div><div class=\"line\">31</div><div class=\"line\">32</div><div class=\"line\">33</div><div class=\"line\">34</div><div class=\"line\">35</div><div class=\"line\">36</div><div class=\"line\">37</div><div class=\"line\">38</div><div class=\"line\">39</div><div class=\"line\">40</div><div class=\"line\">41</div><div class=\"line\">42</div><div class=\"line\">43</div><div class=\"line\">44</div><div class=\"line\">45</div><div class=\"line\">46</div><div class=\"line\">47</div><div class=\"line\">48</div><div class=\"line\">49</div><div class=\"line\">50</div><div class=\"line\">51</div><div class=\"line\">52</div><div class=\"line\">53</div><div class=\"line\">54</div><div class=\"line\">55</div><div class=\"line\">56</div><div class=\"line\">57</div><div class=\"line\">58</div><div class=\"line\">59</div><div class=\"line\">60</div><div class=\"line\">61</div></pre></td><td class=\"code\"><pre><div class=\"line\">&#123;</div><div class=\"line\">\t<span class=\"string\">\"root\"</span>: &#123;</div><div class=\"line\">\t\t<span class=\"string\">\"name\"</span>: <span class=\"string\">\"中国\"</span></div><div class=\"line\">\t&#125;,</div><div class=\"line\">\t<span class=\"string\">\"中国\"</span>: &#123;</div><div class=\"line\">\t\t<span class=\"string\">\"name\"</span>: <span class=\"string\">\"中国\"</span>,</div><div class=\"line\">\t\t<span class=\"string\">\"children\"</span>: [</div><div class=\"line\">\t\t\t&#123;<span class=\"string\">\"name\"</span>: <span class=\"string\">\"浙江\"</span>&#125;,</div><div class=\"line\">\t\t\t&#123;<span class=\"string\">\"name\"</span>: <span class=\"string\">\"广西\"</span>&#125;,</div><div class=\"line\">\t\t\t&#123;<span class=\"string\">\"name\"</span>: <span class=\"string\">\"黑龙江\"</span>&#125;,</div><div class=\"line\">\t\t\t&#123;<span class=\"string\">\"name\"</span>: <span class=\"string\">\"新疆\"</span>&#125;</div><div class=\"line\">\t\t]</div><div class=\"line\">\t&#125;,</div><div class=\"line\">\t<span class=\"string\">\"浙江\"</span>: &#123;</div><div class=\"line\">\t\t<span class=\"string\">\"name\"</span>: <span class=\"string\">\"浙江\"</span>,</div><div class=\"line\">\t\t<span class=\"string\">\"children\"</span>: [</div><div class=\"line\">\t\t\t&#123;<span class=\"string\">\"name\"</span>: <span class=\"string\">\"杭州\"</span>&#125;,</div><div class=\"line\">\t\t\t&#123;<span class=\"string\">\"name\"</span>: <span class=\"string\">\"宁波\"</span>&#125;,</div><div class=\"line\">\t\t\t&#123;<span class=\"string\">\"name\"</span>:<span class=\"string\">\"温州\"</span> &#125;,</div><div class=\"line\">\t\t\t&#123;<span class=\"string\">\"name\"</span>:<span class=\"string\">\"绍兴\"</span> &#125;</div><div class=\"line\">\t\t]</div><div class=\"line\">\t&#125;,</div><div class=\"line\">\t<span class=\"string\">\"广西\"</span>: &#123;</div><div class=\"line\">\t\t<span class=\"string\">\"name\"</span>: <span class=\"string\">\"广西\"</span>,</div><div class=\"line\">\t\t<span class=\"string\">\"children\"</span>: [</div><div class=\"line\">\t\t\t&#123;<span class=\"string\">\"name\"</span>: <span class=\"string\">\"桂林\"</span>&#125;,</div><div class=\"line\">\t\t\t&#123;<span class=\"string\">\"name\"</span>: <span class=\"string\">\"南宁\"</span>&#125;,</div><div class=\"line\">\t\t\t&#123;<span class=\"string\">\"name\"</span>: <span class=\"string\">\"柳州\"</span>&#125;,</div><div class=\"line\">\t\t\t&#123;<span class=\"string\">\"name\"</span>: <span class=\"string\">\"防城港\"</span>&#125;</div><div class=\"line\">\t\t]</div><div class=\"line\">\t&#125;,</div><div class=\"line\">\t<span class=\"string\">\"桂林\"</span>: &#123;</div><div class=\"line\">\t\t<span class=\"string\">\"name\"</span>: <span class=\"string\">\"桂林\"</span>,</div><div class=\"line\">\t\t<span class=\"string\">\"children\"</span>: [</div><div class=\"line\">\t\t\t&#123;<span class=\"string\">\"name\"</span>:<span class=\"string\">\"秀峰区\"</span>&#125;,</div><div class=\"line\">\t\t\t&#123;<span class=\"string\">\"name\"</span>:<span class=\"string\">\"叠彩区\"</span>&#125;,</div><div class=\"line\">\t\t\t&#123;<span class=\"string\">\"name\"</span>:<span class=\"string\">\"象山区\"</span>&#125;,</div><div class=\"line\">\t\t\t&#123;<span class=\"string\">\"name\"</span>:<span class=\"string\">\"七星区\"</span>&#125;</div><div class=\"line\">\t\t]</div><div class=\"line\">\t&#125;,</div><div class=\"line\">\t<span class=\"string\">\"黑龙江\"</span>: &#123;</div><div class=\"line\">\t\t\t<span class=\"string\">\"name\"</span>:<span class=\"string\">\"黑龙江\"</span>,</div><div class=\"line\">\t\t\t<span class=\"string\">\"children\"</span>:</div><div class=\"line\">\t\t\t[</div><div class=\"line\">\t\t\t\t\t&#123;<span class=\"string\">\"name\"</span>:<span class=\"string\">\"哈尔滨\"</span>&#125;,</div><div class=\"line\">\t\t\t\t\t&#123;<span class=\"string\">\"name\"</span>:<span class=\"string\">\"齐齐哈尔\"</span>&#125;,</div><div class=\"line\">\t\t\t\t\t&#123;<span class=\"string\">\"name\"</span>:<span class=\"string\">\"牡丹江\"</span>&#125;,</div><div class=\"line\">\t\t\t\t\t&#123;<span class=\"string\">\"name\"</span>:<span class=\"string\">\"大庆\"</span>&#125;</div><div class=\"line\">\t\t\t]</div><div class=\"line\">\t&#125;,</div><div class=\"line\">\t<span class=\"string\">\"新疆\"</span> : &#123;</div><div class=\"line\">\t\t\t<span class=\"string\">\"name\"</span>:<span class=\"string\">\"新疆\"</span> ,</div><div class=\"line\">\t\t\t<span class=\"string\">\"children\"</span>:</div><div class=\"line\">\t\t\t[</div><div class=\"line\">\t\t\t\t\t&#123;<span class=\"string\">\"name\"</span>:<span class=\"string\">\"乌鲁木齐\"</span>&#125;,</div><div class=\"line\">\t\t\t\t\t&#123;<span class=\"string\">\"name\"</span>:<span class=\"string\">\"克拉玛依\"</span>&#125;,</div><div class=\"line\">\t\t\t\t\t&#123;<span class=\"string\">\"name\"</span>:<span class=\"string\">\"吐鲁番\"</span>&#125;,</div><div class=\"line\">\t\t\t\t\t&#123;<span class=\"string\">\"name\"</span>:<span class=\"string\">\"哈密\"</span>&#125;</div><div class=\"line\">\t\t\t]</div><div class=\"line\">\t&#125;</div><div class=\"line\">&#125;</div></pre></td></tr></table></figure>\n<h4 id=\"画布\"><a href=\"#画布\" class=\"headerlink\" title=\"画布\"></a>画布</h4><figure class=\"highlight js\"><table><tr><td class=\"gutter\"><pre><div class=\"line\">1</div><div class=\"line\">2</div><div class=\"line\">3</div><div class=\"line\">4</div><div class=\"line\">5</div><div class=\"line\">6</div><div class=\"line\">7</div><div class=\"line\">8</div><div class=\"line\">9</div><div class=\"line\">10</div><div class=\"line\">11</div><div class=\"line\">12</div><div class=\"line\">13</div><div class=\"line\">14</div><div class=\"line\">15</div><div class=\"line\">16</div><div class=\"line\">17</div><div class=\"line\">18</div><div class=\"line\">19</div><div class=\"line\">20</div><div class=\"line\">21</div><div class=\"line\">22</div><div class=\"line\">23</div><div class=\"line\">24</div></pre></td><td class=\"code\"><pre><div class=\"line\"><span class=\"keyword\">var</span> margin = &#123;</div><div class=\"line\">\t<span class=\"attr\">top</span>: <span class=\"number\">20</span>,</div><div class=\"line\">\t<span class=\"attr\">left</span>: <span class=\"number\">50</span>,</div><div class=\"line\">\t<span class=\"attr\">right</span>: <span class=\"number\">50</span>,</div><div class=\"line\">\t<span class=\"attr\">bottom</span>: <span class=\"number\">20</span></div><div class=\"line\">&#125;;</div><div class=\"line\"><span class=\"keyword\">var</span> width = $(<span class=\"built_in\">document</span>).width(),</div><div class=\"line\">\theight = $(<span class=\"built_in\">document</span>).height(),</div><div class=\"line\">\ti = <span class=\"number\">0</span>,</div><div class=\"line\">\tlimit = <span class=\"number\">2</span>,</div><div class=\"line\">\troot;</div><div class=\"line\"></div><div class=\"line\">\t<span class=\"comment\">// draggable and scalable</span></div><div class=\"line\">\t<span class=\"keyword\">var</span> zoomListener = d3.behavior.zoom().scaleExtent([<span class=\"number\">0.1</span>, <span class=\"number\">3</span>]).on(<span class=\"string\">'zoom'</span>, zoom);</div><div class=\"line\">\t<span class=\"function\"><span class=\"keyword\">function</span> <span class=\"title\">zoom</span>(<span class=\"params\"></span>)</span>&#123;</div><div class=\"line\">\t\td3.select(<span class=\"string\">'svg'</span>).select(<span class=\"string\">'g'</span>).attr(<span class=\"string\">'transform'</span>, <span class=\"string\">'translate('</span> + d3.event.translate + <span class=\"string\">')scale('</span> + d3.event.scale + <span class=\"string\">')'</span>);</div><div class=\"line\">\t&#125;</div><div class=\"line\"></div><div class=\"line\">\t<span class=\"keyword\">var</span> svg = d3.select(<span class=\"string\">\"#treeContainer\"</span>).append(<span class=\"string\">\"svg\"</span>)</div><div class=\"line\">\t\t\t.attr(<span class=\"string\">\"width\"</span>, width - margin.left - margin.right)</div><div class=\"line\">\t\t\t.attr(<span class=\"string\">\"height\"</span>, height - margin.top - margin.bottom)</div><div class=\"line\">\t\t\t.call(zoomListener)</div><div class=\"line\">\t\t.append(<span class=\"string\">\"g\"</span>)</div><div class=\"line\">\t\t\t.attr(<span class=\"string\">\"transform\"</span>, <span class=\"string\">\"translate(\"</span> + margin.left + <span class=\"string\">\",\"</span> + margin.top + <span class=\"string\">\")\"</span>);</div></pre></td></tr></table></figure>\n<h4 id=\"获取异步数据\"><a href=\"#获取异步数据\" class=\"headerlink\" title=\"获取异步数据\"></a>获取异步数据</h4><figure class=\"highlight js\"><table><tr><td class=\"gutter\"><pre><div class=\"line\">1</div><div class=\"line\">2</div><div class=\"line\">3</div><div class=\"line\">4</div><div class=\"line\">5</div><div class=\"line\">6</div><div class=\"line\">7</div></pre></td><td class=\"code\"><pre><div class=\"line\"><span class=\"comment\">// 异步获取数据</span></div><div class=\"line\"><span class=\"function\"><span class=\"keyword\">function</span> <span class=\"title\">getData</span>(<span class=\"params\">sd, cb</span>)</span>&#123;</div><div class=\"line\">\td3.json(<span class=\"string\">'data/async_city.json'</span>, <span class=\"function\"><span class=\"keyword\">function</span>(<span class=\"params\">err, json</span>)</span>&#123;</div><div class=\"line\">\t\t<span class=\"comment\">// 通过callback返回部分数据</span></div><div class=\"line\">\t\tcb &amp;&amp; cb(json[sd.name]);</div><div class=\"line\">\t&#125;);</div><div class=\"line\">&#125;</div></pre></td></tr></table></figure>\n<h4 id=\"构造树\"><a href=\"#构造树\" class=\"headerlink\" title=\"构造树\"></a>构造树</h4><figure class=\"highlight js\"><table><tr><td class=\"gutter\"><pre><div class=\"line\">1</div><div class=\"line\">2</div><div class=\"line\">3</div><div class=\"line\">4</div><div class=\"line\">5</div><div class=\"line\">6</div><div class=\"line\">7</div><div class=\"line\">8</div><div class=\"line\">9</div></pre></td><td class=\"code\"><pre><div class=\"line\"><span class=\"comment\">// 获取树的root</span></div><div class=\"line\">getData(&#123;<span class=\"attr\">name</span>: <span class=\"string\">'root'</span>&#125;, <span class=\"function\"><span class=\"keyword\">function</span>(<span class=\"params\">json</span>)</span>&#123;</div><div class=\"line\">\troot = json;</div><div class=\"line\">\troot.x0 = height / <span class=\"number\">2</span>;</div><div class=\"line\">\troot.y0 = width / <span class=\"number\">2</span>;</div><div class=\"line\"></div><div class=\"line\">\t<span class=\"comment\">// 初始化树根</span></div><div class=\"line\">\tupdate(root);</div><div class=\"line\">&#125;);</div></pre></td></tr></table></figure>\n<p>从上面的代码可以看出构造树的核心代码就是这个update函数，下面以注释的形式深入理解树形的构造。</p>\n<figure class=\"highlight js\"><table><tr><td class=\"gutter\"><pre><div class=\"line\">1</div><div class=\"line\">2</div><div class=\"line\">3</div><div class=\"line\">4</div><div class=\"line\">5</div><div class=\"line\">6</div><div class=\"line\">7</div><div class=\"line\">8</div><div class=\"line\">9</div><div class=\"line\">10</div><div class=\"line\">11</div><div class=\"line\">12</div><div class=\"line\">13</div><div class=\"line\">14</div><div class=\"line\">15</div><div class=\"line\">16</div><div class=\"line\">17</div><div class=\"line\">18</div><div class=\"line\">19</div><div class=\"line\">20</div><div class=\"line\">21</div><div class=\"line\">22</div><div class=\"line\">23</div><div class=\"line\">24</div><div class=\"line\">25</div><div class=\"line\">26</div><div class=\"line\">27</div><div class=\"line\">28</div><div class=\"line\">29</div><div class=\"line\">30</div><div class=\"line\">31</div><div class=\"line\">32</div><div class=\"line\">33</div><div class=\"line\">34</div><div class=\"line\">35</div><div class=\"line\">36</div><div class=\"line\">37</div><div class=\"line\">38</div><div class=\"line\">39</div><div class=\"line\">40</div><div class=\"line\">41</div><div class=\"line\">42</div><div class=\"line\">43</div><div class=\"line\">44</div><div class=\"line\">45</div><div class=\"line\">46</div><div class=\"line\">47</div><div class=\"line\">48</div><div class=\"line\">49</div><div class=\"line\">50</div><div class=\"line\">51</div><div class=\"line\">52</div><div class=\"line\">53</div><div class=\"line\">54</div><div class=\"line\">55</div><div class=\"line\">56</div><div class=\"line\">57</div><div class=\"line\">58</div><div class=\"line\">59</div><div class=\"line\">60</div><div class=\"line\">61</div><div class=\"line\">62</div><div class=\"line\">63</div><div class=\"line\">64</div><div class=\"line\">65</div><div class=\"line\">66</div><div class=\"line\">67</div><div class=\"line\">68</div><div class=\"line\">69</div><div class=\"line\">70</div><div class=\"line\">71</div><div class=\"line\">72</div><div class=\"line\">73</div><div class=\"line\">74</div><div class=\"line\">75</div><div class=\"line\">76</div><div class=\"line\">77</div><div class=\"line\">78</div><div class=\"line\">79</div><div class=\"line\">80</div><div class=\"line\">81</div><div class=\"line\">82</div><div class=\"line\">83</div><div class=\"line\">84</div><div class=\"line\">85</div><div class=\"line\">86</div><div class=\"line\">87</div><div class=\"line\">88</div><div class=\"line\">89</div><div class=\"line\">90</div><div class=\"line\">91</div><div class=\"line\">92</div><div class=\"line\">93</div><div class=\"line\">94</div><div class=\"line\">95</div><div class=\"line\">96</div><div class=\"line\">97</div><div class=\"line\">98</div><div class=\"line\">99</div><div class=\"line\">100</div><div class=\"line\">101</div><div class=\"line\">102</div><div class=\"line\">103</div><div class=\"line\">104</div><div class=\"line\">105</div><div class=\"line\">106</div><div class=\"line\">107</div><div class=\"line\">108</div><div class=\"line\">109</div><div class=\"line\">110</div><div class=\"line\">111</div><div class=\"line\">112</div><div class=\"line\">113</div><div class=\"line\">114</div><div class=\"line\">115</div><div class=\"line\">116</div><div class=\"line\">117</div><div class=\"line\">118</div><div class=\"line\">119</div><div class=\"line\">120</div><div class=\"line\">121</div><div class=\"line\">122</div><div class=\"line\">123</div><div class=\"line\">124</div><div class=\"line\">125</div><div class=\"line\">126</div><div class=\"line\">127</div><div class=\"line\">128</div><div class=\"line\">129</div><div class=\"line\">130</div><div class=\"line\">131</div><div class=\"line\">132</div><div class=\"line\">133</div><div class=\"line\">134</div><div class=\"line\">135</div><div class=\"line\">136</div><div class=\"line\">137</div><div class=\"line\">138</div><div class=\"line\">139</div><div class=\"line\">140</div><div class=\"line\">141</div><div class=\"line\">142</div><div class=\"line\">143</div><div class=\"line\">144</div><div class=\"line\">145</div><div class=\"line\">146</div><div class=\"line\">147</div><div class=\"line\">148</div><div class=\"line\">149</div><div class=\"line\">150</div><div class=\"line\">151</div><div class=\"line\">152</div><div class=\"line\">153</div><div class=\"line\">154</div><div class=\"line\">155</div><div class=\"line\">156</div><div class=\"line\">157</div><div class=\"line\">158</div><div class=\"line\">159</div><div class=\"line\">160</div><div class=\"line\">161</div><div class=\"line\">162</div><div class=\"line\">163</div><div class=\"line\">164</div><div class=\"line\">165</div><div class=\"line\">166</div><div class=\"line\">167</div><div class=\"line\">168</div><div class=\"line\">169</div><div class=\"line\">170</div><div class=\"line\">171</div><div class=\"line\">172</div><div class=\"line\">173</div><div class=\"line\">174</div><div class=\"line\">175</div><div class=\"line\">176</div><div class=\"line\">177</div><div class=\"line\">178</div><div class=\"line\">179</div><div class=\"line\">180</div><div class=\"line\">181</div><div class=\"line\">182</div><div class=\"line\">183</div><div class=\"line\">184</div><div class=\"line\">185</div></pre></td><td class=\"code\"><pre><div class=\"line\"><span class=\"comment\">// 新建一个树的布局</span></div><div class=\"line\"><span class=\"keyword\">var</span> tree = d3.layout.tree()</div><div class=\"line\">\t\t.size([height - margin.top - margin.bottom, width - margin.left - margin.right]);</div><div class=\"line\"></div><div class=\"line\"><span class=\"comment\">// 因为默认的树布局是自上而下的，这里构建一个自左向右的树，故需要一个转换x和y坐标的函数</span></div><div class=\"line\"><span class=\"keyword\">var</span> diagonal = d3.svg.diagonal()</div><div class=\"line\">\t\t.projection(<span class=\"function\"><span class=\"keyword\">function</span>(<span class=\"params\">d</span>) </span>&#123; <span class=\"keyword\">return</span> [d.y, d.x]; &#125;);</div><div class=\"line\"></div><div class=\"line\"><span class=\"function\"><span class=\"keyword\">function</span> <span class=\"title\">update</span>(<span class=\"params\">source</span>) </span>&#123;</div><div class=\"line\">\t<span class=\"keyword\">var</span> duration = d3.event &amp;&amp; d3.event.altKey ? <span class=\"number\">5000</span> : <span class=\"number\">500</span>;</div><div class=\"line\"></div><div class=\"line\">\t<span class=\"comment\">/**</div><div class=\"line\">\t* 这里实际上是通过tree的nodes函数获得树形结构的每个节点的数据，包括位置信息和深度</div><div class=\"line\">\t* 返回的数据结构如下：</div><div class=\"line\">\t* [&#123;depth: 0, name: \"中国\", children: [], x: 380, y: 0&#125;]</div><div class=\"line\">\t*/</span></div><div class=\"line\">\t<span class=\"keyword\">var</span> nodes = tree.nodes(root).reverse();</div><div class=\"line\"></div><div class=\"line\">\t<span class=\"comment\">// 为了让当前节点居中，故更具当前节点的depth来计算各节点的y坐标（即横向位置）</span></div><div class=\"line\">\t<span class=\"keyword\">var</span> srcDepth = source.depth;</div><div class=\"line\">\tnodes.forEach(<span class=\"function\"><span class=\"keyword\">function</span>(<span class=\"params\">d</span>)</span>&#123;</div><div class=\"line\">\t\td.y = height / <span class=\"number\">2</span> + <span class=\"number\">180</span> * (d.depth - srcDepth);</div><div class=\"line\">\t&#125;);</div><div class=\"line\"></div><div class=\"line\">\t<span class=\"comment\">// Update the nodes…</span></div><div class=\"line\">\t<span class=\"keyword\">var</span> node = svg.selectAll(<span class=\"string\">\"g.node\"</span>)</div><div class=\"line\">\t\t\t.data(nodes, <span class=\"function\"><span class=\"keyword\">function</span>(<span class=\"params\">d</span>) </span>&#123; <span class=\"keyword\">return</span> d.id || (d.id = ++i); &#125;);</div><div class=\"line\"></div><div class=\"line\">\t<span class=\"comment\">// Enter any new nodes at the parent's previous position.</span></div><div class=\"line\">\t<span class=\"keyword\">var</span> nodeEnter = node.enter().append(<span class=\"string\">\"g\"</span>)</div><div class=\"line\">\t\t\t.attr(<span class=\"string\">\"class\"</span>, <span class=\"string\">\"node\"</span>)</div><div class=\"line\">\t\t\t.attr(<span class=\"string\">\"transform\"</span>, <span class=\"function\"><span class=\"keyword\">function</span>(<span class=\"params\">d</span>) </span>&#123; <span class=\"keyword\">return</span> <span class=\"string\">\"translate(\"</span> + source.y0 + <span class=\"string\">\",\"</span> + source.x0 + <span class=\"string\">\")\"</span>; &#125;)</div><div class=\"line\">\t\t\t.on(<span class=\"string\">\"click\"</span>, click)</div><div class=\"line\">\t\t\t.on(<span class=\"string\">'mouseover'</span>, <span class=\"function\"><span class=\"keyword\">function</span>(<span class=\"params\">d</span>)</span>&#123;</div><div class=\"line\">\t\t\t\t<span class=\"keyword\">if</span>(d.name == <span class=\"string\">'more'</span>) <span class=\"keyword\">return</span>;</div><div class=\"line\">\t\t\t\t<span class=\"comment\">// 鼠标hover某个节点时，显示一个详细信息的弹层</span></div><div class=\"line\">\t\t\t\t<span class=\"keyword\">var</span> detail = d3.select(<span class=\"keyword\">this</span>).append(<span class=\"string\">'g'</span>)</div><div class=\"line\">\t\t\t\t\t\t.attr(<span class=\"string\">'class'</span>, <span class=\"string\">'detail'</span>)</div><div class=\"line\">\t\t\t\t\t\t.attr(<span class=\"string\">'dx'</span>, d3.event.x)</div><div class=\"line\">\t\t\t\t\t\t.attr(<span class=\"string\">'dy'</span>, d3.event.y + <span class=\"number\">10</span>);</div><div class=\"line\">\t\t\t\tdetail.append(<span class=\"string\">'rect'</span>)</div><div class=\"line\">\t\t\t\t\t\t.attr(<span class=\"string\">'width'</span>, <span class=\"number\">100</span>)</div><div class=\"line\">\t\t\t\t\t\t.attr(<span class=\"string\">'height'</span>, <span class=\"number\">100</span>);</div><div class=\"line\">\t\t\t\tdetail.append(<span class=\"string\">'text'</span>)</div><div class=\"line\">\t\t\t\t\t\t.attr(<span class=\"string\">'dx'</span>, <span class=\"string\">'.35em'</span>)</div><div class=\"line\">\t\t\t\t\t\t.attr(<span class=\"string\">'dy'</span>, <span class=\"string\">'2em'</span>)</div><div class=\"line\">\t\t\t\t\t\t.attr(<span class=\"string\">'text-anchor'</span>, <span class=\"string\">'start'</span>)</div><div class=\"line\">\t\t\t\t\t\t.text(<span class=\"function\"><span class=\"keyword\">function</span>(<span class=\"params\">d</span>)</span>&#123;</div><div class=\"line\">\t\t\t\t\t\t\t<span class=\"keyword\">return</span> <span class=\"string\">'name: '</span> + d.name;</div><div class=\"line\">\t\t\t\t\t\t&#125;);</div><div class=\"line\">\t\t\t&#125;)</div><div class=\"line\">\t\t\t.on(<span class=\"string\">'mousemove'</span>, <span class=\"function\"><span class=\"keyword\">function</span>(<span class=\"params\">d</span>)</span>&#123;</div><div class=\"line\">\t\t\t\t<span class=\"keyword\">var</span> detail = d3.select(<span class=\"keyword\">this</span>).select(<span class=\"string\">'.detail'</span>);</div><div class=\"line\">\t\t\t\tdetail.attr(<span class=\"string\">'x'</span>, d3.event.x)</div><div class=\"line\">\t\t\t\t\t\t.attr(<span class=\"string\">'y'</span>, d3.event.y);</div><div class=\"line\">\t\t\t&#125;)</div><div class=\"line\">\t\t\t.on(<span class=\"string\">'mouseout'</span>, <span class=\"function\"><span class=\"keyword\">function</span>(<span class=\"params\">d</span>)</span>&#123;</div><div class=\"line\">\t\t\t\t<span class=\"keyword\">if</span>(d.name == <span class=\"string\">'more'</span>) <span class=\"keyword\">return</span>;</div><div class=\"line\">\t\t\t\td3.select(<span class=\"keyword\">this</span>).select(<span class=\"string\">'.detail'</span>).remove();</div><div class=\"line\">\t\t\t&#125;);</div><div class=\"line\"></div><div class=\"line\">\tnodeEnter.append(<span class=\"string\">\"circle\"</span>)</div><div class=\"line\">\t\t\t.attr(<span class=\"string\">\"r\"</span>, <span class=\"number\">1e-6</span>)</div><div class=\"line\">\t\t\t.style(<span class=\"string\">\"fill\"</span>, <span class=\"function\"><span class=\"keyword\">function</span>(<span class=\"params\">d</span>)</span>&#123; <span class=\"keyword\">return</span> !d.isExpand ? <span class=\"string\">\"lightsteelblue\"</span> : <span class=\"string\">\"#fff\"</span>; &#125;);</div><div class=\"line\"></div><div class=\"line\">\tnodeEnter.append(<span class=\"string\">\"text\"</span>)</div><div class=\"line\">\t\t\t.attr(<span class=\"string\">\"x\"</span>, <span class=\"number\">-10</span>)</div><div class=\"line\">\t\t\t.attr(<span class=\"string\">\"dy\"</span>, <span class=\"string\">\".35em\"</span>)</div><div class=\"line\">\t\t\t.attr(<span class=\"string\">\"text-anchor\"</span>, <span class=\"string\">\"end\"</span>)</div><div class=\"line\">\t\t\t.text(<span class=\"function\"><span class=\"keyword\">function</span>(<span class=\"params\">d</span>) </span>&#123; <span class=\"keyword\">return</span> d.name; &#125;)</div><div class=\"line\">\t\t\t.style(<span class=\"string\">\"fill-opacity\"</span>, <span class=\"number\">1e-6</span>);</div><div class=\"line\"></div><div class=\"line\"></div><div class=\"line\">\t<span class=\"comment\">// Transition nodes to their new position.</span></div><div class=\"line\">\t<span class=\"keyword\">var</span> nodeUpdate = node.transition()</div><div class=\"line\">\t\t\t.duration(duration)</div><div class=\"line\">\t\t\t.attr(<span class=\"string\">\"transform\"</span>, <span class=\"function\"><span class=\"keyword\">function</span>(<span class=\"params\">d</span>) </span>&#123; <span class=\"keyword\">return</span> <span class=\"string\">\"translate(\"</span> + d.y + <span class=\"string\">\",\"</span> + d.x + <span class=\"string\">\")\"</span>; &#125;);</div><div class=\"line\"></div><div class=\"line\">\tnodeUpdate.select(<span class=\"string\">\"circle\"</span>)</div><div class=\"line\">\t\t\t.attr(<span class=\"string\">\"r\"</span>, <span class=\"number\">10</span>)</div><div class=\"line\">\t\t\t.style(<span class=\"string\">\"fill\"</span>, <span class=\"function\"><span class=\"keyword\">function</span>(<span class=\"params\">d</span>)</span>&#123; <span class=\"keyword\">return</span> !d.isExpand ? <span class=\"string\">\"lightsteelblue\"</span> : <span class=\"string\">\"#fff\"</span>; &#125;);</div><div class=\"line\"></div><div class=\"line\">\tnodeUpdate.select(<span class=\"string\">\"text\"</span>)</div><div class=\"line\">\t\t\t.style(<span class=\"string\">\"fill-opacity\"</span>, <span class=\"number\">1</span>);</div><div class=\"line\"></div><div class=\"line\">\t<span class=\"comment\">// Transition exiting nodes to the parent's new position.</span></div><div class=\"line\">\t<span class=\"keyword\">var</span> nodeExit = node.exit().transition()</div><div class=\"line\">\t\t\t.duration(duration)</div><div class=\"line\">\t\t\t.attr(<span class=\"string\">\"transform\"</span>, <span class=\"function\"><span class=\"keyword\">function</span>(<span class=\"params\">d</span>) </span>&#123;</div><div class=\"line\">\t\t\t\t<span class=\"keyword\">if</span>(d.name == <span class=\"string\">'more'</span>) <span class=\"keyword\">this</span>.remove();</div><div class=\"line\">\t\t\t\t<span class=\"keyword\">return</span> <span class=\"string\">\"translate(\"</span> + source.y + <span class=\"string\">\",\"</span> + source.x + <span class=\"string\">\")\"</span>;</div><div class=\"line\">\t\t\t&#125;)</div><div class=\"line\">\t\t\t.remove();</div><div class=\"line\"></div><div class=\"line\">\tnodeExit.select(<span class=\"string\">\"circle\"</span>)</div><div class=\"line\">\t\t\t.attr(<span class=\"string\">\"r\"</span>, <span class=\"number\">1e-6</span>);</div><div class=\"line\"></div><div class=\"line\">\tnodeExit.select(<span class=\"string\">\"text\"</span>)</div><div class=\"line\">\t\t\t.style(<span class=\"string\">\"fill-opacity\"</span>, <span class=\"number\">1e-6</span>);</div><div class=\"line\"></div><div class=\"line\">\t<span class=\"comment\">/** Update the links...</div><div class=\"line\">\t* tree.links方法获取连线节点之间的映射，返回的数据结构如下：</div><div class=\"line\">\t* [&#123;source: &#123;&#125;, target: &#123;&#125;&#125;]</div><div class=\"line\">\t*/</span></div><div class=\"line\">\t<span class=\"keyword\">var</span> link = svg.selectAll(<span class=\"string\">\"path.link\"</span>)</div><div class=\"line\">\t\t\t.data(tree.links(nodes), <span class=\"function\"><span class=\"keyword\">function</span>(<span class=\"params\">d</span>) </span>&#123; <span class=\"keyword\">return</span> d.target.id; &#125;);</div><div class=\"line\"></div><div class=\"line\">\t<span class=\"comment\">// Enter any new links at the parent's previous position.</span></div><div class=\"line\">\tlink.enter().insert(<span class=\"string\">\"path\"</span>, <span class=\"string\">\"g\"</span>)</div><div class=\"line\">\t\t\t.attr(<span class=\"string\">\"class\"</span>, <span class=\"string\">\"link\"</span>)</div><div class=\"line\">\t\t\t.attr(<span class=\"string\">\"d\"</span>, <span class=\"function\"><span class=\"keyword\">function</span>(<span class=\"params\">d</span>) </span>&#123;</div><div class=\"line\">\t\t\t\t<span class=\"keyword\">var</span> o = &#123;<span class=\"attr\">x</span>: source.x0, <span class=\"attr\">y</span>: source.y0&#125;;</div><div class=\"line\">\t\t\t\t<span class=\"keyword\">return</span> diagonal(&#123;<span class=\"attr\">source</span>: o, <span class=\"attr\">target</span>: o&#125;);</div><div class=\"line\">\t\t\t&#125;)</div><div class=\"line\">\t\t.transition()</div><div class=\"line\">\t\t\t.duration(duration)</div><div class=\"line\">\t\t\t.attr(<span class=\"string\">\"d\"</span>, diagonal);</div><div class=\"line\"></div><div class=\"line\">\t<span class=\"comment\">// Transition links to their new position.</span></div><div class=\"line\">\tlink.transition()</div><div class=\"line\">\t\t\t.duration(duration)</div><div class=\"line\">\t\t\t.attr(<span class=\"string\">\"d\"</span>, diagonal);</div><div class=\"line\"></div><div class=\"line\">\t<span class=\"comment\">// Transition exiting nodes to the parent's new position.</span></div><div class=\"line\">\tlink.exit().transition()</div><div class=\"line\">\t\t\t.duration(duration)</div><div class=\"line\">\t\t\t.attr(<span class=\"string\">\"d\"</span>, <span class=\"function\"><span class=\"keyword\">function</span>(<span class=\"params\">d</span>) </span>&#123;</div><div class=\"line\">\t\t\t\t<span class=\"keyword\">if</span>(d.target.name == <span class=\"string\">'more'</span>) <span class=\"keyword\">this</span>.remove();</div><div class=\"line\">\t\t\t\t<span class=\"keyword\">var</span> o = &#123;<span class=\"attr\">x</span>: source.x, <span class=\"attr\">y</span>: source.y&#125;;</div><div class=\"line\">\t\t\t\t<span class=\"keyword\">return</span> diagonal(&#123;<span class=\"attr\">source</span>: o, <span class=\"attr\">target</span>: o&#125;);</div><div class=\"line\">\t\t\t&#125;)</div><div class=\"line\">\t\t\t.remove();</div><div class=\"line\"></div><div class=\"line\">\t<span class=\"comment\">// Stash the old positions for transition.</span></div><div class=\"line\">\t<span class=\"comment\">// 记录当前节点所在的位置，为node update提供位移动画</span></div><div class=\"line\">\tnodes.forEach(<span class=\"function\"><span class=\"keyword\">function</span>(<span class=\"params\">d</span>) </span>&#123;</div><div class=\"line\">\t\td.x0 = d.x;</div><div class=\"line\">\t\td.y0 = d.y;</div><div class=\"line\">\t&#125;);</div><div class=\"line\">&#125;</div><div class=\"line\"></div><div class=\"line\"><span class=\"function\"><span class=\"keyword\">function</span> <span class=\"title\">collapse</span>(<span class=\"params\">d</span>)</span>&#123;</div><div class=\"line\">\t<span class=\"keyword\">delete</span> d._children;</div><div class=\"line\">\t<span class=\"keyword\">delete</span> d.isExpand;</div><div class=\"line\">\t<span class=\"keyword\">delete</span> d.children;</div><div class=\"line\">&#125;</div><div class=\"line\"><span class=\"function\"><span class=\"keyword\">function</span> <span class=\"title\">expand</span>(<span class=\"params\">d</span>)</span>&#123;</div><div class=\"line\">\tgetData(&#123;<span class=\"attr\">name</span>: d.name&#125;, <span class=\"function\"><span class=\"keyword\">function</span>(<span class=\"params\">json</span>)</span>&#123;</div><div class=\"line\">\t\t<span class=\"keyword\">if</span>(json &amp;&amp; json.children)&#123;</div><div class=\"line\">\t\t\t<span class=\"comment\">// 获取到此节点有子节点</span></div><div class=\"line\">\t\t\td._children = json.children;</div><div class=\"line\">\t\t\td.children = d._children.slice(<span class=\"number\">0</span>, limit);</div><div class=\"line\">\t\t\t<span class=\"keyword\">if</span>(d._children.length &gt; d.children.length)&#123;</div><div class=\"line\">\t\t\t\td.children.push(&#123;<span class=\"string\">'name'</span>: <span class=\"string\">'more'</span>&#125;);</div><div class=\"line\">\t\t\t&#125;</div><div class=\"line\">\t\t&#125;</div><div class=\"line\">\t\td.isExpand = <span class=\"literal\">true</span>;</div><div class=\"line\">\t\tupdate(d);</div><div class=\"line\">\t&#125;);</div><div class=\"line\">&#125;</div><div class=\"line\"></div><div class=\"line\"><span class=\"comment\">// 异步获取数据</span></div><div class=\"line\"><span class=\"function\"><span class=\"keyword\">function</span> <span class=\"title\">getData</span>(<span class=\"params\">sd, cb</span>)</span>&#123;</div><div class=\"line\">\td3.json(<span class=\"string\">'data/async_city.json'</span>, <span class=\"function\"><span class=\"keyword\">function</span>(<span class=\"params\">err, json</span>)</span>&#123;</div><div class=\"line\">\t\tcb &amp;&amp; cb(json[sd.name]);</div><div class=\"line\">\t&#125;);</div><div class=\"line\">&#125;</div><div class=\"line\"></div><div class=\"line\"><span class=\"function\"><span class=\"keyword\">function</span> <span class=\"title\">click</span>(<span class=\"params\">d</span>)</span>&#123;</div><div class=\"line\">\t<span class=\"keyword\">if</span>(d.name == <span class=\"string\">'more'</span>)&#123;</div><div class=\"line\">\t\t<span class=\"comment\">// 点击更多</span></div><div class=\"line\">\t\td.parent.children = d.parent._children.slice(<span class=\"number\">0</span>, (d.parent.children.length - <span class=\"number\">1</span>) + limit);</div><div class=\"line\">\t\t<span class=\"keyword\">if</span>(d.parent._children.length &gt; d.parent.children.length)&#123;</div><div class=\"line\">\t\t\td.parent.children.push(&#123;<span class=\"string\">'name'</span>: <span class=\"string\">'more'</span>&#125;);</div><div class=\"line\">\t\t&#125;</div><div class=\"line\">\t\tupdate(d.parent);</div><div class=\"line\">\t&#125;<span class=\"keyword\">else</span> <span class=\"keyword\">if</span>(d.isExpand &amp;&amp; d.children)&#123;</div><div class=\"line\">\t\t<span class=\"comment\">// 点击展开的节点</span></div><div class=\"line\">\t\tcollapse(d);</div><div class=\"line\">\t\tupdate(d);</div><div class=\"line\">\t&#125;<span class=\"keyword\">else</span>&#123;</div><div class=\"line\">\t\t<span class=\"comment\">// 点击未展开的点</span></div><div class=\"line\">\t\texpand(d);</div><div class=\"line\">\t&#125;</div><div class=\"line\">&#125;</div></pre></td></tr></table></figure>\n<blockquote>\n<p>可以从<a href=\"https://github.com/brucewar/practice-in-D3\">https://github.com/brucewar/practice-in-D3</a>获取示例代码</p>\n</blockquote>\n"},{"title":"D3.js（完整的柱状图）","date":"2016-10-25T02:59:26.000Z","_content":"首先，我们先看一下最终的柱状图效果展示。如下图所示，一个完整的柱状图需要包含三个部分：矩形、文字、坐标轴。\n\n![柱状图](http://brucewar.qiniudn.com/chart.png)\n\n### 添加SVG画布\n\n```js\n// 画布大小\nvar width = 400,\nheight = 400;\n\n// 画布四个方向上的留白\nvar margin = {\n\ttop: 20,\n\tright: 30,\n\tbottom: 20,\n\tleft: 30\n};\n\nvar chart = d3.select('.chart')\n.attr('width', width)\n.attr('height', height)\n.append('g');\n```\n\n### 定义比例尺\n\n```js\n// define x,y point rule\nvar x = d3.scale.ordinal()\n.rangeRoundBands([0, width - margin.left - margin.right]);\nvar y = d3.scale.linear()\n.range([height - margin.top - margin.bottom, 0]);\n```\n\n### 添加矩形及文字\n\n```js\n// 矩形之间的空白\nvar barPadding = 4;\n\n/**\n* 这里用到了d3异步读取数据的接口csv\n* chart.csv的文件内容如下：\n* name,value\n* Locke,4\n* Reyes,8\n* Ford,15\n* Jarrah,16\n* Shephard,23\n* Kwon,42\n*/\nd3.csv('data/chart.csv', type, function(err, data){\n\tx.domain(data.map(function(d){ return d.name; }));\n\ty.domain([0, d3.max(data, function(d){\n\t\treturn d.value;\n\t})]);\n\n\t// append rect\n\tchart.selectAll('.bar')\n\t.data(data)\n\t.enter().append('rect')\n\t.attr('class', 'bar')\n\t.attr('transform', 'translate(' + margin.left + ',' + margin.top + ')')\n\t.attr('x', function(d){ return x(d.name) + barPadding / 2; })\n\t.attr('y', function(d){ return y(d.value); })\n\t.attr('height', function(d){ return height - margin.top - margin.bottom - y(d.value); })\n\t.attr('width', x.rangeBand() - barPadding);\n\n\t// append text\n\tchart.selectAll('.text')\n\t.data(data)\n\t.enter()\n\t.append('text')\n\t.attr('class', 'text')\n\t.attr('transform', 'translate(' + margin.left + ',' + margin.top + ')')\n\t.attr('x', function(d){\n\t\treturn x(d.name) + barPadding / 2;\n\t}).attr('y', function(d){\n\t\treturn y(d.value);\n\t}).attr('dx', function(){\n\t\treturn (x.rangeBand() - barPadding) / 2;\n\t}).attr('dy', 20)\n\t.text(function(d){\n\t\treturn d.value;\n\t});\n});\n\nfunction type(d){\n\td.value = +d.value;\n\treturn d;\n}\n```\n\n### 定义并添加坐标轴\n```js\n// define axis\nvar xAxis = d3.svg.axis()\n.scale(x)\n.orient('bottom');\nvar yAxis = d3.svg.axis()\n.scale(y)\n.orient('left')\n.ticks(10);\t//显示的刻度值个数\n\n// append x axis\nchart.append('g')\n.attr('class', 'x axis')\n.attr('transform', 'translate(' + margin.left + ', ' + (height - margin.bottom) + ')')\n.call(xAxis);\n\n// append y axis\nchart.append('g')\n.attr('class', 'y axis')\n.attr('transform', 'translate(' + margin.left + ',' + margin.top + ')')\n.call(yAxis)\n.append('text')\n.attr('transform', 'rotate(-90)')\n.attr('y', 6)\n.attr('dy', '.71em')\n.style('text-anchor', 'end')\n.text('value');\n```\n\n> 可以从[https://github.com/brucewar/practice-in-D3](https://github.com/brucewar/practice-in-D3)获取示例代码\n","source":"_posts/D3.js-完整的柱状图.md","raw":"---\ntitle: D3.js（完整的柱状图）\ndate: 2016-10-25 10:59:26\ncategories: D3.js\ntags: [D3,柱状图]\n---\n首先，我们先看一下最终的柱状图效果展示。如下图所示，一个完整的柱状图需要包含三个部分：矩形、文字、坐标轴。\n\n![柱状图](http://brucewar.qiniudn.com/chart.png)\n\n### 添加SVG画布\n\n```js\n// 画布大小\nvar width = 400,\nheight = 400;\n\n// 画布四个方向上的留白\nvar margin = {\n\ttop: 20,\n\tright: 30,\n\tbottom: 20,\n\tleft: 30\n};\n\nvar chart = d3.select('.chart')\n.attr('width', width)\n.attr('height', height)\n.append('g');\n```\n\n### 定义比例尺\n\n```js\n// define x,y point rule\nvar x = d3.scale.ordinal()\n.rangeRoundBands([0, width - margin.left - margin.right]);\nvar y = d3.scale.linear()\n.range([height - margin.top - margin.bottom, 0]);\n```\n\n### 添加矩形及文字\n\n```js\n// 矩形之间的空白\nvar barPadding = 4;\n\n/**\n* 这里用到了d3异步读取数据的接口csv\n* chart.csv的文件内容如下：\n* name,value\n* Locke,4\n* Reyes,8\n* Ford,15\n* Jarrah,16\n* Shephard,23\n* Kwon,42\n*/\nd3.csv('data/chart.csv', type, function(err, data){\n\tx.domain(data.map(function(d){ return d.name; }));\n\ty.domain([0, d3.max(data, function(d){\n\t\treturn d.value;\n\t})]);\n\n\t// append rect\n\tchart.selectAll('.bar')\n\t.data(data)\n\t.enter().append('rect')\n\t.attr('class', 'bar')\n\t.attr('transform', 'translate(' + margin.left + ',' + margin.top + ')')\n\t.attr('x', function(d){ return x(d.name) + barPadding / 2; })\n\t.attr('y', function(d){ return y(d.value); })\n\t.attr('height', function(d){ return height - margin.top - margin.bottom - y(d.value); })\n\t.attr('width', x.rangeBand() - barPadding);\n\n\t// append text\n\tchart.selectAll('.text')\n\t.data(data)\n\t.enter()\n\t.append('text')\n\t.attr('class', 'text')\n\t.attr('transform', 'translate(' + margin.left + ',' + margin.top + ')')\n\t.attr('x', function(d){\n\t\treturn x(d.name) + barPadding / 2;\n\t}).attr('y', function(d){\n\t\treturn y(d.value);\n\t}).attr('dx', function(){\n\t\treturn (x.rangeBand() - barPadding) / 2;\n\t}).attr('dy', 20)\n\t.text(function(d){\n\t\treturn d.value;\n\t});\n});\n\nfunction type(d){\n\td.value = +d.value;\n\treturn d;\n}\n```\n\n### 定义并添加坐标轴\n```js\n// define axis\nvar xAxis = d3.svg.axis()\n.scale(x)\n.orient('bottom');\nvar yAxis = d3.svg.axis()\n.scale(y)\n.orient('left')\n.ticks(10);\t//显示的刻度值个数\n\n// append x axis\nchart.append('g')\n.attr('class', 'x axis')\n.attr('transform', 'translate(' + margin.left + ', ' + (height - margin.bottom) + ')')\n.call(xAxis);\n\n// append y axis\nchart.append('g')\n.attr('class', 'y axis')\n.attr('transform', 'translate(' + margin.left + ',' + margin.top + ')')\n.call(yAxis)\n.append('text')\n.attr('transform', 'rotate(-90)')\n.attr('y', 6)\n.attr('dy', '.71em')\n.style('text-anchor', 'end')\n.text('value');\n```\n\n> 可以从[https://github.com/brucewar/practice-in-D3](https://github.com/brucewar/practice-in-D3)获取示例代码\n","slug":"D3.js-完整的柱状图","published":1,"updated":"2016-10-27T06:18:29.403Z","comments":1,"layout":"post","photos":[],"link":"","_id":"civhg3j2y0002tonb4z0omdie","content":"<p>首先，我们先看一下最终的柱状图效果展示。如下图所示，一个完整的柱状图需要包含三个部分：矩形、文字、坐标轴。</p>\n<p><img src=\"http://brucewar.qiniudn.com/chart.png\" alt=\"柱状图\"></p>\n<h3 id=\"添加SVG画布\"><a href=\"#添加SVG画布\" class=\"headerlink\" title=\"添加SVG画布\"></a>添加SVG画布</h3><figure class=\"highlight js\"><table><tr><td class=\"gutter\"><pre><div class=\"line\">1</div><div class=\"line\">2</div><div class=\"line\">3</div><div class=\"line\">4</div><div class=\"line\">5</div><div class=\"line\">6</div><div class=\"line\">7</div><div class=\"line\">8</div><div class=\"line\">9</div><div class=\"line\">10</div><div class=\"line\">11</div><div class=\"line\">12</div><div class=\"line\">13</div><div class=\"line\">14</div><div class=\"line\">15</div><div class=\"line\">16</div></pre></td><td class=\"code\"><pre><div class=\"line\"><span class=\"comment\">// 画布大小</span></div><div class=\"line\"><span class=\"keyword\">var</span> width = <span class=\"number\">400</span>,</div><div class=\"line\">height = <span class=\"number\">400</span>;</div><div class=\"line\"></div><div class=\"line\"><span class=\"comment\">// 画布四个方向上的留白</span></div><div class=\"line\"><span class=\"keyword\">var</span> margin = &#123;</div><div class=\"line\">\t<span class=\"attr\">top</span>: <span class=\"number\">20</span>,</div><div class=\"line\">\t<span class=\"attr\">right</span>: <span class=\"number\">30</span>,</div><div class=\"line\">\t<span class=\"attr\">bottom</span>: <span class=\"number\">20</span>,</div><div class=\"line\">\t<span class=\"attr\">left</span>: <span class=\"number\">30</span></div><div class=\"line\">&#125;;</div><div class=\"line\"></div><div class=\"line\"><span class=\"keyword\">var</span> chart = d3.select(<span class=\"string\">'.chart'</span>)</div><div class=\"line\">.attr(<span class=\"string\">'width'</span>, width)</div><div class=\"line\">.attr(<span class=\"string\">'height'</span>, height)</div><div class=\"line\">.append(<span class=\"string\">'g'</span>);</div></pre></td></tr></table></figure>\n<h3 id=\"定义比例尺\"><a href=\"#定义比例尺\" class=\"headerlink\" title=\"定义比例尺\"></a>定义比例尺</h3><figure class=\"highlight js\"><table><tr><td class=\"gutter\"><pre><div class=\"line\">1</div><div class=\"line\">2</div><div class=\"line\">3</div><div class=\"line\">4</div><div class=\"line\">5</div></pre></td><td class=\"code\"><pre><div class=\"line\"><span class=\"comment\">// define x,y point rule</span></div><div class=\"line\"><span class=\"keyword\">var</span> x = d3.scale.ordinal()</div><div class=\"line\">.rangeRoundBands([<span class=\"number\">0</span>, width - margin.left - margin.right]);</div><div class=\"line\"><span class=\"keyword\">var</span> y = d3.scale.linear()</div><div class=\"line\">.range([height - margin.top - margin.bottom, <span class=\"number\">0</span>]);</div></pre></td></tr></table></figure>\n<h3 id=\"添加矩形及文字\"><a href=\"#添加矩形及文字\" class=\"headerlink\" title=\"添加矩形及文字\"></a>添加矩形及文字</h3><figure class=\"highlight js\"><table><tr><td class=\"gutter\"><pre><div class=\"line\">1</div><div class=\"line\">2</div><div class=\"line\">3</div><div class=\"line\">4</div><div class=\"line\">5</div><div class=\"line\">6</div><div class=\"line\">7</div><div class=\"line\">8</div><div class=\"line\">9</div><div class=\"line\">10</div><div class=\"line\">11</div><div class=\"line\">12</div><div class=\"line\">13</div><div class=\"line\">14</div><div class=\"line\">15</div><div class=\"line\">16</div><div class=\"line\">17</div><div class=\"line\">18</div><div class=\"line\">19</div><div class=\"line\">20</div><div class=\"line\">21</div><div class=\"line\">22</div><div class=\"line\">23</div><div class=\"line\">24</div><div class=\"line\">25</div><div class=\"line\">26</div><div class=\"line\">27</div><div class=\"line\">28</div><div class=\"line\">29</div><div class=\"line\">30</div><div class=\"line\">31</div><div class=\"line\">32</div><div class=\"line\">33</div><div class=\"line\">34</div><div class=\"line\">35</div><div class=\"line\">36</div><div class=\"line\">37</div><div class=\"line\">38</div><div class=\"line\">39</div><div class=\"line\">40</div><div class=\"line\">41</div><div class=\"line\">42</div><div class=\"line\">43</div><div class=\"line\">44</div><div class=\"line\">45</div><div class=\"line\">46</div><div class=\"line\">47</div><div class=\"line\">48</div><div class=\"line\">49</div><div class=\"line\">50</div><div class=\"line\">51</div><div class=\"line\">52</div><div class=\"line\">53</div><div class=\"line\">54</div></pre></td><td class=\"code\"><pre><div class=\"line\"><span class=\"comment\">// 矩形之间的空白</span></div><div class=\"line\"><span class=\"keyword\">var</span> barPadding = <span class=\"number\">4</span>;</div><div class=\"line\"></div><div class=\"line\"><span class=\"comment\">/**</span></div><div class=\"line\">* 这里用到了d3异步读取数据的接口csv</div><div class=\"line\">* chart.csv的文件内容如下：</div><div class=\"line\">* name,value</div><div class=\"line\">* Locke,4</div><div class=\"line\">* Reyes,8</div><div class=\"line\">* Ford,15</div><div class=\"line\">* Jarrah,16</div><div class=\"line\">* Shephard,23</div><div class=\"line\">* Kwon,42</div><div class=\"line\">*/</div><div class=\"line\">d3.csv(<span class=\"string\">'data/chart.csv'</span>, type, <span class=\"function\"><span class=\"keyword\">function</span>(<span class=\"params\">err, data</span>)</span>&#123;</div><div class=\"line\">\tx.domain(data.map(<span class=\"function\"><span class=\"keyword\">function</span>(<span class=\"params\">d</span>)</span>&#123; <span class=\"keyword\">return</span> d.name; &#125;));</div><div class=\"line\">\ty.domain([<span class=\"number\">0</span>, d3.max(data, <span class=\"function\"><span class=\"keyword\">function</span>(<span class=\"params\">d</span>)</span>&#123;</div><div class=\"line\">\t\t<span class=\"keyword\">return</span> d.value;</div><div class=\"line\">\t&#125;)]);</div><div class=\"line\"></div><div class=\"line\">\t<span class=\"comment\">// append rect</span></div><div class=\"line\">\tchart.selectAll(<span class=\"string\">'.bar'</span>)</div><div class=\"line\">\t.data(data)</div><div class=\"line\">\t.enter().append(<span class=\"string\">'rect'</span>)</div><div class=\"line\">\t.attr(<span class=\"string\">'class'</span>, <span class=\"string\">'bar'</span>)</div><div class=\"line\">\t.attr(<span class=\"string\">'transform'</span>, <span class=\"string\">'translate('</span> + margin.left + <span class=\"string\">','</span> + margin.top + <span class=\"string\">')'</span>)</div><div class=\"line\">\t.attr(<span class=\"string\">'x'</span>, <span class=\"function\"><span class=\"keyword\">function</span>(<span class=\"params\">d</span>)</span>&#123; <span class=\"keyword\">return</span> x(d.name) + barPadding / <span class=\"number\">2</span>; &#125;)</div><div class=\"line\">\t.attr(<span class=\"string\">'y'</span>, <span class=\"function\"><span class=\"keyword\">function</span>(<span class=\"params\">d</span>)</span>&#123; <span class=\"keyword\">return</span> y(d.value); &#125;)</div><div class=\"line\">\t.attr(<span class=\"string\">'height'</span>, <span class=\"function\"><span class=\"keyword\">function</span>(<span class=\"params\">d</span>)</span>&#123; <span class=\"keyword\">return</span> height - margin.top - margin.bottom - y(d.value); &#125;)</div><div class=\"line\">\t.attr(<span class=\"string\">'width'</span>, x.rangeBand() - barPadding);</div><div class=\"line\"></div><div class=\"line\">\t<span class=\"comment\">// append text</span></div><div class=\"line\">\tchart.selectAll(<span class=\"string\">'.text'</span>)</div><div class=\"line\">\t.data(data)</div><div class=\"line\">\t.enter()</div><div class=\"line\">\t.append(<span class=\"string\">'text'</span>)</div><div class=\"line\">\t.attr(<span class=\"string\">'class'</span>, <span class=\"string\">'text'</span>)</div><div class=\"line\">\t.attr(<span class=\"string\">'transform'</span>, <span class=\"string\">'translate('</span> + margin.left + <span class=\"string\">','</span> + margin.top + <span class=\"string\">')'</span>)</div><div class=\"line\">\t.attr(<span class=\"string\">'x'</span>, <span class=\"function\"><span class=\"keyword\">function</span>(<span class=\"params\">d</span>)</span>&#123;</div><div class=\"line\">\t\t<span class=\"keyword\">return</span> x(d.name) + barPadding / <span class=\"number\">2</span>;</div><div class=\"line\">\t&#125;).attr(<span class=\"string\">'y'</span>, <span class=\"function\"><span class=\"keyword\">function</span>(<span class=\"params\">d</span>)</span>&#123;</div><div class=\"line\">\t\t<span class=\"keyword\">return</span> y(d.value);</div><div class=\"line\">\t&#125;).attr(<span class=\"string\">'dx'</span>, <span class=\"function\"><span class=\"keyword\">function</span>(<span class=\"params\"></span>)</span>&#123;</div><div class=\"line\">\t\t<span class=\"keyword\">return</span> (x.rangeBand() - barPadding) / <span class=\"number\">2</span>;</div><div class=\"line\">\t&#125;).attr(<span class=\"string\">'dy'</span>, <span class=\"number\">20</span>)</div><div class=\"line\">\t.text(<span class=\"function\"><span class=\"keyword\">function</span>(<span class=\"params\">d</span>)</span>&#123;</div><div class=\"line\">\t\t<span class=\"keyword\">return</span> d.value;</div><div class=\"line\">\t&#125;);</div><div class=\"line\">&#125;);</div><div class=\"line\"></div><div class=\"line\"><span class=\"function\"><span class=\"keyword\">function</span> <span class=\"title\">type</span>(<span class=\"params\">d</span>)</span>&#123;</div><div class=\"line\">\td.value = +d.value;</div><div class=\"line\">\t<span class=\"keyword\">return</span> d;</div><div class=\"line\">&#125;</div></pre></td></tr></table></figure>\n<h3 id=\"定义并添加坐标轴\"><a href=\"#定义并添加坐标轴\" class=\"headerlink\" title=\"定义并添加坐标轴\"></a>定义并添加坐标轴</h3><figure class=\"highlight js\"><table><tr><td class=\"gutter\"><pre><div class=\"line\">1</div><div class=\"line\">2</div><div class=\"line\">3</div><div class=\"line\">4</div><div class=\"line\">5</div><div class=\"line\">6</div><div class=\"line\">7</div><div class=\"line\">8</div><div class=\"line\">9</div><div class=\"line\">10</div><div class=\"line\">11</div><div class=\"line\">12</div><div class=\"line\">13</div><div class=\"line\">14</div><div class=\"line\">15</div><div class=\"line\">16</div><div class=\"line\">17</div><div class=\"line\">18</div><div class=\"line\">19</div><div class=\"line\">20</div><div class=\"line\">21</div><div class=\"line\">22</div><div class=\"line\">23</div><div class=\"line\">24</div><div class=\"line\">25</div><div class=\"line\">26</div></pre></td><td class=\"code\"><pre><div class=\"line\"><span class=\"comment\">// define axis</span></div><div class=\"line\"><span class=\"keyword\">var</span> xAxis = d3.svg.axis()</div><div class=\"line\">.scale(x)</div><div class=\"line\">.orient(<span class=\"string\">'bottom'</span>);</div><div class=\"line\"><span class=\"keyword\">var</span> yAxis = d3.svg.axis()</div><div class=\"line\">.scale(y)</div><div class=\"line\">.orient(<span class=\"string\">'left'</span>)</div><div class=\"line\">.ticks(<span class=\"number\">10</span>);\t<span class=\"comment\">//显示的刻度值个数</span></div><div class=\"line\"></div><div class=\"line\"><span class=\"comment\">// append x axis</span></div><div class=\"line\">chart.append(<span class=\"string\">'g'</span>)</div><div class=\"line\">.attr(<span class=\"string\">'class'</span>, <span class=\"string\">'x axis'</span>)</div><div class=\"line\">.attr(<span class=\"string\">'transform'</span>, <span class=\"string\">'translate('</span> + margin.left + <span class=\"string\">', '</span> + (height - margin.bottom) + <span class=\"string\">')'</span>)</div><div class=\"line\">.call(xAxis);</div><div class=\"line\"></div><div class=\"line\"><span class=\"comment\">// append y axis</span></div><div class=\"line\">chart.append(<span class=\"string\">'g'</span>)</div><div class=\"line\">.attr(<span class=\"string\">'class'</span>, <span class=\"string\">'y axis'</span>)</div><div class=\"line\">.attr(<span class=\"string\">'transform'</span>, <span class=\"string\">'translate('</span> + margin.left + <span class=\"string\">','</span> + margin.top + <span class=\"string\">')'</span>)</div><div class=\"line\">.call(yAxis)</div><div class=\"line\">.append(<span class=\"string\">'text'</span>)</div><div class=\"line\">.attr(<span class=\"string\">'transform'</span>, <span class=\"string\">'rotate(-90)'</span>)</div><div class=\"line\">.attr(<span class=\"string\">'y'</span>, <span class=\"number\">6</span>)</div><div class=\"line\">.attr(<span class=\"string\">'dy'</span>, <span class=\"string\">'.71em'</span>)</div><div class=\"line\">.style(<span class=\"string\">'text-anchor'</span>, <span class=\"string\">'end'</span>)</div><div class=\"line\">.text(<span class=\"string\">'value'</span>);</div></pre></td></tr></table></figure>\n<blockquote>\n<p>可以从<a href=\"https://github.com/brucewar/practice-in-D3\" target=\"_blank\" rel=\"external\">https://github.com/brucewar/practice-in-D3</a>获取示例代码</p>\n</blockquote>\n","excerpt":"","more":"<p>首先，我们先看一下最终的柱状图效果展示。如下图所示，一个完整的柱状图需要包含三个部分：矩形、文字、坐标轴。</p>\n<p><img src=\"http://brucewar.qiniudn.com/chart.png\" alt=\"柱状图\"></p>\n<h3 id=\"添加SVG画布\"><a href=\"#添加SVG画布\" class=\"headerlink\" title=\"添加SVG画布\"></a>添加SVG画布</h3><figure class=\"highlight js\"><table><tr><td class=\"gutter\"><pre><div class=\"line\">1</div><div class=\"line\">2</div><div class=\"line\">3</div><div class=\"line\">4</div><div class=\"line\">5</div><div class=\"line\">6</div><div class=\"line\">7</div><div class=\"line\">8</div><div class=\"line\">9</div><div class=\"line\">10</div><div class=\"line\">11</div><div class=\"line\">12</div><div class=\"line\">13</div><div class=\"line\">14</div><div class=\"line\">15</div><div class=\"line\">16</div></pre></td><td class=\"code\"><pre><div class=\"line\"><span class=\"comment\">// 画布大小</span></div><div class=\"line\"><span class=\"keyword\">var</span> width = <span class=\"number\">400</span>,</div><div class=\"line\">height = <span class=\"number\">400</span>;</div><div class=\"line\"></div><div class=\"line\"><span class=\"comment\">// 画布四个方向上的留白</span></div><div class=\"line\"><span class=\"keyword\">var</span> margin = &#123;</div><div class=\"line\">\t<span class=\"attr\">top</span>: <span class=\"number\">20</span>,</div><div class=\"line\">\t<span class=\"attr\">right</span>: <span class=\"number\">30</span>,</div><div class=\"line\">\t<span class=\"attr\">bottom</span>: <span class=\"number\">20</span>,</div><div class=\"line\">\t<span class=\"attr\">left</span>: <span class=\"number\">30</span></div><div class=\"line\">&#125;;</div><div class=\"line\"></div><div class=\"line\"><span class=\"keyword\">var</span> chart = d3.select(<span class=\"string\">'.chart'</span>)</div><div class=\"line\">.attr(<span class=\"string\">'width'</span>, width)</div><div class=\"line\">.attr(<span class=\"string\">'height'</span>, height)</div><div class=\"line\">.append(<span class=\"string\">'g'</span>);</div></pre></td></tr></table></figure>\n<h3 id=\"定义比例尺\"><a href=\"#定义比例尺\" class=\"headerlink\" title=\"定义比例尺\"></a>定义比例尺</h3><figure class=\"highlight js\"><table><tr><td class=\"gutter\"><pre><div class=\"line\">1</div><div class=\"line\">2</div><div class=\"line\">3</div><div class=\"line\">4</div><div class=\"line\">5</div></pre></td><td class=\"code\"><pre><div class=\"line\"><span class=\"comment\">// define x,y point rule</span></div><div class=\"line\"><span class=\"keyword\">var</span> x = d3.scale.ordinal()</div><div class=\"line\">.rangeRoundBands([<span class=\"number\">0</span>, width - margin.left - margin.right]);</div><div class=\"line\"><span class=\"keyword\">var</span> y = d3.scale.linear()</div><div class=\"line\">.range([height - margin.top - margin.bottom, <span class=\"number\">0</span>]);</div></pre></td></tr></table></figure>\n<h3 id=\"添加矩形及文字\"><a href=\"#添加矩形及文字\" class=\"headerlink\" title=\"添加矩形及文字\"></a>添加矩形及文字</h3><figure class=\"highlight js\"><table><tr><td class=\"gutter\"><pre><div class=\"line\">1</div><div class=\"line\">2</div><div class=\"line\">3</div><div class=\"line\">4</div><div class=\"line\">5</div><div class=\"line\">6</div><div class=\"line\">7</div><div class=\"line\">8</div><div class=\"line\">9</div><div class=\"line\">10</div><div class=\"line\">11</div><div class=\"line\">12</div><div class=\"line\">13</div><div class=\"line\">14</div><div class=\"line\">15</div><div class=\"line\">16</div><div class=\"line\">17</div><div class=\"line\">18</div><div class=\"line\">19</div><div class=\"line\">20</div><div class=\"line\">21</div><div class=\"line\">22</div><div class=\"line\">23</div><div class=\"line\">24</div><div class=\"line\">25</div><div class=\"line\">26</div><div class=\"line\">27</div><div class=\"line\">28</div><div class=\"line\">29</div><div class=\"line\">30</div><div class=\"line\">31</div><div class=\"line\">32</div><div class=\"line\">33</div><div class=\"line\">34</div><div class=\"line\">35</div><div class=\"line\">36</div><div class=\"line\">37</div><div class=\"line\">38</div><div class=\"line\">39</div><div class=\"line\">40</div><div class=\"line\">41</div><div class=\"line\">42</div><div class=\"line\">43</div><div class=\"line\">44</div><div class=\"line\">45</div><div class=\"line\">46</div><div class=\"line\">47</div><div class=\"line\">48</div><div class=\"line\">49</div><div class=\"line\">50</div><div class=\"line\">51</div><div class=\"line\">52</div><div class=\"line\">53</div><div class=\"line\">54</div></pre></td><td class=\"code\"><pre><div class=\"line\"><span class=\"comment\">// 矩形之间的空白</span></div><div class=\"line\"><span class=\"keyword\">var</span> barPadding = <span class=\"number\">4</span>;</div><div class=\"line\"></div><div class=\"line\"><span class=\"comment\">/**</div><div class=\"line\">* 这里用到了d3异步读取数据的接口csv</div><div class=\"line\">* chart.csv的文件内容如下：</div><div class=\"line\">* name,value</div><div class=\"line\">* Locke,4</div><div class=\"line\">* Reyes,8</div><div class=\"line\">* Ford,15</div><div class=\"line\">* Jarrah,16</div><div class=\"line\">* Shephard,23</div><div class=\"line\">* Kwon,42</div><div class=\"line\">*/</span></div><div class=\"line\">d3.csv(<span class=\"string\">'data/chart.csv'</span>, type, <span class=\"function\"><span class=\"keyword\">function</span>(<span class=\"params\">err, data</span>)</span>&#123;</div><div class=\"line\">\tx.domain(data.map(<span class=\"function\"><span class=\"keyword\">function</span>(<span class=\"params\">d</span>)</span>&#123; <span class=\"keyword\">return</span> d.name; &#125;));</div><div class=\"line\">\ty.domain([<span class=\"number\">0</span>, d3.max(data, <span class=\"function\"><span class=\"keyword\">function</span>(<span class=\"params\">d</span>)</span>&#123;</div><div class=\"line\">\t\t<span class=\"keyword\">return</span> d.value;</div><div class=\"line\">\t&#125;)]);</div><div class=\"line\"></div><div class=\"line\">\t<span class=\"comment\">// append rect</span></div><div class=\"line\">\tchart.selectAll(<span class=\"string\">'.bar'</span>)</div><div class=\"line\">\t.data(data)</div><div class=\"line\">\t.enter().append(<span class=\"string\">'rect'</span>)</div><div class=\"line\">\t.attr(<span class=\"string\">'class'</span>, <span class=\"string\">'bar'</span>)</div><div class=\"line\">\t.attr(<span class=\"string\">'transform'</span>, <span class=\"string\">'translate('</span> + margin.left + <span class=\"string\">','</span> + margin.top + <span class=\"string\">')'</span>)</div><div class=\"line\">\t.attr(<span class=\"string\">'x'</span>, <span class=\"function\"><span class=\"keyword\">function</span>(<span class=\"params\">d</span>)</span>&#123; <span class=\"keyword\">return</span> x(d.name) + barPadding / <span class=\"number\">2</span>; &#125;)</div><div class=\"line\">\t.attr(<span class=\"string\">'y'</span>, <span class=\"function\"><span class=\"keyword\">function</span>(<span class=\"params\">d</span>)</span>&#123; <span class=\"keyword\">return</span> y(d.value); &#125;)</div><div class=\"line\">\t.attr(<span class=\"string\">'height'</span>, <span class=\"function\"><span class=\"keyword\">function</span>(<span class=\"params\">d</span>)</span>&#123; <span class=\"keyword\">return</span> height - margin.top - margin.bottom - y(d.value); &#125;)</div><div class=\"line\">\t.attr(<span class=\"string\">'width'</span>, x.rangeBand() - barPadding);</div><div class=\"line\"></div><div class=\"line\">\t<span class=\"comment\">// append text</span></div><div class=\"line\">\tchart.selectAll(<span class=\"string\">'.text'</span>)</div><div class=\"line\">\t.data(data)</div><div class=\"line\">\t.enter()</div><div class=\"line\">\t.append(<span class=\"string\">'text'</span>)</div><div class=\"line\">\t.attr(<span class=\"string\">'class'</span>, <span class=\"string\">'text'</span>)</div><div class=\"line\">\t.attr(<span class=\"string\">'transform'</span>, <span class=\"string\">'translate('</span> + margin.left + <span class=\"string\">','</span> + margin.top + <span class=\"string\">')'</span>)</div><div class=\"line\">\t.attr(<span class=\"string\">'x'</span>, <span class=\"function\"><span class=\"keyword\">function</span>(<span class=\"params\">d</span>)</span>&#123;</div><div class=\"line\">\t\t<span class=\"keyword\">return</span> x(d.name) + barPadding / <span class=\"number\">2</span>;</div><div class=\"line\">\t&#125;).attr(<span class=\"string\">'y'</span>, <span class=\"function\"><span class=\"keyword\">function</span>(<span class=\"params\">d</span>)</span>&#123;</div><div class=\"line\">\t\t<span class=\"keyword\">return</span> y(d.value);</div><div class=\"line\">\t&#125;).attr(<span class=\"string\">'dx'</span>, <span class=\"function\"><span class=\"keyword\">function</span>(<span class=\"params\"></span>)</span>&#123;</div><div class=\"line\">\t\t<span class=\"keyword\">return</span> (x.rangeBand() - barPadding) / <span class=\"number\">2</span>;</div><div class=\"line\">\t&#125;).attr(<span class=\"string\">'dy'</span>, <span class=\"number\">20</span>)</div><div class=\"line\">\t.text(<span class=\"function\"><span class=\"keyword\">function</span>(<span class=\"params\">d</span>)</span>&#123;</div><div class=\"line\">\t\t<span class=\"keyword\">return</span> d.value;</div><div class=\"line\">\t&#125;);</div><div class=\"line\">&#125;);</div><div class=\"line\"></div><div class=\"line\"><span class=\"function\"><span class=\"keyword\">function</span> <span class=\"title\">type</span>(<span class=\"params\">d</span>)</span>&#123;</div><div class=\"line\">\td.value = +d.value;</div><div class=\"line\">\t<span class=\"keyword\">return</span> d;</div><div class=\"line\">&#125;</div></pre></td></tr></table></figure>\n<h3 id=\"定义并添加坐标轴\"><a href=\"#定义并添加坐标轴\" class=\"headerlink\" title=\"定义并添加坐标轴\"></a>定义并添加坐标轴</h3><figure class=\"highlight js\"><table><tr><td class=\"gutter\"><pre><div class=\"line\">1</div><div class=\"line\">2</div><div class=\"line\">3</div><div class=\"line\">4</div><div class=\"line\">5</div><div class=\"line\">6</div><div class=\"line\">7</div><div class=\"line\">8</div><div class=\"line\">9</div><div class=\"line\">10</div><div class=\"line\">11</div><div class=\"line\">12</div><div class=\"line\">13</div><div class=\"line\">14</div><div class=\"line\">15</div><div class=\"line\">16</div><div class=\"line\">17</div><div class=\"line\">18</div><div class=\"line\">19</div><div class=\"line\">20</div><div class=\"line\">21</div><div class=\"line\">22</div><div class=\"line\">23</div><div class=\"line\">24</div><div class=\"line\">25</div><div class=\"line\">26</div></pre></td><td class=\"code\"><pre><div class=\"line\"><span class=\"comment\">// define axis</span></div><div class=\"line\"><span class=\"keyword\">var</span> xAxis = d3.svg.axis()</div><div class=\"line\">.scale(x)</div><div class=\"line\">.orient(<span class=\"string\">'bottom'</span>);</div><div class=\"line\"><span class=\"keyword\">var</span> yAxis = d3.svg.axis()</div><div class=\"line\">.scale(y)</div><div class=\"line\">.orient(<span class=\"string\">'left'</span>)</div><div class=\"line\">.ticks(<span class=\"number\">10</span>);\t<span class=\"comment\">//显示的刻度值个数</span></div><div class=\"line\"></div><div class=\"line\"><span class=\"comment\">// append x axis</span></div><div class=\"line\">chart.append(<span class=\"string\">'g'</span>)</div><div class=\"line\">.attr(<span class=\"string\">'class'</span>, <span class=\"string\">'x axis'</span>)</div><div class=\"line\">.attr(<span class=\"string\">'transform'</span>, <span class=\"string\">'translate('</span> + margin.left + <span class=\"string\">', '</span> + (height - margin.bottom) + <span class=\"string\">')'</span>)</div><div class=\"line\">.call(xAxis);</div><div class=\"line\"></div><div class=\"line\"><span class=\"comment\">// append y axis</span></div><div class=\"line\">chart.append(<span class=\"string\">'g'</span>)</div><div class=\"line\">.attr(<span class=\"string\">'class'</span>, <span class=\"string\">'y axis'</span>)</div><div class=\"line\">.attr(<span class=\"string\">'transform'</span>, <span class=\"string\">'translate('</span> + margin.left + <span class=\"string\">','</span> + margin.top + <span class=\"string\">')'</span>)</div><div class=\"line\">.call(yAxis)</div><div class=\"line\">.append(<span class=\"string\">'text'</span>)</div><div class=\"line\">.attr(<span class=\"string\">'transform'</span>, <span class=\"string\">'rotate(-90)'</span>)</div><div class=\"line\">.attr(<span class=\"string\">'y'</span>, <span class=\"number\">6</span>)</div><div class=\"line\">.attr(<span class=\"string\">'dy'</span>, <span class=\"string\">'.71em'</span>)</div><div class=\"line\">.style(<span class=\"string\">'text-anchor'</span>, <span class=\"string\">'end'</span>)</div><div class=\"line\">.text(<span class=\"string\">'value'</span>);</div></pre></td></tr></table></figure>\n<blockquote>\n<p>可以从<a href=\"https://github.com/brucewar/practice-in-D3\">https://github.com/brucewar/practice-in-D3</a>获取示例代码</p>\n</blockquote>\n"},{"title":"答利器上的六个问题","date":"2016-09-29T08:18:27.000Z","_content":"\n![brucewar](http://7pumxs.com1.z0.glb.clouddn.com/IMG_1186.JPG)\n### 介绍一下你自己和所做的工作\n\n我叫王金龙，是一名初级（按照工作年限来说的话）Web前端开发，但是以开发经历来说，我至少应该算一名合格的前端攻城狮。目前在途牛旅游网工作（已经寻找到新的追求）。读书的时候，接触的东西比较少，心里所想唯有学习，所以也就没培养任何一样兴趣，偶尔会和同学一起踢踢球；工作的时候，才逐渐培养了一些兴趣爱好，如跳舞、唱歌等，跳舞是今年才培养起来的一个兴趣，但是因为工作的关系，基本没什么时间练舞，所以跳的非常非常一般。15年研究生毕业后，工作也有一年半了，而且公司是业务驱动开发，所以代码也写了不少，可是自身能力的提升却没看出来。\n\n### 你都在使用哪些硬件\n\n![keycool红轴](http://7pumxs.com1.z0.glb.clouddn.com/keycool.jpg)\n\n这款机械键盘是工作没多久之后买的。话说，当时看到同组的一位老程序员（简称斌哥，后来他们组从我们部门分出去啦）用的机械键盘，黑色键帽配上彩虹键帽，觉得很好看，所以一时冲动想买一把机械键盘。\n> 做什么事都要过一下脑子\n\n上面这句话，印象很深刻，因为我对机械键盘的知识一片空白，所以必须通过各方面的了解，首先从百度百科词条[机械键盘](http://baike.baidu.com/link?url=sKWDdw44eHxUdTb40AbNYLSzOgKJx7xB-FN4uucHCr_FvNreuWYWlgjwDCULDpM4hje9YDkS_8jZwazXiRJl3O-nJ1AaP_pZDoFOw_X4uBOVoSoHaFHOI5pV2SWOq7hn)学习了基本的知识，然后去问答网站（知乎）关注了话题*机械键盘*，发现此话题下，有很多问题是“程序员男朋友生日，想送机械键盘，有推荐的吗？”。额！！！被各种虐，心想为啥没有妹子送我。不过，还是有很多人推荐了不错的机械键盘。个人感觉很喜欢**Filco圣手二代**，但是迫于经济能力有限，最终还是买了一把国产的红轴，用起来真的很舒服（PS：好多同事试玩后都觉得不错）。\n\n![AKG K450](http://7pumxs.com1.z0.glb.clouddn.com/akg.jpg)\n\n> 舞蹈配上音乐之后，才有了灵魂\n\n如果一个舞者在没有背景乐的环境下舞动自己的身体，非专业观者可能会觉得看不懂，专业的人也只能从专业技巧上加以评价。有了音乐后，舞者会随着音乐的轻重缓急表达自己的情绪，这才有了舞魂。\n程序员写代码时的手指就如同这舞者，在键盘这个舞台上表演，配合音乐的节奏，程序便有了它的灵魂（PS：我写程序时听的歌单[dance](http://music.163.com/#/m/playlist?id=159311553&userid=85782250)）。AKG的这个经典款的耳机是**昊哥**推荐的，性价比非常高（非广告）。\n\n![三星S24D360HL](http://7pumxs.com1.z0.glb.clouddn.com/samsung.jpg)\n\n显示器没什么可以说的，做为Web前端开发，两个显示器是必备的，一个放IDE，一个放浏览器，对于开发效率有非常大的提升。\n\n### 软件呢\n\n作为Linux的拥护者，必须向大家推荐Vim编辑器，我觉得它能让你脱离不必要的鼠标操作，大大提高工作效率，很惭愧，Vim新手阶段，用的不是很熟，只了解一些简单的编辑命令。顺带安利一款Chrome插件[Vimium](https://chrome.google.com/webstore/detail/vimium/dbepggeogbaibhgnhhndojpepiihcmeb)（用Vim命令操作浏览器环境）。\n\n### 你最理想的工作环境是什么\n\n大桌子（圆弧型），两台显示器，一台笔记本，网络一定要好（自带翻墙，Youtube 1080P不卡顿），绿植围绕，周围坐着谦虚耐心的牛人，大家一起干着一件有意义（改变世界，哈哈，这个太大）的事。\n\n### 你平时获得工作灵感的方式有哪些\n\n逛各种网站，知乎，简书等；玩各种流行的APP，微信，Instagram等，任何一个好的产品，自有它的独特的一面，我觉得作为前端开发，也需要有一些设计的想法，我开发过的项目中都曾借鉴过这些应用。\n\n### 推荐一件生活中的利器给大家\n\nVPN，强烈推荐我用的这款，但是这里不方便贴链接，有需要的私信我。\n","source":"_posts/答利器上的六个问题.md","raw":"---\ntitle: 答利器上的六个问题\ndate: 2016-09-29 16:18:27\ntags: 利器\n---\n\n![brucewar](http://7pumxs.com1.z0.glb.clouddn.com/IMG_1186.JPG)\n### 介绍一下你自己和所做的工作\n\n我叫王金龙，是一名初级（按照工作年限来说的话）Web前端开发，但是以开发经历来说，我至少应该算一名合格的前端攻城狮。目前在途牛旅游网工作（已经寻找到新的追求）。读书的时候，接触的东西比较少，心里所想唯有学习，所以也就没培养任何一样兴趣，偶尔会和同学一起踢踢球；工作的时候，才逐渐培养了一些兴趣爱好，如跳舞、唱歌等，跳舞是今年才培养起来的一个兴趣，但是因为工作的关系，基本没什么时间练舞，所以跳的非常非常一般。15年研究生毕业后，工作也有一年半了，而且公司是业务驱动开发，所以代码也写了不少，可是自身能力的提升却没看出来。\n\n### 你都在使用哪些硬件\n\n![keycool红轴](http://7pumxs.com1.z0.glb.clouddn.com/keycool.jpg)\n\n这款机械键盘是工作没多久之后买的。话说，当时看到同组的一位老程序员（简称斌哥，后来他们组从我们部门分出去啦）用的机械键盘，黑色键帽配上彩虹键帽，觉得很好看，所以一时冲动想买一把机械键盘。\n> 做什么事都要过一下脑子\n\n上面这句话，印象很深刻，因为我对机械键盘的知识一片空白，所以必须通过各方面的了解，首先从百度百科词条[机械键盘](http://baike.baidu.com/link?url=sKWDdw44eHxUdTb40AbNYLSzOgKJx7xB-FN4uucHCr_FvNreuWYWlgjwDCULDpM4hje9YDkS_8jZwazXiRJl3O-nJ1AaP_pZDoFOw_X4uBOVoSoHaFHOI5pV2SWOq7hn)学习了基本的知识，然后去问答网站（知乎）关注了话题*机械键盘*，发现此话题下，有很多问题是“程序员男朋友生日，想送机械键盘，有推荐的吗？”。额！！！被各种虐，心想为啥没有妹子送我。不过，还是有很多人推荐了不错的机械键盘。个人感觉很喜欢**Filco圣手二代**，但是迫于经济能力有限，最终还是买了一把国产的红轴，用起来真的很舒服（PS：好多同事试玩后都觉得不错）。\n\n![AKG K450](http://7pumxs.com1.z0.glb.clouddn.com/akg.jpg)\n\n> 舞蹈配上音乐之后，才有了灵魂\n\n如果一个舞者在没有背景乐的环境下舞动自己的身体，非专业观者可能会觉得看不懂，专业的人也只能从专业技巧上加以评价。有了音乐后，舞者会随着音乐的轻重缓急表达自己的情绪，这才有了舞魂。\n程序员写代码时的手指就如同这舞者，在键盘这个舞台上表演，配合音乐的节奏，程序便有了它的灵魂（PS：我写程序时听的歌单[dance](http://music.163.com/#/m/playlist?id=159311553&userid=85782250)）。AKG的这个经典款的耳机是**昊哥**推荐的，性价比非常高（非广告）。\n\n![三星S24D360HL](http://7pumxs.com1.z0.glb.clouddn.com/samsung.jpg)\n\n显示器没什么可以说的，做为Web前端开发，两个显示器是必备的，一个放IDE，一个放浏览器，对于开发效率有非常大的提升。\n\n### 软件呢\n\n作为Linux的拥护者，必须向大家推荐Vim编辑器，我觉得它能让你脱离不必要的鼠标操作，大大提高工作效率，很惭愧，Vim新手阶段，用的不是很熟，只了解一些简单的编辑命令。顺带安利一款Chrome插件[Vimium](https://chrome.google.com/webstore/detail/vimium/dbepggeogbaibhgnhhndojpepiihcmeb)（用Vim命令操作浏览器环境）。\n\n### 你最理想的工作环境是什么\n\n大桌子（圆弧型），两台显示器，一台笔记本，网络一定要好（自带翻墙，Youtube 1080P不卡顿），绿植围绕，周围坐着谦虚耐心的牛人，大家一起干着一件有意义（改变世界，哈哈，这个太大）的事。\n\n### 你平时获得工作灵感的方式有哪些\n\n逛各种网站，知乎，简书等；玩各种流行的APP，微信，Instagram等，任何一个好的产品，自有它的独特的一面，我觉得作为前端开发，也需要有一些设计的想法，我开发过的项目中都曾借鉴过这些应用。\n\n### 推荐一件生活中的利器给大家\n\nVPN，强烈推荐我用的这款，但是这里不方便贴链接，有需要的私信我。\n","slug":"答利器上的六个问题","published":1,"updated":"2016-10-19T06:45:47.542Z","comments":1,"layout":"post","photos":[],"link":"","_id":"civhg3j3k0006tonbgv74cgy4","content":"<p><img src=\"http://7pumxs.com1.z0.glb.clouddn.com/IMG_1186.JPG\" alt=\"brucewar\"></p>\n<h3 id=\"介绍一下你自己和所做的工作\"><a href=\"#介绍一下你自己和所做的工作\" class=\"headerlink\" title=\"介绍一下你自己和所做的工作\"></a>介绍一下你自己和所做的工作</h3><p>我叫王金龙，是一名初级（按照工作年限来说的话）Web前端开发，但是以开发经历来说，我至少应该算一名合格的前端攻城狮。目前在途牛旅游网工作（已经寻找到新的追求）。读书的时候，接触的东西比较少，心里所想唯有学习，所以也就没培养任何一样兴趣，偶尔会和同学一起踢踢球；工作的时候，才逐渐培养了一些兴趣爱好，如跳舞、唱歌等，跳舞是今年才培养起来的一个兴趣，但是因为工作的关系，基本没什么时间练舞，所以跳的非常非常一般。15年研究生毕业后，工作也有一年半了，而且公司是业务驱动开发，所以代码也写了不少，可是自身能力的提升却没看出来。</p>\n<h3 id=\"你都在使用哪些硬件\"><a href=\"#你都在使用哪些硬件\" class=\"headerlink\" title=\"你都在使用哪些硬件\"></a>你都在使用哪些硬件</h3><p><img src=\"http://7pumxs.com1.z0.glb.clouddn.com/keycool.jpg\" alt=\"keycool红轴\"></p>\n<p>这款机械键盘是工作没多久之后买的。话说，当时看到同组的一位老程序员（简称斌哥，后来他们组从我们部门分出去啦）用的机械键盘，黑色键帽配上彩虹键帽，觉得很好看，所以一时冲动想买一把机械键盘。</p>\n<blockquote>\n<p>做什么事都要过一下脑子</p>\n</blockquote>\n<p>上面这句话，印象很深刻，因为我对机械键盘的知识一片空白，所以必须通过各方面的了解，首先从百度百科词条<a href=\"http://baike.baidu.com/link?url=sKWDdw44eHxUdTb40AbNYLSzOgKJx7xB-FN4uucHCr_FvNreuWYWlgjwDCULDpM4hje9YDkS_8jZwazXiRJl3O-nJ1AaP_pZDoFOw_X4uBOVoSoHaFHOI5pV2SWOq7hn\" target=\"_blank\" rel=\"external\">机械键盘</a>学习了基本的知识，然后去问答网站（知乎）关注了话题<em>机械键盘</em>，发现此话题下，有很多问题是“程序员男朋友生日，想送机械键盘，有推荐的吗？”。额！！！被各种虐，心想为啥没有妹子送我。不过，还是有很多人推荐了不错的机械键盘。个人感觉很喜欢<strong>Filco圣手二代</strong>，但是迫于经济能力有限，最终还是买了一把国产的红轴，用起来真的很舒服（PS：好多同事试玩后都觉得不错）。</p>\n<p><img src=\"http://7pumxs.com1.z0.glb.clouddn.com/akg.jpg\" alt=\"AKG K450\"></p>\n<blockquote>\n<p>舞蹈配上音乐之后，才有了灵魂</p>\n</blockquote>\n<p>如果一个舞者在没有背景乐的环境下舞动自己的身体，非专业观者可能会觉得看不懂，专业的人也只能从专业技巧上加以评价。有了音乐后，舞者会随着音乐的轻重缓急表达自己的情绪，这才有了舞魂。<br>程序员写代码时的手指就如同这舞者，在键盘这个舞台上表演，配合音乐的节奏，程序便有了它的灵魂（PS：我写程序时听的歌单<a href=\"http://music.163.com/#/m/playlist?id=159311553&amp;userid=85782250\" target=\"_blank\" rel=\"external\">dance</a>）。AKG的这个经典款的耳机是<strong>昊哥</strong>推荐的，性价比非常高（非广告）。</p>\n<p><img src=\"http://7pumxs.com1.z0.glb.clouddn.com/samsung.jpg\" alt=\"三星S24D360HL\"></p>\n<p>显示器没什么可以说的，做为Web前端开发，两个显示器是必备的，一个放IDE，一个放浏览器，对于开发效率有非常大的提升。</p>\n<h3 id=\"软件呢\"><a href=\"#软件呢\" class=\"headerlink\" title=\"软件呢\"></a>软件呢</h3><p>作为Linux的拥护者，必须向大家推荐Vim编辑器，我觉得它能让你脱离不必要的鼠标操作，大大提高工作效率，很惭愧，Vim新手阶段，用的不是很熟，只了解一些简单的编辑命令。顺带安利一款Chrome插件<a href=\"https://chrome.google.com/webstore/detail/vimium/dbepggeogbaibhgnhhndojpepiihcmeb\" target=\"_blank\" rel=\"external\">Vimium</a>（用Vim命令操作浏览器环境）。</p>\n<h3 id=\"你最理想的工作环境是什么\"><a href=\"#你最理想的工作环境是什么\" class=\"headerlink\" title=\"你最理想的工作环境是什么\"></a>你最理想的工作环境是什么</h3><p>大桌子（圆弧型），两台显示器，一台笔记本，网络一定要好（自带翻墙，Youtube 1080P不卡顿），绿植围绕，周围坐着谦虚耐心的牛人，大家一起干着一件有意义（改变世界，哈哈，这个太大）的事。</p>\n<h3 id=\"你平时获得工作灵感的方式有哪些\"><a href=\"#你平时获得工作灵感的方式有哪些\" class=\"headerlink\" title=\"你平时获得工作灵感的方式有哪些\"></a>你平时获得工作灵感的方式有哪些</h3><p>逛各种网站，知乎，简书等；玩各种流行的APP，微信，Instagram等，任何一个好的产品，自有它的独特的一面，我觉得作为前端开发，也需要有一些设计的想法，我开发过的项目中都曾借鉴过这些应用。</p>\n<h3 id=\"推荐一件生活中的利器给大家\"><a href=\"#推荐一件生活中的利器给大家\" class=\"headerlink\" title=\"推荐一件生活中的利器给大家\"></a>推荐一件生活中的利器给大家</h3><p>VPN，强烈推荐我用的这款，但是这里不方便贴链接，有需要的私信我。</p>\n","excerpt":"","more":"<p><img src=\"http://7pumxs.com1.z0.glb.clouddn.com/IMG_1186.JPG\" alt=\"brucewar\"></p>\n<h3 id=\"介绍一下你自己和所做的工作\"><a href=\"#介绍一下你自己和所做的工作\" class=\"headerlink\" title=\"介绍一下你自己和所做的工作\"></a>介绍一下你自己和所做的工作</h3><p>我叫王金龙，是一名初级（按照工作年限来说的话）Web前端开发，但是以开发经历来说，我至少应该算一名合格的前端攻城狮。目前在途牛旅游网工作（已经寻找到新的追求）。读书的时候，接触的东西比较少，心里所想唯有学习，所以也就没培养任何一样兴趣，偶尔会和同学一起踢踢球；工作的时候，才逐渐培养了一些兴趣爱好，如跳舞、唱歌等，跳舞是今年才培养起来的一个兴趣，但是因为工作的关系，基本没什么时间练舞，所以跳的非常非常一般。15年研究生毕业后，工作也有一年半了，而且公司是业务驱动开发，所以代码也写了不少，可是自身能力的提升却没看出来。</p>\n<h3 id=\"你都在使用哪些硬件\"><a href=\"#你都在使用哪些硬件\" class=\"headerlink\" title=\"你都在使用哪些硬件\"></a>你都在使用哪些硬件</h3><p><img src=\"http://7pumxs.com1.z0.glb.clouddn.com/keycool.jpg\" alt=\"keycool红轴\"></p>\n<p>这款机械键盘是工作没多久之后买的。话说，当时看到同组的一位老程序员（简称斌哥，后来他们组从我们部门分出去啦）用的机械键盘，黑色键帽配上彩虹键帽，觉得很好看，所以一时冲动想买一把机械键盘。</p>\n<blockquote>\n<p>做什么事都要过一下脑子</p>\n</blockquote>\n<p>上面这句话，印象很深刻，因为我对机械键盘的知识一片空白，所以必须通过各方面的了解，首先从百度百科词条<a href=\"http://baike.baidu.com/link?url=sKWDdw44eHxUdTb40AbNYLSzOgKJx7xB-FN4uucHCr_FvNreuWYWlgjwDCULDpM4hje9YDkS_8jZwazXiRJl3O-nJ1AaP_pZDoFOw_X4uBOVoSoHaFHOI5pV2SWOq7hn\">机械键盘</a>学习了基本的知识，然后去问答网站（知乎）关注了话题<em>机械键盘</em>，发现此话题下，有很多问题是“程序员男朋友生日，想送机械键盘，有推荐的吗？”。额！！！被各种虐，心想为啥没有妹子送我。不过，还是有很多人推荐了不错的机械键盘。个人感觉很喜欢<strong>Filco圣手二代</strong>，但是迫于经济能力有限，最终还是买了一把国产的红轴，用起来真的很舒服（PS：好多同事试玩后都觉得不错）。</p>\n<p><img src=\"http://7pumxs.com1.z0.glb.clouddn.com/akg.jpg\" alt=\"AKG K450\"></p>\n<blockquote>\n<p>舞蹈配上音乐之后，才有了灵魂</p>\n</blockquote>\n<p>如果一个舞者在没有背景乐的环境下舞动自己的身体，非专业观者可能会觉得看不懂，专业的人也只能从专业技巧上加以评价。有了音乐后，舞者会随着音乐的轻重缓急表达自己的情绪，这才有了舞魂。<br>程序员写代码时的手指就如同这舞者，在键盘这个舞台上表演，配合音乐的节奏，程序便有了它的灵魂（PS：我写程序时听的歌单<a href=\"http://music.163.com/#/m/playlist?id=159311553&amp;userid=85782250\">dance</a>）。AKG的这个经典款的耳机是<strong>昊哥</strong>推荐的，性价比非常高（非广告）。</p>\n<p><img src=\"http://7pumxs.com1.z0.glb.clouddn.com/samsung.jpg\" alt=\"三星S24D360HL\"></p>\n<p>显示器没什么可以说的，做为Web前端开发，两个显示器是必备的，一个放IDE，一个放浏览器，对于开发效率有非常大的提升。</p>\n<h3 id=\"软件呢\"><a href=\"#软件呢\" class=\"headerlink\" title=\"软件呢\"></a>软件呢</h3><p>作为Linux的拥护者，必须向大家推荐Vim编辑器，我觉得它能让你脱离不必要的鼠标操作，大大提高工作效率，很惭愧，Vim新手阶段，用的不是很熟，只了解一些简单的编辑命令。顺带安利一款Chrome插件<a href=\"https://chrome.google.com/webstore/detail/vimium/dbepggeogbaibhgnhhndojpepiihcmeb\">Vimium</a>（用Vim命令操作浏览器环境）。</p>\n<h3 id=\"你最理想的工作环境是什么\"><a href=\"#你最理想的工作环境是什么\" class=\"headerlink\" title=\"你最理想的工作环境是什么\"></a>你最理想的工作环境是什么</h3><p>大桌子（圆弧型），两台显示器，一台笔记本，网络一定要好（自带翻墙，Youtube 1080P不卡顿），绿植围绕，周围坐着谦虚耐心的牛人，大家一起干着一件有意义（改变世界，哈哈，这个太大）的事。</p>\n<h3 id=\"你平时获得工作灵感的方式有哪些\"><a href=\"#你平时获得工作灵感的方式有哪些\" class=\"headerlink\" title=\"你平时获得工作灵感的方式有哪些\"></a>你平时获得工作灵感的方式有哪些</h3><p>逛各种网站，知乎，简书等；玩各种流行的APP，微信，Instagram等，任何一个好的产品，自有它的独特的一面，我觉得作为前端开发，也需要有一些设计的想法，我开发过的项目中都曾借鉴过这些应用。</p>\n<h3 id=\"推荐一件生活中的利器给大家\"><a href=\"#推荐一件生活中的利器给大家\" class=\"headerlink\" title=\"推荐一件生活中的利器给大家\"></a>推荐一件生活中的利器给大家</h3><p>VPN，强烈推荐我用的这款，但是这里不方便贴链接，有需要的私信我。</p>\n"},{"title":"D3.js（入门篇）","date":"2016-10-24T08:26:58.000Z","_content":"#### 简介\nD3.js（后面简称D3，官方首页[https://d3js.org/](https://d3js.org/)）是基于JavaScript开发的一套用于数据可视化工具，项目开源在GitHub，项目排名靠前。它提供了很多API，如DOM（`Document Object Model`）的一些操作，绘制图形等。截止本文发表时间，D3已更新到v4，v4在v3的基础上，有了很大的改变（因为v3只支持通过svg和dom构图，所以v4在v3的基础上增加了对Canvas的支持以及API的修改）,本文使用的版本为v3的API。\n\n#### Hello World\n```html\n<!DOCTYPE html>\n<html>\n  <head>\n\t\t<meta charset=\"utf-8\">\n\t\t<title>D3.js Hello World</title>\n\t\t<script src=\"https://d3js.org/d3.v3.min.js\"></script>\n\t</head>\n\t<body>\n\t\t<p>first text</p>\n\t\t<p>second text</p>\n\t\t<p>third text</p>\n\t\t<script>\n\t\tvar p = d3.select('body').selectAll('p')\n\t\t.attr('color', 'red')\n\t\t.attr('font-size', '72px')\n\t\t.text('brucewar');\n\t\t</script>\n\t</body>\n</html>\n```\n上面代码展示了基本的DOM操作，有过jQuery开发经历的人会发现其语法和jQuery很相似，主要是以下两点：\n\n* 支持元素选择器\n* 链式语法结构\n\n##### 插入元素\n```js\n// 末尾插入p元素\nd3.select('body').append('p').text('append new prograph');\n// 在第一个p元素之前插入p\nd3.select('p').insert('p').text('insert new prograph');\n```\n##### 删除元素\n```js\nd3.select('p').remove();\n```\n\n#### 数据绑定\n\n在D3中，选择器通常和数据绑定一起使用，这里的**数据绑定**的意思是将DOM元素与数据进行绑定，当需要依靠数据操作元素会非常方便。\n```js\nvar arr = ['a', 'b', 'c'];\np.data(arr).text(function(d, i){\n\t// d: 数据 i: 元素索引\n\treturn d;\n});\n```\n\n#### 绘制简单的横向柱状图\n\n1. 添加svg画布\n\n\t```js\n\tvar width = 300;\n\tvar height = 300;\n\n\tvar svg = d3.select('body')\n\t.append('svg')\n\t.attr('width'. width)\n\t.attr('height', height);\n\t```\n2. 绘制矩形\n\n\t```js\n\tvar data = [250, 210, 170, 130, 90]; // 表示矩形的宽度\n\tvar rectHeight = 25;\n\n\tsvg.selectAll('rect')\n\t.data(data)\n\t.enter()\t// 当元素个数不足数据个数时，自动补全\n\t.append('rect')\n\t.attr('x', 20)\n\t.attr('y', function(d, i){\n\t\treturn i * rectHeight;\n\t})\n\t.attr('width', function(d){\n\t\treturn d;\n\t})\n\t.attr('height', rectHeight - 2)\n\t.attr('fill', 'steelblue');\n\t```\n\n\t从上面的代码可以看出当`data`中的数据大于画布的宽度时，绘制的矩形会超出画布，所以需要引入*比例尺*（Scale）的概念。比例尺的概念类似数学中的一元二次函数，有x和y两个未知数，当x的值确定时，y的值也就确定了，x范围被称为定义域，y的范围为值域，对应于D3比例尺中的domain和range。D3为我们提供了很多比例尺，这里主要讲这里柱状图所要使用的线性比例尺。\n\t```js\n\tvar min = d3.min(data);\n\tvar max = d3.max(data);\n\n\tvar linear = d3.scale.linear()\n\t.domain([min, max])\n\t.range([0, 300]);\n\t```\n\n3. 绘制坐标轴\n\n\t```js\n\t//数据\n\tvar dataset = [ 2.5 , 2.1 , 1.7 , 1.3 , 0.9 ];\n\t//定义比例尺\n\tvar linear = d3.scale.linear()\n  .domain([0, d3.max(dataset)])\n  .range([0, 250]);\n\n\tvar axisX = d3.svg.axis()\n  .scale(linear)      //指定比例尺\n  .orient(\"bottom\")   //指定刻度的方向\n  .ticks(7);          //指定刻度的数量\n\t```\n\t定义了坐标轴之后，只要在svg中添加一个分组元素，再将坐标轴的其他元素添加到分组即可。\n\t```js\n\tsvg.append('g')\n\t.attr('class', 'axis')\n\t.attr('transform', 'translate(20, 130)')\n\t.call(axisX);\n\t```\n\t```css\n\t/** 修改坐标轴样式 */\n\t.axis path,\n\t.axis line{\n\t\tfill: none;\n\t\tstroke: black;\n\t\tshape-rendering: crispEdges;\n\t}\n\t.axis text{\n\t\tfont-family: sans-serif;\n\t\tfont-size: 11px;\n\t}\n\t```\n","source":"_posts/D3.js-入门篇.md","raw":"---\ntitle: D3.js（入门篇）\ndate: 2016-10-24 16:26:58\ncategories: D3.js\ntags: [D3,JavaScript]\n---\n#### 简介\nD3.js（后面简称D3，官方首页[https://d3js.org/](https://d3js.org/)）是基于JavaScript开发的一套用于数据可视化工具，项目开源在GitHub，项目排名靠前。它提供了很多API，如DOM（`Document Object Model`）的一些操作，绘制图形等。截止本文发表时间，D3已更新到v4，v4在v3的基础上，有了很大的改变（因为v3只支持通过svg和dom构图，所以v4在v3的基础上增加了对Canvas的支持以及API的修改）,本文使用的版本为v3的API。\n\n#### Hello World\n```html\n<!DOCTYPE html>\n<html>\n  <head>\n\t\t<meta charset=\"utf-8\">\n\t\t<title>D3.js Hello World</title>\n\t\t<script src=\"https://d3js.org/d3.v3.min.js\"></script>\n\t</head>\n\t<body>\n\t\t<p>first text</p>\n\t\t<p>second text</p>\n\t\t<p>third text</p>\n\t\t<script>\n\t\tvar p = d3.select('body').selectAll('p')\n\t\t.attr('color', 'red')\n\t\t.attr('font-size', '72px')\n\t\t.text('brucewar');\n\t\t</script>\n\t</body>\n</html>\n```\n上面代码展示了基本的DOM操作，有过jQuery开发经历的人会发现其语法和jQuery很相似，主要是以下两点：\n\n* 支持元素选择器\n* 链式语法结构\n\n##### 插入元素\n```js\n// 末尾插入p元素\nd3.select('body').append('p').text('append new prograph');\n// 在第一个p元素之前插入p\nd3.select('p').insert('p').text('insert new prograph');\n```\n##### 删除元素\n```js\nd3.select('p').remove();\n```\n\n#### 数据绑定\n\n在D3中，选择器通常和数据绑定一起使用，这里的**数据绑定**的意思是将DOM元素与数据进行绑定，当需要依靠数据操作元素会非常方便。\n```js\nvar arr = ['a', 'b', 'c'];\np.data(arr).text(function(d, i){\n\t// d: 数据 i: 元素索引\n\treturn d;\n});\n```\n\n#### 绘制简单的横向柱状图\n\n1. 添加svg画布\n\n\t```js\n\tvar width = 300;\n\tvar height = 300;\n\n\tvar svg = d3.select('body')\n\t.append('svg')\n\t.attr('width'. width)\n\t.attr('height', height);\n\t```\n2. 绘制矩形\n\n\t```js\n\tvar data = [250, 210, 170, 130, 90]; // 表示矩形的宽度\n\tvar rectHeight = 25;\n\n\tsvg.selectAll('rect')\n\t.data(data)\n\t.enter()\t// 当元素个数不足数据个数时，自动补全\n\t.append('rect')\n\t.attr('x', 20)\n\t.attr('y', function(d, i){\n\t\treturn i * rectHeight;\n\t})\n\t.attr('width', function(d){\n\t\treturn d;\n\t})\n\t.attr('height', rectHeight - 2)\n\t.attr('fill', 'steelblue');\n\t```\n\n\t从上面的代码可以看出当`data`中的数据大于画布的宽度时，绘制的矩形会超出画布，所以需要引入*比例尺*（Scale）的概念。比例尺的概念类似数学中的一元二次函数，有x和y两个未知数，当x的值确定时，y的值也就确定了，x范围被称为定义域，y的范围为值域，对应于D3比例尺中的domain和range。D3为我们提供了很多比例尺，这里主要讲这里柱状图所要使用的线性比例尺。\n\t```js\n\tvar min = d3.min(data);\n\tvar max = d3.max(data);\n\n\tvar linear = d3.scale.linear()\n\t.domain([min, max])\n\t.range([0, 300]);\n\t```\n\n3. 绘制坐标轴\n\n\t```js\n\t//数据\n\tvar dataset = [ 2.5 , 2.1 , 1.7 , 1.3 , 0.9 ];\n\t//定义比例尺\n\tvar linear = d3.scale.linear()\n  .domain([0, d3.max(dataset)])\n  .range([0, 250]);\n\n\tvar axisX = d3.svg.axis()\n  .scale(linear)      //指定比例尺\n  .orient(\"bottom\")   //指定刻度的方向\n  .ticks(7);          //指定刻度的数量\n\t```\n\t定义了坐标轴之后，只要在svg中添加一个分组元素，再将坐标轴的其他元素添加到分组即可。\n\t```js\n\tsvg.append('g')\n\t.attr('class', 'axis')\n\t.attr('transform', 'translate(20, 130)')\n\t.call(axisX);\n\t```\n\t```css\n\t/** 修改坐标轴样式 */\n\t.axis path,\n\t.axis line{\n\t\tfill: none;\n\t\tstroke: black;\n\t\tshape-rendering: crispEdges;\n\t}\n\t.axis text{\n\t\tfont-family: sans-serif;\n\t\tfont-size: 11px;\n\t}\n\t```\n","slug":"D3.js-入门篇","published":1,"updated":"2016-10-25T03:00:41.325Z","comments":1,"layout":"post","photos":[],"link":"","_id":"civhg3j420008tonbs187gh1i","content":"<h4 id=\"简介\"><a href=\"#简介\" class=\"headerlink\" title=\"简介\"></a>简介</h4><p>D3.js（后面简称D3，官方首页<a href=\"https://d3js.org/\" target=\"_blank\" rel=\"external\">https://d3js.org/</a>）是基于JavaScript开发的一套用于数据可视化工具，项目开源在GitHub，项目排名靠前。它提供了很多API，如DOM（<code>Document Object Model</code>）的一些操作，绘制图形等。截止本文发表时间，D3已更新到v4，v4在v3的基础上，有了很大的改变（因为v3只支持通过svg和dom构图，所以v4在v3的基础上增加了对Canvas的支持以及API的修改）,本文使用的版本为v3的API。</p>\n<h4 id=\"Hello-World\"><a href=\"#Hello-World\" class=\"headerlink\" title=\"Hello World\"></a>Hello World</h4><figure class=\"highlight html\"><table><tr><td class=\"gutter\"><pre><div class=\"line\">1</div><div class=\"line\">2</div><div class=\"line\">3</div><div class=\"line\">4</div><div class=\"line\">5</div><div class=\"line\">6</div><div class=\"line\">7</div><div class=\"line\">8</div><div class=\"line\">9</div><div class=\"line\">10</div><div class=\"line\">11</div><div class=\"line\">12</div><div class=\"line\">13</div><div class=\"line\">14</div><div class=\"line\">15</div><div class=\"line\">16</div><div class=\"line\">17</div><div class=\"line\">18</div><div class=\"line\">19</div></pre></td><td class=\"code\"><pre><div class=\"line\"><span class=\"meta\">&lt;!DOCTYPE html&gt;</span></div><div class=\"line\"><span class=\"tag\">&lt;<span class=\"name\">html</span>&gt;</span></div><div class=\"line\">  <span class=\"tag\">&lt;<span class=\"name\">head</span>&gt;</span></div><div class=\"line\">\t\t<span class=\"tag\">&lt;<span class=\"name\">meta</span> <span class=\"attr\">charset</span>=<span class=\"string\">\"utf-8\"</span>&gt;</span></div><div class=\"line\">\t\t<span class=\"tag\">&lt;<span class=\"name\">title</span>&gt;</span>D3.js Hello World<span class=\"tag\">&lt;/<span class=\"name\">title</span>&gt;</span></div><div class=\"line\">\t\t<span class=\"tag\">&lt;<span class=\"name\">script</span> <span class=\"attr\">src</span>=<span class=\"string\">\"https://d3js.org/d3.v3.min.js\"</span>&gt;</span><span class=\"undefined\"></span><span class=\"tag\">&lt;/<span class=\"name\">script</span>&gt;</span></div><div class=\"line\">\t<span class=\"tag\">&lt;/<span class=\"name\">head</span>&gt;</span></div><div class=\"line\">\t<span class=\"tag\">&lt;<span class=\"name\">body</span>&gt;</span></div><div class=\"line\">\t\t<span class=\"tag\">&lt;<span class=\"name\">p</span>&gt;</span>first text<span class=\"tag\">&lt;/<span class=\"name\">p</span>&gt;</span></div><div class=\"line\">\t\t<span class=\"tag\">&lt;<span class=\"name\">p</span>&gt;</span>second text<span class=\"tag\">&lt;/<span class=\"name\">p</span>&gt;</span></div><div class=\"line\">\t\t<span class=\"tag\">&lt;<span class=\"name\">p</span>&gt;</span>third text<span class=\"tag\">&lt;/<span class=\"name\">p</span>&gt;</span></div><div class=\"line\">\t\t<span class=\"tag\">&lt;<span class=\"name\">script</span>&gt;</span><span class=\"javascript\"></span></div><div class=\"line\">\t\t<span class=\"keyword\">var</span> p = d3.select(<span class=\"string\">'body'</span>).selectAll(<span class=\"string\">'p'</span>)</div><div class=\"line\">\t\t.attr(<span class=\"string\">'color'</span>, <span class=\"string\">'red'</span>)</div><div class=\"line\">\t\t.attr(<span class=\"string\">'font-size'</span>, <span class=\"string\">'72px'</span>)</div><div class=\"line\">\t\t.text(<span class=\"string\">'brucewar'</span>);</div><div class=\"line\">\t\t<span class=\"tag\">&lt;/<span class=\"name\">script</span>&gt;</span></div><div class=\"line\">\t<span class=\"tag\">&lt;/<span class=\"name\">body</span>&gt;</span></div><div class=\"line\"><span class=\"tag\">&lt;/<span class=\"name\">html</span>&gt;</span></div></pre></td></tr></table></figure>\n<p>上面代码展示了基本的DOM操作，有过jQuery开发经历的人会发现其语法和jQuery很相似，主要是以下两点：</p>\n<ul>\n<li>支持元素选择器</li>\n<li>链式语法结构</li>\n</ul>\n<h5 id=\"插入元素\"><a href=\"#插入元素\" class=\"headerlink\" title=\"插入元素\"></a>插入元素</h5><figure class=\"highlight js\"><table><tr><td class=\"gutter\"><pre><div class=\"line\">1</div><div class=\"line\">2</div><div class=\"line\">3</div><div class=\"line\">4</div></pre></td><td class=\"code\"><pre><div class=\"line\"><span class=\"comment\">// 末尾插入p元素</span></div><div class=\"line\">d3.select(<span class=\"string\">'body'</span>).append(<span class=\"string\">'p'</span>).text(<span class=\"string\">'append new prograph'</span>);</div><div class=\"line\"><span class=\"comment\">// 在第一个p元素之前插入p</span></div><div class=\"line\">d3.select(<span class=\"string\">'p'</span>).insert(<span class=\"string\">'p'</span>).text(<span class=\"string\">'insert new prograph'</span>);</div></pre></td></tr></table></figure>\n<h5 id=\"删除元素\"><a href=\"#删除元素\" class=\"headerlink\" title=\"删除元素\"></a>删除元素</h5><figure class=\"highlight js\"><table><tr><td class=\"gutter\"><pre><div class=\"line\">1</div></pre></td><td class=\"code\"><pre><div class=\"line\">d3.select(<span class=\"string\">'p'</span>).remove();</div></pre></td></tr></table></figure>\n<h4 id=\"数据绑定\"><a href=\"#数据绑定\" class=\"headerlink\" title=\"数据绑定\"></a>数据绑定</h4><p>在D3中，选择器通常和数据绑定一起使用，这里的<strong>数据绑定</strong>的意思是将DOM元素与数据进行绑定，当需要依靠数据操作元素会非常方便。<br><figure class=\"highlight js\"><table><tr><td class=\"gutter\"><pre><div class=\"line\">1</div><div class=\"line\">2</div><div class=\"line\">3</div><div class=\"line\">4</div><div class=\"line\">5</div></pre></td><td class=\"code\"><pre><div class=\"line\"><span class=\"keyword\">var</span> arr = [<span class=\"string\">'a'</span>, <span class=\"string\">'b'</span>, <span class=\"string\">'c'</span>];</div><div class=\"line\">p.data(arr).text(<span class=\"function\"><span class=\"keyword\">function</span>(<span class=\"params\">d, i</span>)</span>&#123;</div><div class=\"line\">\t<span class=\"comment\">// d: 数据 i: 元素索引</span></div><div class=\"line\">\t<span class=\"keyword\">return</span> d;</div><div class=\"line\">&#125;);</div></pre></td></tr></table></figure></p>\n<h4 id=\"绘制简单的横向柱状图\"><a href=\"#绘制简单的横向柱状图\" class=\"headerlink\" title=\"绘制简单的横向柱状图\"></a>绘制简单的横向柱状图</h4><ol>\n<li><p>添加svg画布</p>\n <figure class=\"highlight js\"><table><tr><td class=\"gutter\"><pre><div class=\"line\">1</div><div class=\"line\">2</div><div class=\"line\">3</div><div class=\"line\">4</div><div class=\"line\">5</div><div class=\"line\">6</div><div class=\"line\">7</div></pre></td><td class=\"code\"><pre><div class=\"line\"><span class=\"keyword\">var</span> width = <span class=\"number\">300</span>;</div><div class=\"line\"><span class=\"keyword\">var</span> height = <span class=\"number\">300</span>;</div><div class=\"line\"></div><div class=\"line\"><span class=\"keyword\">var</span> svg = d3.select(<span class=\"string\">'body'</span>)</div><div class=\"line\">.append(<span class=\"string\">'svg'</span>)</div><div class=\"line\">.attr(<span class=\"string\">'width'</span>. width)</div><div class=\"line\">.attr(<span class=\"string\">'height'</span>, height);</div></pre></td></tr></table></figure>\n</li>\n<li><p>绘制矩形</p>\n <figure class=\"highlight js\"><table><tr><td class=\"gutter\"><pre><div class=\"line\">1</div><div class=\"line\">2</div><div class=\"line\">3</div><div class=\"line\">4</div><div class=\"line\">5</div><div class=\"line\">6</div><div class=\"line\">7</div><div class=\"line\">8</div><div class=\"line\">9</div><div class=\"line\">10</div><div class=\"line\">11</div><div class=\"line\">12</div><div class=\"line\">13</div><div class=\"line\">14</div><div class=\"line\">15</div><div class=\"line\">16</div></pre></td><td class=\"code\"><pre><div class=\"line\"><span class=\"keyword\">var</span> data = [<span class=\"number\">250</span>, <span class=\"number\">210</span>, <span class=\"number\">170</span>, <span class=\"number\">130</span>, <span class=\"number\">90</span>]; <span class=\"comment\">// 表示矩形的宽度</span></div><div class=\"line\"><span class=\"keyword\">var</span> rectHeight = <span class=\"number\">25</span>;</div><div class=\"line\"></div><div class=\"line\">svg.selectAll(<span class=\"string\">'rect'</span>)</div><div class=\"line\">.data(data)</div><div class=\"line\">.enter()\t<span class=\"comment\">// 当元素个数不足数据个数时，自动补全</span></div><div class=\"line\">.append(<span class=\"string\">'rect'</span>)</div><div class=\"line\">.attr(<span class=\"string\">'x'</span>, <span class=\"number\">20</span>)</div><div class=\"line\">.attr(<span class=\"string\">'y'</span>, <span class=\"function\"><span class=\"keyword\">function</span>(<span class=\"params\">d, i</span>)</span>&#123;</div><div class=\"line\">\t<span class=\"keyword\">return</span> i * rectHeight;</div><div class=\"line\">&#125;)</div><div class=\"line\">.attr(<span class=\"string\">'width'</span>, <span class=\"function\"><span class=\"keyword\">function</span>(<span class=\"params\">d</span>)</span>&#123;</div><div class=\"line\">\t<span class=\"keyword\">return</span> d;</div><div class=\"line\">&#125;)</div><div class=\"line\">.attr(<span class=\"string\">'height'</span>, rectHeight - <span class=\"number\">2</span>)</div><div class=\"line\">.attr(<span class=\"string\">'fill'</span>, <span class=\"string\">'steelblue'</span>);</div></pre></td></tr></table></figure>\n<p> 从上面的代码可以看出当<code>data</code>中的数据大于画布的宽度时，绘制的矩形会超出画布，所以需要引入<em>比例尺</em>（Scale）的概念。比例尺的概念类似数学中的一元二次函数，有x和y两个未知数，当x的值确定时，y的值也就确定了，x范围被称为定义域，y的范围为值域，对应于D3比例尺中的domain和range。D3为我们提供了很多比例尺，这里主要讲这里柱状图所要使用的线性比例尺。</p>\n <figure class=\"highlight js\"><table><tr><td class=\"gutter\"><pre><div class=\"line\">1</div><div class=\"line\">2</div><div class=\"line\">3</div><div class=\"line\">4</div><div class=\"line\">5</div><div class=\"line\">6</div></pre></td><td class=\"code\"><pre><div class=\"line\"><span class=\"keyword\">var</span> min = d3.min(data);</div><div class=\"line\"><span class=\"keyword\">var</span> max = d3.max(data);</div><div class=\"line\"></div><div class=\"line\"><span class=\"keyword\">var</span> linear = d3.scale.linear()</div><div class=\"line\">.domain([min, max])</div><div class=\"line\">.range([<span class=\"number\">0</span>, <span class=\"number\">300</span>]);</div></pre></td></tr></table></figure>\n</li>\n<li><p>绘制坐标轴</p>\n <figure class=\"highlight js\"><table><tr><td class=\"gutter\"><pre><div class=\"line\">1</div><div class=\"line\">2</div><div class=\"line\">3</div><div class=\"line\">4</div><div class=\"line\">5</div><div class=\"line\">6</div><div class=\"line\">7</div><div class=\"line\">8</div><div class=\"line\">9</div><div class=\"line\">10</div><div class=\"line\">11</div></pre></td><td class=\"code\"><pre><div class=\"line\"><span class=\"comment\">//数据</span></div><div class=\"line\"><span class=\"keyword\">var</span> dataset = [ <span class=\"number\">2.5</span> , <span class=\"number\">2.1</span> , <span class=\"number\">1.7</span> , <span class=\"number\">1.3</span> , <span class=\"number\">0.9</span> ];</div><div class=\"line\"><span class=\"comment\">//定义比例尺</span></div><div class=\"line\"><span class=\"keyword\">var</span> linear = d3.scale.linear()</div><div class=\"line\"> .domain([<span class=\"number\">0</span>, d3.max(dataset)])</div><div class=\"line\"> .range([<span class=\"number\">0</span>, <span class=\"number\">250</span>]);</div><div class=\"line\"></div><div class=\"line\"><span class=\"keyword\">var</span> axisX = d3.svg.axis()</div><div class=\"line\"> .scale(linear)      <span class=\"comment\">//指定比例尺</span></div><div class=\"line\"> .orient(<span class=\"string\">\"bottom\"</span>)   <span class=\"comment\">//指定刻度的方向</span></div><div class=\"line\"> .ticks(<span class=\"number\">7</span>);          <span class=\"comment\">//指定刻度的数量</span></div></pre></td></tr></table></figure>\n<p> 定义了坐标轴之后，只要在svg中添加一个分组元素，再将坐标轴的其他元素添加到分组即可。</p>\n <figure class=\"highlight js\"><table><tr><td class=\"gutter\"><pre><div class=\"line\">1</div><div class=\"line\">2</div><div class=\"line\">3</div><div class=\"line\">4</div></pre></td><td class=\"code\"><pre><div class=\"line\">svg.append(<span class=\"string\">'g'</span>)</div><div class=\"line\">.attr(<span class=\"string\">'class'</span>, <span class=\"string\">'axis'</span>)</div><div class=\"line\">.attr(<span class=\"string\">'transform'</span>, <span class=\"string\">'translate(20, 130)'</span>)</div><div class=\"line\">.call(axisX);</div></pre></td></tr></table></figure>\n <figure class=\"highlight css\"><table><tr><td class=\"gutter\"><pre><div class=\"line\">1</div><div class=\"line\">2</div><div class=\"line\">3</div><div class=\"line\">4</div><div class=\"line\">5</div><div class=\"line\">6</div><div class=\"line\">7</div><div class=\"line\">8</div><div class=\"line\">9</div><div class=\"line\">10</div><div class=\"line\">11</div></pre></td><td class=\"code\"><pre><div class=\"line\"><span class=\"comment\">/** 修改坐标轴样式 */</span></div><div class=\"line\"><span class=\"selector-class\">.axis</span> <span class=\"selector-tag\">path</span>,</div><div class=\"line\"><span class=\"selector-class\">.axis</span> <span class=\"selector-tag\">line</span>&#123;</div><div class=\"line\">\t<span class=\"attribute\">fill</span>: none;</div><div class=\"line\">\t<span class=\"attribute\">stroke</span>: black;</div><div class=\"line\">\t<span class=\"attribute\">shape-rendering</span>: crispEdges;</div><div class=\"line\">&#125;</div><div class=\"line\"><span class=\"selector-class\">.axis</span> <span class=\"selector-tag\">text</span>&#123;</div><div class=\"line\">\t<span class=\"attribute\">font-family</span>: sans-serif;</div><div class=\"line\">\t<span class=\"attribute\">font-size</span>: <span class=\"number\">11px</span>;</div><div class=\"line\">&#125;</div></pre></td></tr></table></figure>\n</li>\n</ol>\n","excerpt":"","more":"<h4 id=\"简介\"><a href=\"#简介\" class=\"headerlink\" title=\"简介\"></a>简介</h4><p>D3.js（后面简称D3，官方首页<a href=\"https://d3js.org/\">https://d3js.org/</a>）是基于JavaScript开发的一套用于数据可视化工具，项目开源在GitHub，项目排名靠前。它提供了很多API，如DOM（<code>Document Object Model</code>）的一些操作，绘制图形等。截止本文发表时间，D3已更新到v4，v4在v3的基础上，有了很大的改变（因为v3只支持通过svg和dom构图，所以v4在v3的基础上增加了对Canvas的支持以及API的修改）,本文使用的版本为v3的API。</p>\n<h4 id=\"Hello-World\"><a href=\"#Hello-World\" class=\"headerlink\" title=\"Hello World\"></a>Hello World</h4><figure class=\"highlight html\"><table><tr><td class=\"gutter\"><pre><div class=\"line\">1</div><div class=\"line\">2</div><div class=\"line\">3</div><div class=\"line\">4</div><div class=\"line\">5</div><div class=\"line\">6</div><div class=\"line\">7</div><div class=\"line\">8</div><div class=\"line\">9</div><div class=\"line\">10</div><div class=\"line\">11</div><div class=\"line\">12</div><div class=\"line\">13</div><div class=\"line\">14</div><div class=\"line\">15</div><div class=\"line\">16</div><div class=\"line\">17</div><div class=\"line\">18</div><div class=\"line\">19</div></pre></td><td class=\"code\"><pre><div class=\"line\"><span class=\"meta\">&lt;!DOCTYPE html&gt;</span></div><div class=\"line\"><span class=\"tag\">&lt;<span class=\"name\">html</span>&gt;</span></div><div class=\"line\">  <span class=\"tag\">&lt;<span class=\"name\">head</span>&gt;</span></div><div class=\"line\">\t\t<span class=\"tag\">&lt;<span class=\"name\">meta</span> <span class=\"attr\">charset</span>=<span class=\"string\">\"utf-8\"</span>&gt;</span></div><div class=\"line\">\t\t<span class=\"tag\">&lt;<span class=\"name\">title</span>&gt;</span>D3.js Hello World<span class=\"tag\">&lt;/<span class=\"name\">title</span>&gt;</span></div><div class=\"line\">\t\t<span class=\"tag\">&lt;<span class=\"name\">script</span> <span class=\"attr\">src</span>=<span class=\"string\">\"https://d3js.org/d3.v3.min.js\"</span>&gt;</span><span class=\"undefined\"></span><span class=\"tag\">&lt;/<span class=\"name\">script</span>&gt;</span></div><div class=\"line\">\t<span class=\"tag\">&lt;/<span class=\"name\">head</span>&gt;</span></div><div class=\"line\">\t<span class=\"tag\">&lt;<span class=\"name\">body</span>&gt;</span></div><div class=\"line\">\t\t<span class=\"tag\">&lt;<span class=\"name\">p</span>&gt;</span>first text<span class=\"tag\">&lt;/<span class=\"name\">p</span>&gt;</span></div><div class=\"line\">\t\t<span class=\"tag\">&lt;<span class=\"name\">p</span>&gt;</span>second text<span class=\"tag\">&lt;/<span class=\"name\">p</span>&gt;</span></div><div class=\"line\">\t\t<span class=\"tag\">&lt;<span class=\"name\">p</span>&gt;</span>third text<span class=\"tag\">&lt;/<span class=\"name\">p</span>&gt;</span></div><div class=\"line\">\t\t<span class=\"tag\">&lt;<span class=\"name\">script</span>&gt;</span><span class=\"javascript\"></div><div class=\"line\">\t\t<span class=\"keyword\">var</span> p = d3.select(<span class=\"string\">'body'</span>).selectAll(<span class=\"string\">'p'</span>)</div><div class=\"line\">\t\t.attr(<span class=\"string\">'color'</span>, <span class=\"string\">'red'</span>)</div><div class=\"line\">\t\t.attr(<span class=\"string\">'font-size'</span>, <span class=\"string\">'72px'</span>)</div><div class=\"line\">\t\t.text(<span class=\"string\">'brucewar'</span>);</div><div class=\"line\">\t\t</span><span class=\"tag\">&lt;/<span class=\"name\">script</span>&gt;</span></div><div class=\"line\">\t<span class=\"tag\">&lt;/<span class=\"name\">body</span>&gt;</span></div><div class=\"line\"><span class=\"tag\">&lt;/<span class=\"name\">html</span>&gt;</span></div></pre></td></tr></table></figure>\n<p>上面代码展示了基本的DOM操作，有过jQuery开发经历的人会发现其语法和jQuery很相似，主要是以下两点：</p>\n<ul>\n<li>支持元素选择器</li>\n<li>链式语法结构</li>\n</ul>\n<h5 id=\"插入元素\"><a href=\"#插入元素\" class=\"headerlink\" title=\"插入元素\"></a>插入元素</h5><figure class=\"highlight js\"><table><tr><td class=\"gutter\"><pre><div class=\"line\">1</div><div class=\"line\">2</div><div class=\"line\">3</div><div class=\"line\">4</div></pre></td><td class=\"code\"><pre><div class=\"line\"><span class=\"comment\">// 末尾插入p元素</span></div><div class=\"line\">d3.select(<span class=\"string\">'body'</span>).append(<span class=\"string\">'p'</span>).text(<span class=\"string\">'append new prograph'</span>);</div><div class=\"line\"><span class=\"comment\">// 在第一个p元素之前插入p</span></div><div class=\"line\">d3.select(<span class=\"string\">'p'</span>).insert(<span class=\"string\">'p'</span>).text(<span class=\"string\">'insert new prograph'</span>);</div></pre></td></tr></table></figure>\n<h5 id=\"删除元素\"><a href=\"#删除元素\" class=\"headerlink\" title=\"删除元素\"></a>删除元素</h5><figure class=\"highlight js\"><table><tr><td class=\"gutter\"><pre><div class=\"line\">1</div></pre></td><td class=\"code\"><pre><div class=\"line\">d3.select(<span class=\"string\">'p'</span>).remove();</div></pre></td></tr></table></figure>\n<h4 id=\"数据绑定\"><a href=\"#数据绑定\" class=\"headerlink\" title=\"数据绑定\"></a>数据绑定</h4><p>在D3中，选择器通常和数据绑定一起使用，这里的<strong>数据绑定</strong>的意思是将DOM元素与数据进行绑定，当需要依靠数据操作元素会非常方便。<br><figure class=\"highlight js\"><table><tr><td class=\"gutter\"><pre><div class=\"line\">1</div><div class=\"line\">2</div><div class=\"line\">3</div><div class=\"line\">4</div><div class=\"line\">5</div></pre></td><td class=\"code\"><pre><div class=\"line\"><span class=\"keyword\">var</span> arr = [<span class=\"string\">'a'</span>, <span class=\"string\">'b'</span>, <span class=\"string\">'c'</span>];</div><div class=\"line\">p.data(arr).text(<span class=\"function\"><span class=\"keyword\">function</span>(<span class=\"params\">d, i</span>)</span>&#123;</div><div class=\"line\">\t<span class=\"comment\">// d: 数据 i: 元素索引</span></div><div class=\"line\">\t<span class=\"keyword\">return</span> d;</div><div class=\"line\">&#125;);</div></pre></td></tr></table></figure></p>\n<h4 id=\"绘制简单的横向柱状图\"><a href=\"#绘制简单的横向柱状图\" class=\"headerlink\" title=\"绘制简单的横向柱状图\"></a>绘制简单的横向柱状图</h4><ol>\n<li><p>添加svg画布</p>\n <figure class=\"highlight js\"><table><tr><td class=\"gutter\"><pre><div class=\"line\">1</div><div class=\"line\">2</div><div class=\"line\">3</div><div class=\"line\">4</div><div class=\"line\">5</div><div class=\"line\">6</div><div class=\"line\">7</div></pre></td><td class=\"code\"><pre><div class=\"line\"><span class=\"keyword\">var</span> width = <span class=\"number\">300</span>;</div><div class=\"line\"><span class=\"keyword\">var</span> height = <span class=\"number\">300</span>;</div><div class=\"line\"></div><div class=\"line\"><span class=\"keyword\">var</span> svg = d3.select(<span class=\"string\">'body'</span>)</div><div class=\"line\">.append(<span class=\"string\">'svg'</span>)</div><div class=\"line\">.attr(<span class=\"string\">'width'</span>. width)</div><div class=\"line\">.attr(<span class=\"string\">'height'</span>, height);</div></pre></td></tr></table></figure>\n</li>\n<li><p>绘制矩形</p>\n <figure class=\"highlight js\"><table><tr><td class=\"gutter\"><pre><div class=\"line\">1</div><div class=\"line\">2</div><div class=\"line\">3</div><div class=\"line\">4</div><div class=\"line\">5</div><div class=\"line\">6</div><div class=\"line\">7</div><div class=\"line\">8</div><div class=\"line\">9</div><div class=\"line\">10</div><div class=\"line\">11</div><div class=\"line\">12</div><div class=\"line\">13</div><div class=\"line\">14</div><div class=\"line\">15</div><div class=\"line\">16</div></pre></td><td class=\"code\"><pre><div class=\"line\"><span class=\"keyword\">var</span> data = [<span class=\"number\">250</span>, <span class=\"number\">210</span>, <span class=\"number\">170</span>, <span class=\"number\">130</span>, <span class=\"number\">90</span>]; <span class=\"comment\">// 表示矩形的宽度</span></div><div class=\"line\"><span class=\"keyword\">var</span> rectHeight = <span class=\"number\">25</span>;</div><div class=\"line\"></div><div class=\"line\">svg.selectAll(<span class=\"string\">'rect'</span>)</div><div class=\"line\">.data(data)</div><div class=\"line\">.enter()\t<span class=\"comment\">// 当元素个数不足数据个数时，自动补全</span></div><div class=\"line\">.append(<span class=\"string\">'rect'</span>)</div><div class=\"line\">.attr(<span class=\"string\">'x'</span>, <span class=\"number\">20</span>)</div><div class=\"line\">.attr(<span class=\"string\">'y'</span>, <span class=\"function\"><span class=\"keyword\">function</span>(<span class=\"params\">d, i</span>)</span>&#123;</div><div class=\"line\">\t<span class=\"keyword\">return</span> i * rectHeight;</div><div class=\"line\">&#125;)</div><div class=\"line\">.attr(<span class=\"string\">'width'</span>, <span class=\"function\"><span class=\"keyword\">function</span>(<span class=\"params\">d</span>)</span>&#123;</div><div class=\"line\">\t<span class=\"keyword\">return</span> d;</div><div class=\"line\">&#125;)</div><div class=\"line\">.attr(<span class=\"string\">'height'</span>, rectHeight - <span class=\"number\">2</span>)</div><div class=\"line\">.attr(<span class=\"string\">'fill'</span>, <span class=\"string\">'steelblue'</span>);</div></pre></td></tr></table></figure>\n<p> 从上面的代码可以看出当<code>data</code>中的数据大于画布的宽度时，绘制的矩形会超出画布，所以需要引入<em>比例尺</em>（Scale）的概念。比例尺的概念类似数学中的一元二次函数，有x和y两个未知数，当x的值确定时，y的值也就确定了，x范围被称为定义域，y的范围为值域，对应于D3比例尺中的domain和range。D3为我们提供了很多比例尺，这里主要讲这里柱状图所要使用的线性比例尺。</p>\n <figure class=\"highlight js\"><table><tr><td class=\"gutter\"><pre><div class=\"line\">1</div><div class=\"line\">2</div><div class=\"line\">3</div><div class=\"line\">4</div><div class=\"line\">5</div><div class=\"line\">6</div></pre></td><td class=\"code\"><pre><div class=\"line\"><span class=\"keyword\">var</span> min = d3.min(data);</div><div class=\"line\"><span class=\"keyword\">var</span> max = d3.max(data);</div><div class=\"line\"></div><div class=\"line\"><span class=\"keyword\">var</span> linear = d3.scale.linear()</div><div class=\"line\">.domain([min, max])</div><div class=\"line\">.range([<span class=\"number\">0</span>, <span class=\"number\">300</span>]);</div></pre></td></tr></table></figure>\n</li>\n<li><p>绘制坐标轴</p>\n <figure class=\"highlight js\"><table><tr><td class=\"gutter\"><pre><div class=\"line\">1</div><div class=\"line\">2</div><div class=\"line\">3</div><div class=\"line\">4</div><div class=\"line\">5</div><div class=\"line\">6</div><div class=\"line\">7</div><div class=\"line\">8</div><div class=\"line\">9</div><div class=\"line\">10</div><div class=\"line\">11</div></pre></td><td class=\"code\"><pre><div class=\"line\"><span class=\"comment\">//数据</span></div><div class=\"line\"><span class=\"keyword\">var</span> dataset = [ <span class=\"number\">2.5</span> , <span class=\"number\">2.1</span> , <span class=\"number\">1.7</span> , <span class=\"number\">1.3</span> , <span class=\"number\">0.9</span> ];</div><div class=\"line\"><span class=\"comment\">//定义比例尺</span></div><div class=\"line\"><span class=\"keyword\">var</span> linear = d3.scale.linear()</div><div class=\"line\"> .domain([<span class=\"number\">0</span>, d3.max(dataset)])</div><div class=\"line\"> .range([<span class=\"number\">0</span>, <span class=\"number\">250</span>]);</div><div class=\"line\"></div><div class=\"line\"><span class=\"keyword\">var</span> axisX = d3.svg.axis()</div><div class=\"line\"> .scale(linear)      <span class=\"comment\">//指定比例尺</span></div><div class=\"line\"> .orient(<span class=\"string\">\"bottom\"</span>)   <span class=\"comment\">//指定刻度的方向</span></div><div class=\"line\"> .ticks(<span class=\"number\">7</span>);          <span class=\"comment\">//指定刻度的数量</span></div></pre></td></tr></table></figure>\n<p> 定义了坐标轴之后，只要在svg中添加一个分组元素，再将坐标轴的其他元素添加到分组即可。</p>\n <figure class=\"highlight js\"><table><tr><td class=\"gutter\"><pre><div class=\"line\">1</div><div class=\"line\">2</div><div class=\"line\">3</div><div class=\"line\">4</div></pre></td><td class=\"code\"><pre><div class=\"line\">svg.append(<span class=\"string\">'g'</span>)</div><div class=\"line\">.attr(<span class=\"string\">'class'</span>, <span class=\"string\">'axis'</span>)</div><div class=\"line\">.attr(<span class=\"string\">'transform'</span>, <span class=\"string\">'translate(20, 130)'</span>)</div><div class=\"line\">.call(axisX);</div></pre></td></tr></table></figure>\n <figure class=\"highlight css\"><table><tr><td class=\"gutter\"><pre><div class=\"line\">1</div><div class=\"line\">2</div><div class=\"line\">3</div><div class=\"line\">4</div><div class=\"line\">5</div><div class=\"line\">6</div><div class=\"line\">7</div><div class=\"line\">8</div><div class=\"line\">9</div><div class=\"line\">10</div><div class=\"line\">11</div></pre></td><td class=\"code\"><pre><div class=\"line\"><span class=\"comment\">/** 修改坐标轴样式 */</span></div><div class=\"line\"><span class=\"selector-class\">.axis</span> <span class=\"selector-tag\">path</span>,</div><div class=\"line\"><span class=\"selector-class\">.axis</span> <span class=\"selector-tag\">line</span>&#123;</div><div class=\"line\">\t<span class=\"attribute\">fill</span>: none;</div><div class=\"line\">\t<span class=\"attribute\">stroke</span>: black;</div><div class=\"line\">\t<span class=\"attribute\">shape-rendering</span>: crispEdges;</div><div class=\"line\">&#125;</div><div class=\"line\"><span class=\"selector-class\">.axis</span> <span class=\"selector-tag\">text</span>&#123;</div><div class=\"line\">\t<span class=\"attribute\">font-family</span>: sans-serif;</div><div class=\"line\">\t<span class=\"attribute\">font-size</span>: <span class=\"number\">11px</span>;</div><div class=\"line\">&#125;</div></pre></td></tr></table></figure>\n</li>\n</ol>\n"}],"PostAsset":[],"PostCategory":[{"post_id":"civhg3j420008tonbs187gh1i","category_id":"civhg3j3b0004tonb8xo14klz","_id":"civhg3j4h000btonbg9xeg15t"},{"post_id":"civhg3j270000tonbap6ho7r2","category_id":"civhg3j3b0004tonb8xo14klz","_id":"civhg3j4j000dtonbkan6roau"},{"post_id":"civhg3j2y0002tonb4z0omdie","category_id":"civhg3j3b0004tonb8xo14klz","_id":"civhg3j4k000ftonbc86hk1eh"}],"PostTag":[{"post_id":"civhg3j270000tonbap6ho7r2","tag_id":"civhg3j3h0005tonb4t5eob3u","_id":"civhg3j4j000etonbhwrr3bug"},{"post_id":"civhg3j270000tonbap6ho7r2","tag_id":"civhg3j4c000atonbnb7t4hua","_id":"civhg3j4l000gtonb1r8op5rj"},{"post_id":"civhg3j2y0002tonb4z0omdie","tag_id":"civhg3j3h0005tonb4t5eob3u","_id":"civhg3j4q000jtonbkwr6glgi"},{"post_id":"civhg3j2y0002tonb4z0omdie","tag_id":"civhg3j4l000htonbvhwv2efr","_id":"civhg3j4r000ktonbyojgujnt"},{"post_id":"civhg3j3k0006tonbgv74cgy4","tag_id":"civhg3j4o000itonbhwr3mgzi","_id":"civhg3j4v000mtonb4i1tbwye"},{"post_id":"civhg3j420008tonbs187gh1i","tag_id":"civhg3j3h0005tonb4t5eob3u","_id":"civhg3j50000ntonbkoz89cn6"},{"post_id":"civhg3j420008tonbs187gh1i","tag_id":"civhg3j4s000ltonbmzmr40ug","_id":"civhg3j52000otonbgglw72p7"}],"Tag":[{"name":"D3","_id":"civhg3j3h0005tonb4t5eob3u"},{"name":"树状图","_id":"civhg3j4c000atonbnb7t4hua"},{"name":"柱状图","_id":"civhg3j4l000htonbvhwv2efr"},{"name":"利器","_id":"civhg3j4o000itonbhwr3mgzi"},{"name":"JavaScript","_id":"civhg3j4s000ltonbmzmr40ug"}]}}